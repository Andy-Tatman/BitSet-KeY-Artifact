\programVariables {
    int i;
    int x;
}

\rules {
    // The normal rule, adapted from unsignedShiftRightJintDef:
    unsignedShiftRightJlongDef {
    \schemaVar \term int left;
    \schemaVar \term int right;
    
    \find ( unsignedshiftrightJlong(left, right) )
    \replacewith (
        \if (left >= 0)
            \then (shiftrightJlong(left, right))
            \else (addJlong(shiftrightJlong(left, right),
                        shiftleftJlong(2,
                                        63 - right % 64)))
    )
    \heuristics ( userTaclets1 )
    };
}

// To prove this, insert the following using the Cut rule:
// i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58 | i = 59 | i = 60 | i = 61 | i = 62 | i = 63

\problem {
    inInt(i) & i >= 0 & i <= 63 & inLong(x) & x >= 0
    ->
    (
    (i = 63 -> unsignedshiftrightJlong(long_MIN + x, i) = 1)
    &
    (i < 63 -> unsignedshiftrightJlong(long_MIN + x, i) % 2 = unsignedshiftrightJlong(x, i) % 2)
    )
}