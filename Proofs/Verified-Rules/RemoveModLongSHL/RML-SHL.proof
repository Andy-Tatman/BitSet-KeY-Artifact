\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jun 19 13:42:20 CEST 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:off , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]NoTypeHierarchy=false
[NewSMT]Presburger=false
[NewSMT]identifier=OPEN
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=6000
[Strategy]Timeout=-1
"
}

\programVariables {
    int i;
}
\problem {
   geq(i, Z(0(#))) & lt(i, Z(3(6(#))))
->   moduloLong(shiftleft(Z(1(#)), i))
   = shiftleft(Z(1(#)), i)

}

\proof {
(keyLog "0" (keyUser "andyt" ) (keyVersion "666bcb0c95"))

(autoModeTime "1092")

(branch "dummy ID"
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "cut" (inst "cutFormula=(  (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
                                                                  = Z(0(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(1(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(2(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(3(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(4(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(5(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(6(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(7(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(8(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(9(#)))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(0(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(1(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(2(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(3(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(4(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(5(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(6(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(7(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(8(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(9(1(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(0(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(1(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(2(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(3(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(4(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(5(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(6(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(7(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(8(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(9(2(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(0(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(1(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(2(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(3(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(4(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(5(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(6(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(7(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(8(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(9(3(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(0(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(1(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(2(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(3(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(4(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(5(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(6(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(7(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(8(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(9(4(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(0(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(1(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(2(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(3(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(4(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(5(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(6(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(7(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(8(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(9(5(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(0(6(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(1(6(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(2(6(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
 | (  i<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>
    = Z(3(6(#))))<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 208 (cut)\",\"[]\")>>") (userinteraction))
(branch "CUT: i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58 | i = 59 | i = 60 | i = 61 | i = 62 | i = 63 TRUE"
   (rule "orLeft" (formula "1"))
   (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58 | i = 59 | i = 60 | i = 61 | i = 62"
      (rule "orLeft" (formula "1"))
      (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58 | i = 59 | i = 60 | i = 61"
         (rule "orLeft" (formula "1"))
         (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58 | i = 59 | i = 60"
            (rule "orLeft" (formula "1"))
            (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58 | i = 59"
               (rule "orLeft" (formula "1"))
               (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58"
                  (rule "orLeft" (formula "1"))
                  (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57"
                     (rule "orLeft" (formula "1"))
                     (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56"
                        (rule "orLeft" (formula "1"))
                        (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55"
                           (rule "orLeft" (formula "1"))
                           (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54"
                              (rule "orLeft" (formula "1"))
                              (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53"
                                 (rule "orLeft" (formula "1"))
                                 (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52"
                                    (rule "orLeft" (formula "1"))
                                    (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51"
                                       (rule "orLeft" (formula "1"))
                                       (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50"
                                          (rule "orLeft" (formula "1"))
                                          (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49"
                                             (rule "orLeft" (formula "1"))
                                             (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48"
                                                (rule "orLeft" (formula "1"))
                                                (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47"
                                                   (rule "orLeft" (formula "1"))
                                                   (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46"
                                                      (rule "orLeft" (formula "1"))
                                                      (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45"
                                                         (rule "orLeft" (formula "1"))
                                                         (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44"
                                                            (rule "orLeft" (formula "1"))
                                                            (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43"
                                                               (rule "orLeft" (formula "1"))
                                                               (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42"
                                                                  (rule "orLeft" (formula "1"))
                                                                  (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41"
                                                                     (rule "orLeft" (formula "1"))
                                                                     (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40"
                                                                        (rule "orLeft" (formula "1"))
                                                                        (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39"
                                                                           (rule "orLeft" (formula "1"))
                                                                           (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38"
                                                                              (rule "orLeft" (formula "1"))
                                                                              (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37"
                                                                                 (rule "orLeft" (formula "1"))
                                                                                 (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36"
                                                                                    (rule "orLeft" (formula "1"))
                                                                                    (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35"
                                                                                       (rule "orLeft" (formula "1"))
                                                                                       (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34"
                                                                                          (rule "orLeft" (formula "1"))
                                                                                          (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33"
                                                                                             (rule "orLeft" (formula "1"))
                                                                                             (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32"
                                                                                                (rule "orLeft" (formula "1"))
                                                                                                (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31"
                                                                                                   (rule "orLeft" (formula "1"))
                                                                                                   (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30"
                                                                                                      (rule "orLeft" (formula "1"))
                                                                                                      (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29"
                                                                                                         (rule "orLeft" (formula "1"))
                                                                                                         (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28"
                                                                                                            (rule "orLeft" (formula "1"))
                                                                                                            (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27"
                                                                                                               (rule "orLeft" (formula "1"))
                                                                                                               (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26"
                                                                                                                  (rule "orLeft" (formula "1"))
                                                                                                                  (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25"
                                                                                                                     (rule "orLeft" (formula "1"))
                                                                                                                     (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24"
                                                                                                                        (rule "orLeft" (formula "1"))
                                                                                                                        (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23"
                                                                                                                           (rule "orLeft" (formula "1"))
                                                                                                                           (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22"
                                                                                                                              (rule "orLeft" (formula "1"))
                                                                                                                              (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21"
                                                                                                                                 (rule "orLeft" (formula "1"))
                                                                                                                                 (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20"
                                                                                                                                    (rule "orLeft" (formula "1"))
                                                                                                                                    (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19"
                                                                                                                                       (rule "orLeft" (formula "1"))
                                                                                                                                       (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18"
                                                                                                                                          (rule "orLeft" (formula "1"))
                                                                                                                                          (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17"
                                                                                                                                             (rule "orLeft" (formula "1"))
                                                                                                                                             (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16"
                                                                                                                                                (rule "orLeft" (formula "1"))
                                                                                                                                                (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15"
                                                                                                                                                   (rule "orLeft" (formula "1"))
                                                                                                                                                   (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14"
                                                                                                                                                      (rule "orLeft" (formula "1"))
                                                                                                                                                      (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13"
                                                                                                                                                         (rule "orLeft" (formula "1"))
                                                                                                                                                         (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12"
                                                                                                                                                            (rule "orLeft" (formula "1"))
                                                                                                                                                            (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11"
                                                                                                                                                               (rule "orLeft" (formula "1"))
                                                                                                                                                               (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10"
                                                                                                                                                                  (rule "orLeft" (formula "1"))
                                                                                                                                                                  (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9"
                                                                                                                                                                     (rule "orLeft" (formula "1"))
                                                                                                                                                                     (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8"
                                                                                                                                                                        (rule "orLeft" (formula "1"))
                                                                                                                                                                        (branch " i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7"
                                                                                                                                                                           (rule "orLeft" (formula "1"))
                                                                                                                                                                           (branch "i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6"
                                                                                                                                                                              (rule "orLeft" (formula "1"))
                                                                                                                                                                              (branch "i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5"
                                                                                                                                                                                 (rule "orLeft" (formula "1"))
                                                                                                                                                                                 (branch "i = 0 | i = 1 | i = 2 | i = 3 | i = 4"
                                                                                                                                                                                    (rule "orLeft" (formula "1"))
                                                                                                                                                                                    (branch "i = 0 | i = 1 | i = 2 | i = 3"
                                                                                                                                                                                       (rule "orLeft" (formula "1"))
                                                                                                                                                                                       (branch "i = 0 | i = 1 | i = 2"
                                                                                                                                                                                          (rule "orLeft" (formula "1"))
                                                                                                                                                                                          (branch "i = 0 | i = 1"
                                                                                                                                                                                             (rule "orLeft" (formula "1"))
                                                                                                                                                                                             (branch "i = 0"
                                                                                                                                                                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                                                (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                                                (rule "eqSymm" (formula "4"))
                                                                                                                                                                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                                                                                                                                                                (rule "leq_literals" (formula "3"))
                                                                                                                                                                                                (rule "true_left" (formula "3"))
                                                                                                                                                                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "qeq_literals" (formula "2"))
                                                                                                                                                                                                (rule "true_left" (formula "2"))
                                                                                                                                                                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "eqSymm" (formula "2"))
                                                                                                                                                                                                (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                                                (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                                                (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                                                (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                                                (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                                (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                                                (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                                (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                                                (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "eqClose" (formula "2"))
                                                                                                                                                                                                (rule "closeTrue" (formula "2"))
                                                                                                                                                                                             )
                                                                                                                                                                                             (branch "i = 1"
                                                                                                                                                                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                                                (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                                                (rule "eqSymm" (formula "4"))
                                                                                                                                                                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                                                (rule "leq_literals" (formula "3"))
                                                                                                                                                                                                (rule "true_left" (formula "3"))
                                                                                                                                                                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "qeq_literals" (formula "2"))
                                                                                                                                                                                                (rule "true_left" (formula "2"))
                                                                                                                                                                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                                (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "eqSymm" (formula "2"))
                                                                                                                                                                                                (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                                                (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                                                (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                                                (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                                                (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                                (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                                                (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                                (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                                                (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                                                (rule "eqClose" (formula "2"))
                                                                                                                                                                                                (rule "closeTrue" (formula "2"))
                                                                                                                                                                                             )
                                                                                                                                                                                          )
                                                                                                                                                                                          (branch "i = 2"
                                                                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                                             (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                                             (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                                             (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                                             (rule "eqSymm" (formula "4"))
                                                                                                                                                                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                             (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                                             (rule "leq_literals" (formula "3"))
                                                                                                                                                                                             (rule "true_left" (formula "3"))
                                                                                                                                                                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                                             (rule "qeq_literals" (formula "2"))
                                                                                                                                                                                             (rule "true_left" (formula "2"))
                                                                                                                                                                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                             (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                                             (rule "eqSymm" (formula "2"))
                                                                                                                                                                                             (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                                             (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                                             (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                                             (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                                             (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                             (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                                             (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                                             (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                             (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                                             (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                             (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                                             (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                                             (rule "eqClose" (formula "2"))
                                                                                                                                                                                             (rule "closeTrue" (formula "2"))
                                                                                                                                                                                          )
                                                                                                                                                                                       )
                                                                                                                                                                                       (branch "i = 3"
                                                                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                                          (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                                          (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                                          (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                                          (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                                          (rule "eqSymm" (formula "4"))
                                                                                                                                                                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                          (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                                          (rule "leq_literals" (formula "3"))
                                                                                                                                                                                          (rule "true_left" (formula "3"))
                                                                                                                                                                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                                          (rule "qeq_literals" (formula "2"))
                                                                                                                                                                                          (rule "true_left" (formula "2"))
                                                                                                                                                                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                          (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                                          (rule "eqSymm" (formula "2"))
                                                                                                                                                                                          (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                                          (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                                          (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                                          (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                                          (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                          (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                                          (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                                          (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                          (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                                          (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                                          (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                                          (rule "eqClose" (formula "2"))
                                                                                                                                                                                          (rule "closeTrue" (formula "2"))
                                                                                                                                                                                       )
                                                                                                                                                                                    )
                                                                                                                                                                                    (branch "i = 4"
                                                                                                                                                                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                                       (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                                       (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                                       (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                                       (rule "eqSymm" (formula "4"))
                                                                                                                                                                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                       (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                                       (rule "leq_literals" (formula "3"))
                                                                                                                                                                                       (rule "true_left" (formula "3"))
                                                                                                                                                                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                                       (rule "qeq_literals" (formula "2"))
                                                                                                                                                                                       (rule "true_left" (formula "2"))
                                                                                                                                                                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                       (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                                       (rule "eqSymm" (formula "2"))
                                                                                                                                                                                       (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                                       (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                                       (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                                       (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                                       (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                       (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                                       (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                                       (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                                       (rule "eqClose" (formula "2"))
                                                                                                                                                                                       (rule "closeTrue" (formula "2"))
                                                                                                                                                                                    )
                                                                                                                                                                                 )
                                                                                                                                                                                 (branch "i = 5"
                                                                                                                                                                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                                    (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                                    (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                                    (rule "eqSymm" (formula "4"))
                                                                                                                                                                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                    (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                                    (rule "leq_literals" (formula "3"))
                                                                                                                                                                                    (rule "true_left" (formula "3"))
                                                                                                                                                                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                                    (rule "qeq_literals" (formula "2"))
                                                                                                                                                                                    (rule "true_left" (formula "2"))
                                                                                                                                                                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                    (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                                    (rule "eqSymm" (formula "2"))
                                                                                                                                                                                    (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                                    (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                                    (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                                    (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                                    (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                    (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                                    (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                                    (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                    (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                                    (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                    (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                                    (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                                    (rule "eqClose" (formula "2"))
                                                                                                                                                                                    (rule "closeTrue" (formula "2"))
                                                                                                                                                                                 )
                                                                                                                                                                              )
                                                                                                                                                                              (branch "i = 6"
                                                                                                                                                                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                                 (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                                 (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                                 (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                                 (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                                 (rule "eqSymm" (formula "4"))
                                                                                                                                                                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                 (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                                 (rule "leq_literals" (formula "3"))
                                                                                                                                                                                 (rule "true_left" (formula "3"))
                                                                                                                                                                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                                 (rule "qeq_literals" (formula "2"))
                                                                                                                                                                                 (rule "true_left" (formula "2"))
                                                                                                                                                                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                                 (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                                 (rule "eqSymm" (formula "2"))
                                                                                                                                                                                 (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                                 (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                                 (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                                 (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                                 (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                 (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                                 (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                                 (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                 (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                                 (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                                 (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                                 (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                                 (rule "eqClose" (formula "2"))
                                                                                                                                                                                 (rule "closeTrue" (formula "2"))
                                                                                                                                                                              )
                                                                                                                                                                           )
                                                                                                                                                                           (branch "i = 7"
                                                                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                              (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                              (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                              (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                              (rule "eqSymm" (formula "4"))
                                                                                                                                                                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                              (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                              (rule "leq_literals" (formula "3"))
                                                                                                                                                                              (rule "true_left" (formula "3"))
                                                                                                                                                                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                              (rule "qeq_literals" (formula "2"))
                                                                                                                                                                              (rule "true_left" (formula "2"))
                                                                                                                                                                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                              (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                              (rule "eqSymm" (formula "2"))
                                                                                                                                                                              (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                              (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                              (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                              (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                              (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                              (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                              (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                              (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                              (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                              (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                              (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                              (rule "eqClose" (formula "2"))
                                                                                                                                                                              (rule "closeTrue" (formula "2"))
                                                                                                                                                                           )
                                                                                                                                                                        )
                                                                                                                                                                        (branch "i = 8"
                                                                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                           (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                           (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                           (rule "eqSymm" (formula "4"))
                                                                                                                                                                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                           (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                           (rule "leq_literals" (formula "3"))
                                                                                                                                                                           (rule "true_left" (formula "3"))
                                                                                                                                                                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                           (rule "qeq_literals" (formula "2"))
                                                                                                                                                                           (rule "true_left" (formula "2"))
                                                                                                                                                                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                           (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                           (rule "eqSymm" (formula "2"))
                                                                                                                                                                           (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                           (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                           (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                           (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                           (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                           (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                           (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                           (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                           (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                           (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                           (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                           (rule "eqClose" (formula "2"))
                                                                                                                                                                           (rule "closeTrue" (formula "2"))
                                                                                                                                                                        )
                                                                                                                                                                     )
                                                                                                                                                                     (branch "i = 9"
                                                                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                        (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                        (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                        (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                        (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                        (rule "eqSymm" (formula "4"))
                                                                                                                                                                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                        (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                        (rule "leq_literals" (formula "3"))
                                                                                                                                                                        (rule "true_left" (formula "3"))
                                                                                                                                                                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                        (rule "qeq_literals" (formula "2"))
                                                                                                                                                                        (rule "true_left" (formula "2"))
                                                                                                                                                                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                        (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                        (rule "eqSymm" (formula "2"))
                                                                                                                                                                        (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                        (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                        (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                        (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                        (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                        (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                        (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                        (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                        (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                        (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                        (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                        (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                        (rule "eqClose" (formula "2"))
                                                                                                                                                                        (rule "closeTrue" (formula "2"))
                                                                                                                                                                     )
                                                                                                                                                                  )
                                                                                                                                                                  (branch "i = 10"
                                                                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                     (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                     (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                     (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                     (rule "eqSymm" (formula "4"))
                                                                                                                                                                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                     (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                     (rule "leq_literals" (formula "3"))
                                                                                                                                                                     (rule "true_left" (formula "3"))
                                                                                                                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                     (rule "qeq_literals" (formula "2"))
                                                                                                                                                                     (rule "true_left" (formula "2"))
                                                                                                                                                                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                     (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                     (rule "eqSymm" (formula "2"))
                                                                                                                                                                     (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                     (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                     (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                     (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                     (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                     (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                     (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                     (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                     (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                     (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                     (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                     (rule "eqClose" (formula "2"))
                                                                                                                                                                     (rule "closeTrue" (formula "2"))
                                                                                                                                                                  )
                                                                                                                                                               )
                                                                                                                                                               (branch "i = 11"
                                                                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                                  (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                                  (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                                  (rule "eqSymm" (formula "4"))
                                                                                                                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                  (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                                  (rule "leq_literals" (formula "3"))
                                                                                                                                                                  (rule "true_left" (formula "3"))
                                                                                                                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                                  (rule "qeq_literals" (formula "2"))
                                                                                                                                                                  (rule "true_left" (formula "2"))
                                                                                                                                                                  (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                                  (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                                  (rule "eqSymm" (formula "2"))
                                                                                                                                                                  (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                                  (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                                  (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                                  (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                                  (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                  (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                                  (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                                  (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                                  (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                                  (rule "eqClose" (formula "2"))
                                                                                                                                                                  (rule "closeTrue" (formula "2"))
                                                                                                                                                               )
                                                                                                                                                            )
                                                                                                                                                            (branch "i = 12"
                                                                                                                                                               (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                               (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                               (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                               (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                               (rule "eqSymm" (formula "4"))
                                                                                                                                                               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                               (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                               (rule "leq_literals" (formula "3"))
                                                                                                                                                               (rule "true_left" (formula "3"))
                                                                                                                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                               (rule "qeq_literals" (formula "2"))
                                                                                                                                                               (rule "true_left" (formula "2"))
                                                                                                                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                               (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                               (rule "eqSymm" (formula "2"))
                                                                                                                                                               (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                               (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                               (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                               (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                               (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                               (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                               (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                               (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                               (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                               (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                               (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                               (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                               (rule "eqClose" (formula "2"))
                                                                                                                                                               (rule "closeTrue" (formula "2"))
                                                                                                                                                            )
                                                                                                                                                         )
                                                                                                                                                         (branch "i = 13"
                                                                                                                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                            (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                            (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                            (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                            (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                            (rule "eqSymm" (formula "4"))
                                                                                                                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                            (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                            (rule "leq_literals" (formula "3"))
                                                                                                                                                            (rule "true_left" (formula "3"))
                                                                                                                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                            (rule "qeq_literals" (formula "2"))
                                                                                                                                                            (rule "true_left" (formula "2"))
                                                                                                                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                            (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                            (rule "eqSymm" (formula "2"))
                                                                                                                                                            (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                            (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                            (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                            (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                            (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                            (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                            (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                            (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                            (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                            (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                            (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                            (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                            (rule "eqClose" (formula "2"))
                                                                                                                                                            (rule "closeTrue" (formula "2"))
                                                                                                                                                         )
                                                                                                                                                      )
                                                                                                                                                      (branch "i = 14"
                                                                                                                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                         (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                         (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                         (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                         (rule "eqSymm" (formula "4"))
                                                                                                                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                         (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                         (rule "leq_literals" (formula "3"))
                                                                                                                                                         (rule "true_left" (formula "3"))
                                                                                                                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                         (rule "qeq_literals" (formula "2"))
                                                                                                                                                         (rule "true_left" (formula "2"))
                                                                                                                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                         (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                         (rule "eqSymm" (formula "2"))
                                                                                                                                                         (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                         (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                         (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                         (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                         (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                         (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                         (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                         (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                         (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                         (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                         (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                         (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                         (rule "eqClose" (formula "2"))
                                                                                                                                                         (rule "closeTrue" (formula "2"))
                                                                                                                                                      )
                                                                                                                                                   )
                                                                                                                                                   (branch "i = 15"
                                                                                                                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                      (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                      (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                      (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                      (rule "eqSymm" (formula "4"))
                                                                                                                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                      (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                      (rule "leq_literals" (formula "3"))
                                                                                                                                                      (rule "true_left" (formula "3"))
                                                                                                                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                      (rule "qeq_literals" (formula "2"))
                                                                                                                                                      (rule "true_left" (formula "2"))
                                                                                                                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                      (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                      (rule "eqSymm" (formula "2"))
                                                                                                                                                      (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                      (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                      (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                      (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                      (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                      (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                      (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                      (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                      (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                      (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                      (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                      (rule "eqClose" (formula "2"))
                                                                                                                                                      (rule "closeTrue" (formula "2"))
                                                                                                                                                   )
                                                                                                                                                )
                                                                                                                                                (branch "i = 16"
                                                                                                                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                   (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                   (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                   (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                   (rule "eqSymm" (formula "4"))
                                                                                                                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                   (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                   (rule "leq_literals" (formula "3"))
                                                                                                                                                   (rule "true_left" (formula "3"))
                                                                                                                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                   (rule "qeq_literals" (formula "2"))
                                                                                                                                                   (rule "true_left" (formula "2"))
                                                                                                                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                   (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                   (rule "eqSymm" (formula "2"))
                                                                                                                                                   (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                   (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                   (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                   (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                   (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                   (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                   (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                   (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                   (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                   (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                   (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                   (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                   (rule "eqClose" (formula "2"))
                                                                                                                                                   (rule "closeTrue" (formula "2"))
                                                                                                                                                )
                                                                                                                                             )
                                                                                                                                             (branch "i = 17"
                                                                                                                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                                (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                                (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                                (rule "eqSymm" (formula "4"))
                                                                                                                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                                (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                                (rule "leq_literals" (formula "3"))
                                                                                                                                                (rule "true_left" (formula "3"))
                                                                                                                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                                (rule "qeq_literals" (formula "2"))
                                                                                                                                                (rule "true_left" (formula "2"))
                                                                                                                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                                (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                                (rule "eqSymm" (formula "2"))
                                                                                                                                                (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                                (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                                (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                                (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                                (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                                (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                                (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                                (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                                (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                                (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                                (rule "eqClose" (formula "2"))
                                                                                                                                                (rule "closeTrue" (formula "2"))
                                                                                                                                             )
                                                                                                                                          )
                                                                                                                                          (branch "i = 18"
                                                                                                                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                             (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                             (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                             (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                             (rule "eqSymm" (formula "4"))
                                                                                                                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                             (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                             (rule "leq_literals" (formula "3"))
                                                                                                                                             (rule "true_left" (formula "3"))
                                                                                                                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                             (rule "qeq_literals" (formula "2"))
                                                                                                                                             (rule "true_left" (formula "2"))
                                                                                                                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                             (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                             (rule "eqSymm" (formula "2"))
                                                                                                                                             (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                             (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                             (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                             (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                             (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                             (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                             (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                             (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                             (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                             (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                             (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                             (rule "eqClose" (formula "2"))
                                                                                                                                             (rule "closeTrue" (formula "2"))
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                       (branch "i = 19"
                                                                                                                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                          (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                          (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                          (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                          (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                          (rule "eqSymm" (formula "4"))
                                                                                                                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                          (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                          (rule "leq_literals" (formula "3"))
                                                                                                                                          (rule "true_left" (formula "3"))
                                                                                                                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                          (rule "qeq_literals" (formula "2"))
                                                                                                                                          (rule "true_left" (formula "2"))
                                                                                                                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                          (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                          (rule "eqSymm" (formula "2"))
                                                                                                                                          (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                          (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                          (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                          (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                          (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                          (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                          (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                          (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                          (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                          (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                          (rule "eqClose" (formula "2"))
                                                                                                                                          (rule "closeTrue" (formula "2"))
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                    (branch "i = 20"
                                                                                                                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                       (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                       (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                       (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                       (rule "eqSymm" (formula "4"))
                                                                                                                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                       (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                       (rule "leq_literals" (formula "3"))
                                                                                                                                       (rule "true_left" (formula "3"))
                                                                                                                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                       (rule "qeq_literals" (formula "2"))
                                                                                                                                       (rule "true_left" (formula "2"))
                                                                                                                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                       (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                       (rule "eqSymm" (formula "2"))
                                                                                                                                       (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                       (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                       (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                       (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                       (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                       (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                       (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                       (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                       (rule "eqClose" (formula "2"))
                                                                                                                                       (rule "closeTrue" (formula "2"))
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                                 (branch "i = 21"
                                                                                                                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                    (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                    (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                    (rule "eqSymm" (formula "4"))
                                                                                                                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                    (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                    (rule "leq_literals" (formula "3"))
                                                                                                                                    (rule "true_left" (formula "3"))
                                                                                                                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                    (rule "qeq_literals" (formula "2"))
                                                                                                                                    (rule "true_left" (formula "2"))
                                                                                                                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                    (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                    (rule "eqSymm" (formula "2"))
                                                                                                                                    (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                    (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                    (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                    (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                    (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                    (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                    (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                    (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                    (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                    (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                    (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                    (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                    (rule "eqClose" (formula "2"))
                                                                                                                                    (rule "closeTrue" (formula "2"))
                                                                                                                                 )
                                                                                                                              )
                                                                                                                              (branch "i = 22"
                                                                                                                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                                 (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                                 (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                                 (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                                 (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                                 (rule "eqSymm" (formula "4"))
                                                                                                                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                                 (rule "add_literals" (formula "3") (term "0"))
                                                                                                                                 (rule "leq_literals" (formula "3"))
                                                                                                                                 (rule "true_left" (formula "3"))
                                                                                                                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                                 (rule "qeq_literals" (formula "2"))
                                                                                                                                 (rule "true_left" (formula "2"))
                                                                                                                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                                 (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                                 (rule "eqSymm" (formula "2"))
                                                                                                                                 (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                                 (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                                 (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                                 (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                                 (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                                 (rule "polySimp_homoEq" (formula "2"))
                                                                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                                 (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                                 (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                                 (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                                 (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                                 (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                                 (rule "add_literals" (formula "2") (term "0"))
                                                                                                                                 (rule "eqClose" (formula "2"))
                                                                                                                                 (rule "closeTrue" (formula "2"))
                                                                                                                              )
                                                                                                                           )
                                                                                                                           (branch "i = 23"
                                                                                                                              (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                              (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                              (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                              (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                              (rule "eqSymm" (formula "4"))
                                                                                                                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                              (rule "add_literals" (formula "3") (term "0"))
                                                                                                                              (rule "leq_literals" (formula "3"))
                                                                                                                              (rule "true_left" (formula "3"))
                                                                                                                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                              (rule "qeq_literals" (formula "2"))
                                                                                                                              (rule "true_left" (formula "2"))
                                                                                                                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                              (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                              (rule "eqSymm" (formula "2"))
                                                                                                                              (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                              (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                              (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                              (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                              (rule "polySimp_homoEq" (formula "2"))
                                                                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                              (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                              (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                              (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                              (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                              (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                              (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                              (rule "add_literals" (formula "2") (term "0"))
                                                                                                                              (rule "eqClose" (formula "2"))
                                                                                                                              (rule "closeTrue" (formula "2"))
                                                                                                                           )
                                                                                                                        )
                                                                                                                        (branch "i = 24"
                                                                                                                           (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                           (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                           (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "4"))
                                                                                                                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                           (rule "add_literals" (formula "3") (term "0"))
                                                                                                                           (rule "leq_literals" (formula "3"))
                                                                                                                           (rule "true_left" (formula "3"))
                                                                                                                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                           (rule "qeq_literals" (formula "2"))
                                                                                                                           (rule "true_left" (formula "2"))
                                                                                                                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                           (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                           (rule "eqSymm" (formula "2"))
                                                                                                                           (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                           (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                           (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                           (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                           (rule "polySimp_homoEq" (formula "2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                           (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                           (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                           (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                           (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                           (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                           (rule "add_literals" (formula "2") (term "0"))
                                                                                                                           (rule "eqClose" (formula "2"))
                                                                                                                           (rule "closeTrue" (formula "2"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "i = 25"
                                                                                                                        (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                        (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                        (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                        (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                        (rule "eqSymm" (formula "4"))
                                                                                                                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                        (rule "add_literals" (formula "3") (term "0"))
                                                                                                                        (rule "leq_literals" (formula "3"))
                                                                                                                        (rule "true_left" (formula "3"))
                                                                                                                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                        (rule "qeq_literals" (formula "2"))
                                                                                                                        (rule "true_left" (formula "2"))
                                                                                                                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                        (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                        (rule "eqSymm" (formula "2"))
                                                                                                                        (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                        (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                        (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                        (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                        (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                        (rule "polySimp_homoEq" (formula "2"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                        (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                        (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                        (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                        (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                        (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                        (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                        (rule "add_literals" (formula "2") (term "0"))
                                                                                                                        (rule "eqClose" (formula "2"))
                                                                                                                        (rule "closeTrue" (formula "2"))
                                                                                                                     )
                                                                                                                  )
                                                                                                                  (branch "i = 26"
                                                                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                     (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                     (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                     (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                     (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                     (rule "eqSymm" (formula "4"))
                                                                                                                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                     (rule "add_literals" (formula "3") (term "0"))
                                                                                                                     (rule "leq_literals" (formula "3"))
                                                                                                                     (rule "true_left" (formula "3"))
                                                                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                     (rule "qeq_literals" (formula "2"))
                                                                                                                     (rule "true_left" (formula "2"))
                                                                                                                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                     (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                     (rule "eqSymm" (formula "2"))
                                                                                                                     (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                     (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                     (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                     (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                     (rule "polySimp_homoEq" (formula "2"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                     (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                     (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                     (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                     (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                     (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                     (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                     (rule "add_literals" (formula "2") (term "0"))
                                                                                                                     (rule "eqClose" (formula "2"))
                                                                                                                     (rule "closeTrue" (formula "2"))
                                                                                                                  )
                                                                                                               )
                                                                                                               (branch "i = 27"
                                                                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                                  (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                                  (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                                  (rule "eqSymm" (formula "4"))
                                                                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                                  (rule "add_literals" (formula "3") (term "0"))
                                                                                                                  (rule "leq_literals" (formula "3"))
                                                                                                                  (rule "true_left" (formula "3"))
                                                                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                                  (rule "qeq_literals" (formula "2"))
                                                                                                                  (rule "true_left" (formula "2"))
                                                                                                                  (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                                  (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                                  (rule "eqSymm" (formula "2"))
                                                                                                                  (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                                  (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                                  (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                                  (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                                  (rule "polySimp_homoEq" (formula "2"))
                                                                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                                  (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                                  (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                                  (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                                  (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                                  (rule "add_literals" (formula "2") (term "0"))
                                                                                                                  (rule "eqClose" (formula "2"))
                                                                                                                  (rule "closeTrue" (formula "2"))
                                                                                                               )
                                                                                                            )
                                                                                                            (branch "i = 28"
                                                                                                               (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                               (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                               (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                               (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                               (rule "eqSymm" (formula "4"))
                                                                                                               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                               (rule "add_literals" (formula "3") (term "0"))
                                                                                                               (rule "leq_literals" (formula "3"))
                                                                                                               (rule "true_left" (formula "3"))
                                                                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                               (rule "qeq_literals" (formula "2"))
                                                                                                               (rule "true_left" (formula "2"))
                                                                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                               (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                               (rule "eqSymm" (formula "2"))
                                                                                                               (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                               (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                               (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                               (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                               (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                               (rule "polySimp_homoEq" (formula "2"))
                                                                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                               (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                               (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                               (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                               (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                               (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                               (rule "add_literals" (formula "2") (term "0"))
                                                                                                               (rule "eqClose" (formula "2"))
                                                                                                               (rule "closeTrue" (formula "2"))
                                                                                                            )
                                                                                                         )
                                                                                                         (branch "i = 29"
                                                                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                            (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                            (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                            (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                            (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                            (rule "eqSymm" (formula "4"))
                                                                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                            (rule "add_literals" (formula "3") (term "0"))
                                                                                                            (rule "leq_literals" (formula "3"))
                                                                                                            (rule "true_left" (formula "3"))
                                                                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                            (rule "qeq_literals" (formula "2"))
                                                                                                            (rule "true_left" (formula "2"))
                                                                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                            (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                            (rule "eqSymm" (formula "2"))
                                                                                                            (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                            (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                            (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                            (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                            (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                            (rule "polySimp_homoEq" (formula "2"))
                                                                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                            (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                            (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                            (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                            (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                            (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                            (rule "add_literals" (formula "2") (term "0"))
                                                                                                            (rule "eqClose" (formula "2"))
                                                                                                            (rule "closeTrue" (formula "2"))
                                                                                                         )
                                                                                                      )
                                                                                                      (branch "i = 30"
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                         (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                         (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                         (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                         (rule "eqSymm" (formula "4"))
                                                                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                         (rule "add_literals" (formula "3") (term "0"))
                                                                                                         (rule "leq_literals" (formula "3"))
                                                                                                         (rule "true_left" (formula "3"))
                                                                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                         (rule "qeq_literals" (formula "2"))
                                                                                                         (rule "true_left" (formula "2"))
                                                                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                         (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                         (rule "eqSymm" (formula "2"))
                                                                                                         (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                         (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                         (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                         (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                         (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                         (rule "polySimp_homoEq" (formula "2"))
                                                                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                         (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                         (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                         (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                         (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                         (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                         (rule "add_literals" (formula "2") (term "0"))
                                                                                                         (rule "eqClose" (formula "2"))
                                                                                                         (rule "closeTrue" (formula "2"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch "i = 31"
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                      (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                      (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                      (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                      (rule "eqSymm" (formula "4"))
                                                                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                      (rule "add_literals" (formula "3") (term "0"))
                                                                                                      (rule "leq_literals" (formula "3"))
                                                                                                      (rule "true_left" (formula "3"))
                                                                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                      (rule "qeq_literals" (formula "2"))
                                                                                                      (rule "true_left" (formula "2"))
                                                                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                      (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                      (rule "eqSymm" (formula "2"))
                                                                                                      (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                      (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                      (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                      (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                      (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                      (rule "polySimp_homoEq" (formula "2"))
                                                                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                      (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                      (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                      (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                      (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                      (rule "add_literals" (formula "2") (term "0"))
                                                                                                      (rule "eqClose" (formula "2"))
                                                                                                      (rule "closeTrue" (formula "2"))
                                                                                                   )
                                                                                                )
                                                                                                (branch "i = 32"
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                   (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                   (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                   (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                   (rule "eqSymm" (formula "4"))
                                                                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                   (rule "add_literals" (formula "3") (term "0"))
                                                                                                   (rule "leq_literals" (formula "3"))
                                                                                                   (rule "true_left" (formula "3"))
                                                                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                   (rule "qeq_literals" (formula "2"))
                                                                                                   (rule "true_left" (formula "2"))
                                                                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                   (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                   (rule "eqSymm" (formula "2"))
                                                                                                   (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                   (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                   (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                   (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                   (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                   (rule "polySimp_homoEq" (formula "2"))
                                                                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                   (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                   (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                   (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                   (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                   (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                   (rule "add_literals" (formula "2") (term "0"))
                                                                                                   (rule "eqClose" (formula "2"))
                                                                                                   (rule "closeTrue" (formula "2"))
                                                                                                )
                                                                                             )
                                                                                             (branch "i = 33"
                                                                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                                (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                                (rule "eqSymm" (formula "4"))
                                                                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                                (rule "add_literals" (formula "3") (term "0"))
                                                                                                (rule "leq_literals" (formula "3"))
                                                                                                (rule "true_left" (formula "3"))
                                                                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                (rule "qeq_literals" (formula "2"))
                                                                                                (rule "true_left" (formula "2"))
                                                                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                                (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                                (rule "eqSymm" (formula "2"))
                                                                                                (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                                (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                                (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                                (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                                (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                                (rule "polySimp_homoEq" (formula "2"))
                                                                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                                                                (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                                (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                                (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                                (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                                (rule "add_literals" (formula "2") (term "0"))
                                                                                                (rule "eqClose" (formula "2"))
                                                                                                (rule "closeTrue" (formula "2"))
                                                                                             )
                                                                                          )
                                                                                          (branch "i = 34"
                                                                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                             (rule "add_literals" (formula "3") (term "0,0"))
                                                                                             (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                             (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                             (rule "eqSymm" (formula "4"))
                                                                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                             (rule "add_literals" (formula "3") (term "0"))
                                                                                             (rule "leq_literals" (formula "3"))
                                                                                             (rule "true_left" (formula "3"))
                                                                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                             (rule "qeq_literals" (formula "2"))
                                                                                             (rule "true_left" (formula "2"))
                                                                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                             (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                             (rule "eqSymm" (formula "2"))
                                                                                             (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                             (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                             (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                             (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                             (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                             (rule "polySimp_homoEq" (formula "2"))
                                                                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                             (rule "add_literals" (formula "2") (term "0,0"))
                                                                                             (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                             (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                             (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                             (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                             (rule "add_literals" (formula "2") (term "0"))
                                                                                             (rule "eqClose" (formula "2"))
                                                                                             (rule "closeTrue" (formula "2"))
                                                                                          )
                                                                                       )
                                                                                       (branch "i = 35"
                                                                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                          (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                          (rule "add_literals" (formula "3") (term "0,0"))
                                                                                          (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                          (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                          (rule "eqSymm" (formula "4"))
                                                                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                          (rule "add_literals" (formula "3") (term "0"))
                                                                                          (rule "leq_literals" (formula "3"))
                                                                                          (rule "true_left" (formula "3"))
                                                                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                          (rule "qeq_literals" (formula "2"))
                                                                                          (rule "true_left" (formula "2"))
                                                                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                          (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                          (rule "eqSymm" (formula "2"))
                                                                                          (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                          (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                          (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                          (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                          (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                          (rule "polySimp_homoEq" (formula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                          (rule "add_literals" (formula "2") (term "0,0"))
                                                                                          (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                          (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                          (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                          (rule "add_literals" (formula "2") (term "0"))
                                                                                          (rule "eqClose" (formula "2"))
                                                                                          (rule "closeTrue" (formula "2"))
                                                                                       )
                                                                                    )
                                                                                    (branch "i = 36"
                                                                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                       (rule "add_literals" (formula "3") (term "0,0"))
                                                                                       (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                       (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                       (rule "eqSymm" (formula "4"))
                                                                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                       (rule "add_literals" (formula "3") (term "0"))
                                                                                       (rule "leq_literals" (formula "3"))
                                                                                       (rule "true_left" (formula "3"))
                                                                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                       (rule "qeq_literals" (formula "2"))
                                                                                       (rule "true_left" (formula "2"))
                                                                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                       (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                       (rule "eqSymm" (formula "2"))
                                                                                       (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                       (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                       (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                       (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                       (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                       (rule "polySimp_homoEq" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                       (rule "add_literals" (formula "2") (term "0,0"))
                                                                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                       (rule "add_literals" (formula "2") (term "0"))
                                                                                       (rule "eqClose" (formula "2"))
                                                                                       (rule "closeTrue" (formula "2"))
                                                                                    )
                                                                                 )
                                                                                 (branch "i = 37"
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0"))
                                                                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                    (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "4"))
                                                                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                    (rule "add_literals" (formula "3") (term "0"))
                                                                                    (rule "leq_literals" (formula "3"))
                                                                                    (rule "true_left" (formula "3"))
                                                                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "2"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                    (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                    (rule "eqSymm" (formula "2"))
                                                                                    (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                    (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                    (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                    (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,0"))
                                                                                    (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                    (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                    (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                    (rule "add_literals" (formula "2") (term "0"))
                                                                                    (rule "eqClose" (formula "2"))
                                                                                    (rule "closeTrue" (formula "2"))
                                                                                 )
                                                                              )
                                                                              (branch "i = 38"
                                                                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                 (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "3") (term "0,0"))
                                                                                 (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                                 (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                                 (rule "eqSymm" (formula "4"))
                                                                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                                 (rule "add_literals" (formula "3") (term "0"))
                                                                                 (rule "leq_literals" (formula "3"))
                                                                                 (rule "true_left" (formula "3"))
                                                                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                                 (rule "qeq_literals" (formula "2"))
                                                                                 (rule "true_left" (formula "2"))
                                                                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                                 (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                                 (rule "eqSymm" (formula "2"))
                                                                                 (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                                 (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                                 (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                                 (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                                 (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                                 (rule "polySimp_homoEq" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                 (rule "add_literals" (formula "2") (term "0,0"))
                                                                                 (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                                 (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                                 (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                                 (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                 (rule "add_literals" (formula "2") (term "0"))
                                                                                 (rule "eqClose" (formula "2"))
                                                                                 (rule "closeTrue" (formula "2"))
                                                                              )
                                                                           )
                                                                           (branch "i = 39"
                                                                              (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "3") (term "0,0"))
                                                                              (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                              (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                              (rule "eqSymm" (formula "4"))
                                                                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                              (rule "add_literals" (formula "3") (term "0"))
                                                                              (rule "leq_literals" (formula "3"))
                                                                              (rule "true_left" (formula "3"))
                                                                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "2"))
                                                                              (rule "true_left" (formula "2"))
                                                                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                              (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                              (rule "eqSymm" (formula "2"))
                                                                              (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                              (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                              (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                              (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                              (rule "add_literals" (formula "2") (term "0,0"))
                                                                              (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                              (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                              (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                              (rule "mul_literals" (formula "2") (term "1,0"))
                                                                              (rule "add_literals" (formula "2") (term "0"))
                                                                              (rule "eqClose" (formula "2"))
                                                                              (rule "closeTrue" (formula "2"))
                                                                           )
                                                                        )
                                                                        (branch "i = 40"
                                                                           (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                           (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                           (rule "eqSymm" (formula "4"))
                                                                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                           (rule "add_literals" (formula "3") (term "0"))
                                                                           (rule "leq_literals" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                           (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                           (rule "eqSymm" (formula "2"))
                                                                           (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                           (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                           (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                           (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                           (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                           (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0"))
                                                                           (rule "add_literals" (formula "2") (term "0"))
                                                                           (rule "eqClose" (formula "2"))
                                                                           (rule "closeTrue" (formula "2"))
                                                                        )
                                                                     )
                                                                     (branch "i = 41"
                                                                        (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                        (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0"))
                                                                        (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                        (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                        (rule "eqSymm" (formula "4"))
                                                                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "3") (term "0"))
                                                                        (rule "leq_literals" (formula "3"))
                                                                        (rule "true_left" (formula "3"))
                                                                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                        (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                        (rule "eqSymm" (formula "2"))
                                                                        (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                        (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                        (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                        (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                        (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "0,0"))
                                                                        (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                        (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                        (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                        (rule "mul_literals" (formula "2") (term "1,0"))
                                                                        (rule "add_literals" (formula "2") (term "0"))
                                                                        (rule "eqClose" (formula "2"))
                                                                        (rule "closeTrue" (formula "2"))
                                                                     )
                                                                  )
                                                                  (branch "i = 42"
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0"))
                                                                     (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                     (rule "eqSymm" (formula "4"))
                                                                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                     (rule "add_literals" (formula "3") (term "0"))
                                                                     (rule "leq_literals" (formula "3"))
                                                                     (rule "true_left" (formula "3"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                     (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                     (rule "eqSymm" (formula "2"))
                                                                     (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                     (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                     (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                     (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0"))
                                                                     (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                     (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                     (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                     (rule "mul_literals" (formula "2") (term "1,0"))
                                                                     (rule "add_literals" (formula "2") (term "0"))
                                                                     (rule "eqClose" (formula "2"))
                                                                     (rule "closeTrue" (formula "2"))
                                                                  )
                                                               )
                                                               (branch "i = 43"
                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                  (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                                  (rule "eqSymm" (formula "4"))
                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                  (rule "add_literals" (formula "3") (term "0"))
                                                                  (rule "leq_literals" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                  (rule "shiftleft_literals" (formula "2") (term "0"))
                                                                  (rule "eqSymm" (formula "2"))
                                                                  (rule "expand_moduloLong" (formula "2") (term "0"))
                                                                  (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                                  (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "add_literals" (formula "2") (term "0"))
                                                                  (rule "eqClose" (formula "2"))
                                                                  (rule "closeTrue" (formula "2"))
                                                               )
                                                            )
                                                            (branch "i = 44"
                                                               (rule "inEqSimp_ltToLeq" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                               (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                               (rule "eqSymm" (formula "4"))
                                                               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                               (rule "add_literals" (formula "3") (term "0"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                               (rule "shiftleft_literals" (formula "2") (term "0"))
                                                               (rule "eqSymm" (formula "2"))
                                                               (rule "expand_moduloLong" (formula "2") (term "0"))
                                                               (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                               (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                               (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_homoEq" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                               (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                               (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "add_literals" (formula "2") (term "0"))
                                                               (rule "eqClose" (formula "2"))
                                                               (rule "closeTrue" (formula "2"))
                                                            )
                                                         )
                                                         (branch "i = 45"
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0"))
                                                            (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                            (rule "eqSymm" (formula "4"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "add_literals" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "shiftleft_literals" (formula "2") (term "0"))
                                                            (rule "eqSymm" (formula "2"))
                                                            (rule "expand_moduloLong" (formula "2") (term "0"))
                                                            (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                            (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                            (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                            (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                            (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0"))
                                                            (rule "add_literals" (formula "2") (term "0"))
                                                            (rule "eqClose" (formula "2"))
                                                            (rule "closeTrue" (formula "2"))
                                                         )
                                                      )
                                                      (branch "i = 46"
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                         (rule "eqSymm" (formula "4"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                         (rule "add_literals" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "shiftleft_literals" (formula "2") (term "0"))
                                                         (rule "eqSymm" (formula "2"))
                                                         (rule "expand_moduloLong" (formula "2") (term "0"))
                                                         (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                         (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                         (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                         (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                         (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,0"))
                                                         (rule "add_literals" (formula "2") (term "0"))
                                                         (rule "eqClose" (formula "2"))
                                                         (rule "closeTrue" (formula "2"))
                                                      )
                                                   )
                                                   (branch "i = 47"
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                      (rule "eqSymm" (formula "4"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "shiftleft_literals" (formula "2") (term "0"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "expand_moduloLong" (formula "2") (term "0"))
                                                      (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                      (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                      (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                      (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "eqClose" (formula "2"))
                                                      (rule "closeTrue" (formula "2"))
                                                   )
                                                )
                                                (branch "i = 48"
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                   (rule "eqSymm" (formula "4"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "shiftleft_literals" (formula "2") (term "0"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "expand_moduloLong" (formula "2") (term "0"))
                                                   (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                   (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                   (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                   (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                   (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "eqClose" (formula "2"))
                                                   (rule "closeTrue" (formula "2"))
                                                )
                                             )
                                             (branch "i = 49"
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                                (rule "eqSymm" (formula "4"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "add_literals" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "shiftleft_literals" (formula "2") (term "0"))
                                                (rule "eqSymm" (formula "2"))
                                                (rule "expand_moduloLong" (formula "2") (term "0"))
                                                (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                                (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                                (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_homoEq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                                (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "eqClose" (formula "2"))
                                                (rule "closeTrue" (formula "2"))
                                             )
                                          )
                                          (branch "i = 50"
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                             (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "shiftleft_literals" (formula "2") (term "0"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "expand_moduloLong" (formula "2") (term "0"))
                                             (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                             (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                             (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_homoEq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                             (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "add_literals" (formula "2") (term "0"))
                                             (rule "eqClose" (formula "2"))
                                             (rule "closeTrue" (formula "2"))
                                          )
                                       )
                                       (branch "i = 51"
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                          (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "shiftleft_literals" (formula "2") (term "0"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "expand_moduloLong" (formula "2") (term "0"))
                                          (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                          (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                          (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_homoEq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "eqClose" (formula "2"))
                                          (rule "closeTrue" (formula "2"))
                                       )
                                    )
                                    (branch "i = 52"
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                       (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "shiftleft_literals" (formula "2") (term "0"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "expand_moduloLong" (formula "2") (term "0"))
                                       (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                       (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                       (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_homoEq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "eqClose" (formula "2"))
                                       (rule "closeTrue" (formula "2"))
                                    )
                                 )
                                 (branch "i = 53"
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                    (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                    (rule "add_literals" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "shiftleft_literals" (formula "2") (term "0"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "expand_moduloLong" (formula "2") (term "0"))
                                    (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                    (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                    (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_homoEq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "add_literals" (formula "2") (term "0"))
                                    (rule "eqClose" (formula "2"))
                                    (rule "closeTrue" (formula "2"))
                                 )
                              )
                              (branch "i = 54"
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                 (rule "shiftleft_literals" (formula "4") (term "0,0"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                 (rule "add_literals" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "shiftleft_literals" (formula "2") (term "0"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "expand_moduloLong" (formula "2") (term "0"))
                                 (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                                 (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                                 (rule "replace_long_MIN" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_homoEq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                 (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "eqClose" (formula "2"))
                                 (rule "closeTrue" (formula "2"))
                              )
                           )
                           (branch "i = 55"
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                              (rule "shiftleft_literals" (formula "4") (term "0,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "shiftleft_literals" (formula "2") (term "0"))
                              (rule "eqSymm" (formula "2"))
                              (rule "expand_moduloLong" (formula "2") (term "0"))
                              (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                              (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                              (rule "replace_long_MIN" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_homoEq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "mod_axiom" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,1,0"))
                              (rule "mul_literals" (formula "2") (term "1,0"))
                              (rule "add_literals" (formula "2") (term "0"))
                              (rule "eqClose" (formula "2"))
                              (rule "closeTrue" (formula "2"))
                           )
                        )
                        (branch "i = 56"
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                           (rule "shiftleft_literals" (formula "4") (term "0,0"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                           (rule "add_literals" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "shiftleft_literals" (formula "2") (term "0"))
                           (rule "eqSymm" (formula "2"))
                           (rule "expand_moduloLong" (formula "2") (term "0"))
                           (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                           (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                           (rule "replace_long_MIN" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_homoEq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "mod_axiom" (formula "2") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                           (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "2") (term "0,1,0"))
                           (rule "mul_literals" (formula "2") (term "1,0"))
                           (rule "add_literals" (formula "2") (term "0"))
                           (rule "eqClose" (formula "2"))
                           (rule "closeTrue" (formula "2"))
                        )
                     )
                     (branch "i = 57"
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                        (rule "shiftleft_literals" (formula "4") (term "0,0"))
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                        (rule "add_literals" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "shiftleft_literals" (formula "2") (term "0"))
                        (rule "eqSymm" (formula "2"))
                        (rule "expand_moduloLong" (formula "2") (term "0"))
                        (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                        (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                        (rule "replace_long_MIN" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "mod_axiom" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                        (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "2") (term "0,1,0"))
                        (rule "mul_literals" (formula "2") (term "1,0"))
                        (rule "add_literals" (formula "2") (term "0"))
                        (rule "eqClose" (formula "2"))
                        (rule "closeTrue" (formula "2"))
                     )
                  )
                  (branch "i = 58"
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                     (rule "shiftleft_literals" (formula "4") (term "0,0"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                     (rule "add_literals" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                     (rule "shiftleft_literals" (formula "2") (term "0"))
                     (rule "eqSymm" (formula "2"))
                     (rule "expand_moduloLong" (formula "2") (term "0"))
                     (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                     (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                     (rule "replace_long_MIN" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_homoEq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "mod_axiom" (formula "2") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                     (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                     (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "2") (term "0,1,0"))
                     (rule "mul_literals" (formula "2") (term "1,0"))
                     (rule "add_literals" (formula "2") (term "0"))
                     (rule "eqClose" (formula "2"))
                     (rule "closeTrue" (formula "2"))
                  )
               )
               (branch "i = 59"
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                  (rule "shiftleft_literals" (formula "4") (term "0,0"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                  (rule "add_literals" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                  (rule "shiftleft_literals" (formula "2") (term "0"))
                  (rule "eqSymm" (formula "2"))
                  (rule "expand_moduloLong" (formula "2") (term "0"))
                  (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
                  (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
                  (rule "replace_long_MIN" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_homoEq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "2") (term "0,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0"))
                  (rule "add_literals" (formula "2") (term "0"))
                  (rule "eqClose" (formula "2"))
                  (rule "closeTrue" (formula "2"))
               )
            )
            (branch "i = 60"
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
               (rule "shiftleft_literals" (formula "4") (term "0,0"))
               (rule "eqSymm" (formula "4"))
               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
               (rule "add_literals" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
               (rule "shiftleft_literals" (formula "2") (term "0"))
               (rule "eqSymm" (formula "2"))
               (rule "expand_moduloLong" (formula "2") (term "0"))
               (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
               (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
               (rule "replace_long_MIN" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_homoEq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "mod_axiom" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
               (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
               (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "2") (term "0,1,0"))
               (rule "mul_literals" (formula "2") (term "1,0"))
               (rule "add_literals" (formula "2") (term "0"))
               (rule "eqClose" (formula "2"))
               (rule "closeTrue" (formula "2"))
            )
         )
         (branch "i = 61"
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1,0,0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
            (rule "shiftleft_literals" (formula "4") (term "0,0"))
            (rule "eqSymm" (formula "4"))
            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
            (rule "add_literals" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
            (rule "shiftleft_literals" (formula "2") (term "0"))
            (rule "eqSymm" (formula "2"))
            (rule "expand_moduloLong" (formula "2") (term "0"))
            (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
            (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
            (rule "replace_long_MIN" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "0,1,0"))
            (rule "polySimp_homoEq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "mod_axiom" (formula "2") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
            (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
            (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "2") (term "0,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0"))
            (rule "add_literals" (formula "2") (term "0"))
            (rule "eqClose" (formula "2"))
            (rule "closeTrue" (formula "2"))
         )
      )
      (branch "i = 62"
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1,0,0"))
         (rule "add_literals" (formula "3") (term "0,0"))
         (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
         (rule "shiftleft_literals" (formula "4") (term "0,0"))
         (rule "eqSymm" (formula "4"))
         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
         (rule "add_literals" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
         (rule "shiftleft_literals" (formula "2") (term "0"))
         (rule "eqSymm" (formula "2"))
         (rule "expand_moduloLong" (formula "2") (term "0"))
         (rule "replace_long_RANGE" (formula "2") (term "1,1,0"))
         (rule "replace_long_HALFRANGE" (formula "2") (term "0,0,1,0"))
         (rule "replace_long_MIN" (formula "2") (term "0,0"))
         (rule "add_literals" (formula "2") (term "0,1,0"))
         (rule "polySimp_homoEq" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "mod_axiom" (formula "2") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
         (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
         (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
         (rule "add_zero_right" (formula "2") (term "0,1,0"))
         (rule "mul_literals" (formula "2") (term "1,0"))
         (rule "add_literals" (formula "2") (term "0"))
         (rule "eqClose" (formula "2"))
         (rule "closeTrue" (formula "2"))
      )
   )
   (branch "i = 63"
      (rule "inEqSimp_ltToLeq" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1,0,0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
      (rule "shiftleft_literals" (formula "4") (term "0,0"))
      (rule "eqSymm" (formula "4"))
      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
      (rule "add_literals" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
)
(branch "CUT: i = 0 | i = 1 | i = 2 | i = 3 | i = 4 | i = 5 | i = 6 | i = 7 | i = 8 | i = 9 | i = 10 | i = 11 | i = 12 | i = 13 | i = 14 | i = 15 | i = 16 | i = 17 | i = 18 | i = 19 | i = 20 | i = 21 | i = 22 | i = 23 | i = 24 | i = 25 | i = 26 | i = 27 | i = 28 | i = 29 | i = 30 | i = 31 | i = 32 | i = 33 | i = 34 | i = 35 | i = 36 | i = 37 | i = 38 | i = 39 | i = 40 | i = 41 | i = 42 | i = 43 | i = 44 | i = 45 | i = 46 | i = 47 | i = 48 | i = 49 | i = 50 | i = 51 | i = 52 | i = 53 | i = 54 | i = 55 | i = 56 | i = 57 | i = 58 | i = 59 | i = 60 | i = 61 | i = 62 | i = 63 FALSE"
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "orRight" (formula "3"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "66") (ifseqformula "2"))
   (rule "mul_literals" (formula "66") (term "1,0,0"))
   (rule "add_literals" (formula "66") (term "0,0"))
   (rule "qeq_literals" (formula "66") (term "0"))
   (rule "concrete_and_2" (formula "66"))
   (rule "false_right" (formula "66"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_zero_right" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_zero_right" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "64"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "64") (ifseqformula "2"))
   (rule "mul_literals" (formula "64") (term "1,0,0"))
   (rule "add_literals" (formula "64") (term "0,0"))
   (rule "qeq_literals" (formula "64") (term "0"))
   (rule "concrete_and_2" (formula "64"))
   (rule "false_right" (formula "64"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "63"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "63") (ifseqformula "2"))
   (rule "mul_literals" (formula "63") (term "1,0,0"))
   (rule "add_literals" (formula "63") (term "0,0"))
   (rule "qeq_literals" (formula "63") (term "0"))
   (rule "concrete_and_2" (formula "63"))
   (rule "false_right" (formula "63"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "60"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "60") (ifseqformula "2"))
   (rule "mul_literals" (formula "60") (term "1,0,0"))
   (rule "add_literals" (formula "60") (term "0,0"))
   (rule "qeq_literals" (formula "60") (term "0"))
   (rule "concrete_and_2" (formula "60"))
   (rule "false_right" (formula "60"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "59"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "59") (ifseqformula "2"))
   (rule "mul_literals" (formula "59") (term "1,0,0"))
   (rule "add_literals" (formula "59") (term "0,0"))
   (rule "qeq_literals" (formula "59") (term "0"))
   (rule "concrete_and_2" (formula "59"))
   (rule "false_right" (formula "59"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "56"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "56") (ifseqformula "2"))
   (rule "mul_literals" (formula "56") (term "1,0,0"))
   (rule "add_literals" (formula "56") (term "0,0"))
   (rule "qeq_literals" (formula "56") (term "0"))
   (rule "concrete_and_2" (formula "56"))
   (rule "false_right" (formula "56"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "55"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "55") (ifseqformula "2"))
   (rule "mul_literals" (formula "55") (term "1,0,0"))
   (rule "add_literals" (formula "55") (term "0,0"))
   (rule "qeq_literals" (formula "55") (term "0"))
   (rule "concrete_and_2" (formula "55"))
   (rule "false_right" (formula "55"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "52"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "52") (ifseqformula "2"))
   (rule "mul_literals" (formula "52") (term "1,0,0"))
   (rule "add_literals" (formula "52") (term "0,0"))
   (rule "qeq_literals" (formula "52") (term "0"))
   (rule "concrete_and_2" (formula "52"))
   (rule "false_right" (formula "52"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "51"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "51") (ifseqformula "2"))
   (rule "mul_literals" (formula "51") (term "1,0,0"))
   (rule "add_literals" (formula "51") (term "0,0"))
   (rule "qeq_literals" (formula "51") (term "0"))
   (rule "concrete_and_2" (formula "51"))
   (rule "false_right" (formula "51"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "48"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "2"))
   (rule "mul_literals" (formula "48") (term "1,0,0"))
   (rule "add_literals" (formula "48") (term "0,0"))
   (rule "qeq_literals" (formula "48") (term "0"))
   (rule "concrete_and_2" (formula "48"))
   (rule "false_right" (formula "48"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "47"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "2"))
   (rule "mul_literals" (formula "47") (term "1,0,0"))
   (rule "add_literals" (formula "47") (term "0,0"))
   (rule "qeq_literals" (formula "47") (term "0"))
   (rule "concrete_and_2" (formula "47"))
   (rule "false_right" (formula "47"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "44"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "2"))
   (rule "mul_literals" (formula "44") (term "1,0,0"))
   (rule "add_literals" (formula "44") (term "0,0"))
   (rule "qeq_literals" (formula "44") (term "0"))
   (rule "concrete_and_2" (formula "44"))
   (rule "false_right" (formula "44"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "43"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "2"))
   (rule "mul_literals" (formula "43") (term "1,0,0"))
   (rule "add_literals" (formula "43") (term "0,0"))
   (rule "qeq_literals" (formula "43") (term "0"))
   (rule "concrete_and_2" (formula "43"))
   (rule "false_right" (formula "43"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "40"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "2"))
   (rule "mul_literals" (formula "40") (term "1,0,0"))
   (rule "add_literals" (formula "40") (term "0,0"))
   (rule "qeq_literals" (formula "40") (term "0"))
   (rule "concrete_and_2" (formula "40"))
   (rule "false_right" (formula "40"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "39"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "2"))
   (rule "mul_literals" (formula "39") (term "1,0,0"))
   (rule "add_literals" (formula "39") (term "0,0"))
   (rule "qeq_literals" (formula "39") (term "0"))
   (rule "concrete_and_2" (formula "39"))
   (rule "false_right" (formula "39"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "36"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "2"))
   (rule "mul_literals" (formula "36") (term "1,0,0"))
   (rule "add_literals" (formula "36") (term "0,0"))
   (rule "qeq_literals" (formula "36") (term "0"))
   (rule "concrete_and_2" (formula "36"))
   (rule "false_right" (formula "36"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
   (rule "mul_literals" (formula "35") (term "1,0,0"))
   (rule "add_literals" (formula "35") (term "0,0"))
   (rule "qeq_literals" (formula "35") (term "0"))
   (rule "concrete_and_2" (formula "35"))
   (rule "false_right" (formula "35"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "32"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "2"))
   (rule "mul_literals" (formula "32") (term "1,0,0"))
   (rule "add_literals" (formula "32") (term "0,0"))
   (rule "qeq_literals" (formula "32") (term "0"))
   (rule "concrete_and_2" (formula "32"))
   (rule "false_right" (formula "32"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
   (rule "mul_literals" (formula "31") (term "1,0,0"))
   (rule "add_literals" (formula "31") (term "0,0"))
   (rule "qeq_literals" (formula "31") (term "0"))
   (rule "concrete_and_2" (formula "31"))
   (rule "false_right" (formula "31"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "28"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "2"))
   (rule "mul_literals" (formula "28") (term "1,0,0"))
   (rule "add_literals" (formula "28") (term "0,0"))
   (rule "qeq_literals" (formula "28") (term "0"))
   (rule "concrete_and_2" (formula "28"))
   (rule "false_right" (formula "28"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "27"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "2"))
   (rule "mul_literals" (formula "27") (term "1,0,0"))
   (rule "add_literals" (formula "27") (term "0,0"))
   (rule "qeq_literals" (formula "27") (term "0"))
   (rule "concrete_and_2" (formula "27"))
   (rule "false_right" (formula "27"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "24"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "2"))
   (rule "mul_literals" (formula "24") (term "1,0,0"))
   (rule "add_literals" (formula "24") (term "0,0"))
   (rule "qeq_literals" (formula "24") (term "0"))
   (rule "concrete_and_2" (formula "24"))
   (rule "false_right" (formula "24"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "23"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "2"))
   (rule "mul_literals" (formula "23") (term "1,0,0"))
   (rule "add_literals" (formula "23") (term "0,0"))
   (rule "qeq_literals" (formula "23") (term "0"))
   (rule "concrete_and_2" (formula "23"))
   (rule "false_right" (formula "23"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "20"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "2"))
   (rule "mul_literals" (formula "20") (term "1,0,0"))
   (rule "add_literals" (formula "20") (term "0,0"))
   (rule "qeq_literals" (formula "20") (term "0"))
   (rule "concrete_and_2" (formula "20"))
   (rule "false_right" (formula "20"))
   (rule "shiftLeftDef" (formula "20") (term "1"))
   (rule "eqSymm" (formula "20"))
   (rule "polySimp_elimOneLeft0" (formula "20") (term "2,0"))
   (rule "polySimp_elimNeg" (formula "20") (term "1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0"))
   (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
   (rule "mul_literals" (formula "20") (term "1,0,0"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "18"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "2"))
   (rule "mul_literals" (formula "18") (term "1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0"))
   (rule "qeq_literals" (formula "18") (term "0"))
   (rule "concrete_and_2" (formula "18"))
   (rule "false_right" (formula "18"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "17"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "2"))
   (rule "mul_literals" (formula "17") (term "1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0"))
   (rule "qeq_literals" (formula "17") (term "0"))
   (rule "concrete_and_2" (formula "17"))
   (rule "false_right" (formula "17"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "14"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "2"))
   (rule "mul_literals" (formula "14") (term "1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0"))
   (rule "qeq_literals" (formula "14") (term "0"))
   (rule "concrete_and_2" (formula "14"))
   (rule "false_right" (formula "14"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "13"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "2"))
   (rule "mul_literals" (formula "13") (term "1,0,0"))
   (rule "add_literals" (formula "13") (term "0,0"))
   (rule "qeq_literals" (formula "13") (term "0"))
   (rule "concrete_and_2" (formula "13"))
   (rule "false_right" (formula "13"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "11"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "11") (ifseqformula "2"))
   (rule "mul_literals" (formula "11") (term "1,0,0"))
   (rule "add_literals" (formula "11") (term "0,0"))
   (rule "qeq_literals" (formula "11") (term "0"))
   (rule "concrete_and_2" (formula "11"))
   (rule "false_right" (formula "11"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "8"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "8") (ifseqformula "2"))
   (rule "mul_literals" (formula "8") (term "1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0"))
   (rule "qeq_literals" (formula "8") (term "0"))
   (rule "concrete_and_2" (formula "8"))
   (rule "false_right" (formula "8"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "6"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "6") (ifseqformula "2"))
   (rule "mul_literals" (formula "6") (term "1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0"))
   (rule "qeq_literals" (formula "6") (term "0"))
   (rule "concrete_and_2" (formula "6"))
   (rule "false_right" (formula "6"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "5"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "5") (ifseqformula "2"))
   (rule "mul_literals" (formula "5") (term "1,0,0"))
   (rule "add_literals" (formula "5") (term "0,0"))
   (rule "qeq_literals" (formula "5") (term "0"))
   (rule "concrete_and_2" (formula "5"))
   (rule "false_right" (formula "5"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "3"))
   (rule "add_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "1"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "3"))
   (rule "add_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "3") (ifseqformula "2"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "qeq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "false_right" (formula "3"))
   (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "3") (term "0,0,0"))
   (rule "concrete_and_2" (formula "3") (term "0,0"))
   (rule "ifthenelse_false" (formula "3") (term "0"))
   (rule "eqSymm" (formula "3"))
   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1") (term "0"))
   (rule "concrete_and_2" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)
}
