\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Aug 15 16:12:15 CEST 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:off , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]NoTypeHierarchy=false
[NewSMT]Presburger=false
[NewSMT]identifier=OPEN
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=20000
[Strategy]Timeout=-1
"
}

\bootclasspath "../../Edited-BitSet/java";

\javaSource "../../Edited-BitSet/src";

\proofObligation "#Proof Obligation Settings
#Tue Aug 15 16:12:15 CEST 2023
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
contract=java.util.BitSet[java.util.BitSet\\:\\:expandTo(int)].JML normal_behavior operation contract.0
name=java.util.BitSet[java.util.BitSet\\:\\:expandTo(int)].JML normal_behavior operation contract.0
";

\proof {
(keyLog "0" (keyUser "andyt" ) (keyVersion "666bcb0c95"))

(autoModeTime "38388")

(branch "dummy ID"
(rule "insert_constant_value" (formula "1") (term "1,1,1,0,1,0") (newnames "heapAtPre,o,f"))
(rule "insert_constant_value" (formula "1") (term "0,1,1,0,1,0"))
(rule "insert_constant_value" (formula "1") (term "1,0,1,0,1,1,1,1,1,1,0,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "0,0,1,0,1,1,1,1,1,1,0,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "translateJavaAddInt" (formula "10") (term "1,1,0,1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,1,0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "10") (term "1,0,1,1,1,1,1,1,0,0,0,1"))
(rule "translateJavaMulInt" (formula "10") (term "1,0,1,1,1,1,1,1,1,0,0,0,1"))
(rule "translateJavaDivInt" (formula "7") (term "1"))
(rule "translateJavaDivInt" (formula "10") (term "0,1,0,1,1,1,1,1,1,0,0,0,1"))
(rule "translateJavaDivInt" (formula "10") (term "0,1,1,0,1,1,1,1,1,1,1,0,0,0,1"))
(rule "translateJavaAddInt" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteGeq" (formula "10") (term "0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "assignment" (formula "10") (term "1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_expandTo,savedHeapBefore_expandTo"))
(rule "simplifyUpdate2" (formula "10") (term "1"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "wordsRequired"))
(rule "assignmentAdditionInt" (formula "10") (term "1"))
(rule "translateJavaAddInt" (formula "10") (term "0,0,1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "applyOnElementary" (formula "10") (term "1,0"))
(rule "applyOnRigidTerm" (formula "10") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "10") (term "1,0,1,0"))
(rule "applyOnPV" (formula "10") (term "0,0,1,0"))
(rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
(rule "compound_less_than_comparison_1" (formula "10") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
(rule "assignment_read_attribute_this" (formula "10"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "less_than_comparison_simple" (formula "10") (term "1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "applyOnElementary" (formula "10") (term "1,0"))
(rule "applyOnRigidTerm" (formula "10") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "10") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "10") (term "2,0,1,0"))
(rule "applyOnRigidFormula" (formula "10") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "10") (term "1,0,0,1,0"))
(rule "simplifyUpdate1" (formula "10") (term "0,0,0,1,0"))
(rule "applyOnPV" (formula "10") (term "1,0,0,1,0"))
(rule "applyOnPV" (formula "10") (term "0,0,0,1,0"))
(rule "ifSplit" (formula "10"))
(branch "if x true"
   (rule "simplifyUpdate2" (formula "11"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "ifthenelse_concrete3" (formula "1"))
   (rule "boolean_not_equal_2" (formula "1") (term "1"))
   (rule "concrete_or_4" (formula "1"))
    (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_ensureCapacity,exc_0,heapAfter_ensureCapacity,anon_heap_ensureCapacity") (contract "java.util.BitSet[java.util.BitSet::ensureCapacity(int)].JML normal_behavior operation contract.0"))
   (branch "Post (ensureCapacity)"
      (rule "simplifyUpdate2" (formula "11"))
      (rule "eqSymm" (formula "11") (term "0,1,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "sequentialToParallel2" (formula "11"))
      (rule "simplifyUpdate3" (formula "11") (term "1,0"))
      (rule "andLeft" (formula "11"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "andLeft" (formula "12"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "simplifyUpdate2" (formula "18"))
      (rule "applyOnRigidFormula" (formula "13"))
      (rule "simplifyUpdate1" (formula "13") (term "0"))
      (rule "simplifyUpdate1" (formula "13") (term "1"))
      (rule "applyOnPV" (formula "13") (term "1"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "simplifyUpdate1" (formula "14") (term "0"))
      (rule "simplifyUpdate1" (formula "14") (term "1"))
      (rule "applyOnRigidFormula" (formula "15"))
      (rule "simplifyUpdate1" (formula "15") (term "0"))
      (rule "simplifyUpdate1" (formula "15") (term "1"))
      (rule "applyOnRigidFormula" (formula "16"))
      (rule "applyOnRigidFormula" (formula "17"))
      (rule "applyOnRigidFormula" (formula "18"))
      (rule "simplifyUpdate1" (formula "18") (term "1"))
      (rule "applyOnPV" (formula "18") (term "0"))
      (rule "applyOnRigidTerm" (formula "13") (term "0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0"))
      (rule "applyOnPV" (formula "14") (term "0,0"))
      (rule "eqSymm" (formula "14"))
      (rule "applyOnRigidTerm" (formula "15") (term "0"))
      (rule "applyOnRigidTerm" (formula "15") (term "1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0"))
      (rule "simplifyUpdate2" (formula "16") (term "0,0"))
      (rule "applyOnRigidFormula" (formula "17") (term "0"))
      (rule "simplifyUpdate1" (formula "17") (term "0,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "17") (term "1"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,0"))
      (rule "applyOnPV" (formula "13") (term "0,0,0"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0,0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0"))
      (rule "applyOnPV" (formula "14") (term "0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "15") (term "0,0"))
      (rule "simplifyUpdate1" (formula "15") (term "2,0,0"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,0"))
      (rule "applyOnPV" (formula "15") (term "0,0,0"))
      (rule "applyOnRigidTerm" (formula "15") (term "0,1"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,1"))
      (rule "applyOnPV" (formula "15") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "15") (term "2,0,1"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0"))
      (rule "simplifyUpdate2" (formula "16") (term "0,0,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "17") (term "0,1"))
      (rule "simplifyUpdate2" (formula "17") (term "1,0,1"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,1,1,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0"))
      (rule "eqSymm" (formula "16") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,0,0"))
      (rule "applyOnPV" (formula "17") (term "0,0,0,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,0,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "17") (term "0,0,1"))
      (rule "simplifyUpdate2" (formula "17") (term "1,0,0,1"))
      (rule "simplifyUpdate2" (formula "17") (term "0,0,0,1"))
      (rule "applyOnRigidFormula" (formula "17") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,1,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,1,1,1,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,0,0"))
      (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "0,1,0,0,1"))
      (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,1"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0,1"))
      (rule "applyOnPV" (formula "17") (term "0,0,1,0,1"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,1,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,1,0,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "1,1,0,0,1"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,0,0,0,1"))
      (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,0,1"))
      (rule "applyOnPV" (formula "17") (term "0,1,0,1,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "2,1,0,1,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "1,1,0,1,0,1"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1,1,0,0,1"))
      (rule "applyOnPV" (formula "17") (term "0,0,1,1,0,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,0,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,1,1,0,0,1"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,0,0,0,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,0,0,1"))
      (rule "applyOnPV" (formula "17") (term "0,0,0,0,0,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
      (rule "assignment_write_attribute_this" (formula "20"))
      (rule "sequentialToParallel2" (formula "20"))
      (rule "simplifyUpdate2" (formula "20"))
      (rule "simplifyUpdate3" (formula "20") (term "1,0"))
      (rule "applyOnElementary" (formula "20") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "20") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "20") (term "3,0,1,0"))
      (rule "applyOnPV" (formula "20") (term "0,0,1,0"))
      (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=java_util_BitSet_words_0"))
      (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "11"))
      (rule "replaceKnownSelect_taclet00_0" (formula "16") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,0"))
      (rule "elementOfFreshLocs" (formula "13") (term "1,0,0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "17") (term "1,0,1,0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "1,0,1,0,1"))
      (rule "equalUnique" (formula "13") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "13") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "13") (term "0,0,0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,1,0,0,1"))
      (rule "replace_known_left" (formula "13") (term "0,1,1,0,0") (ifseqformula "3"))
      (rule "concrete_not_1" (formula "13") (term "1,1,0,0"))
      (rule "concrete_and_4" (formula "13") (term "1,0,0"))
      (rule "concrete_or_4" (formula "13") (term "0,0"))
      (rule "inEqSimp_commuteGeq" (formula "16"))
      (rule "elementOfUnion" (formula "13") (term "0,0"))
      (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
      (rule "equalUnique" (formula "13") (term "1,1,0,0"))
      (rule "concrete_and_4" (formula "13") (term "1,0,0"))
      (rule "concrete_or_4" (formula "13") (term "0,0"))
      (rule "elementOfSingleton" (formula "13") (term "0,0"))
      (rule "eqClose" (formula "13") (term "1,0,0"))
      (rule "concrete_and_3" (formula "13") (term "0,0"))
      (rule "eqClose" (formula "13") (term "0,0"))
      (rule "ifthenelse_true" (formula "13") (term "0"))
      (rule "hideAuxiliaryEq" (formula "13"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "13") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "15") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "16") (term "1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "1,0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "0,1,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "commuteUnion" (formula "11") (term "1,0"))
      (rule "commute_and" (formula "16") (term "0,0"))
      (rule "commute_and" (formula "17") (term "0,0,1"))
      (rule "methodCallEmpty" (formula "20") (term "1"))
      (rule "tryEmpty" (formula "20") (term "1"))
      (rule "emptyModality" (formula "20") (term "1"))
      (rule "andRight" (formula "20"))
      (branch "Case 1"
         (rule "andRight" (formula "20"))
         (branch "Case 1"
            (rule "andRight" (formula "20"))
            (branch "Case 1"
               (rule "impRight" (formula "20"))
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "expand_inInt" (formula "6"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "simplifyUpdate2" (formula "21"))
                  (rule "replace_int_MAX" (formula "6") (term "1,0"))
                  (rule "replace_int_MIN" (formula "6") (term "0,1"))
                  (rule "andLeft" (formula "6"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "0"))
                  (rule "applyOnRigidFormula" (formula "22"))
                  (rule "simplifyUpdate1" (formula "22") (term "0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1"))
                  (rule "applyOnRigidTerm" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                  (rule "simplifyUpdate1" (formula "1") (term "2,1"))
                  (rule "applyOnRigidTerm" (formula "22") (term "0"))
                  (rule "simplifyUpdate1" (formula "22") (term "2,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1,0"))
                  (rule "applyOnPV" (formula "22") (term "0,0"))
                  (rule "eqSymm" (formula "22"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                  (rule "applyOnRigidTerm" (formula "22") (term "0"))
                  (rule "simplifyUpdate1" (formula "22") (term "2,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1,0"))
                  (rule "applyOnPV" (formula "22") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0"))
                  (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "7"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "expand_addJint" (formula "15") (term "1"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,1"))
                  (rule "expand_divJint" (formula "10") (term "0"))
                  (rule "jdiv_axiom_inline" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,2,0,0"))
                  (rule "div_literals" (formula "10") (term "1,0,0"))
                  (rule "qeq_literals" (formula "10") (term "0,0,0"))
                  (rule "ifthenelse_true" (formula "10") (term "0,0"))
                  (rule "expand_addJint" (formula "3") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "expand_addJint" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                  (rule "nnf_imp2or" (formula "19") (term "0,1"))
                  (rule "expand_moduloInteger" (formula "15") (term "1"))
                  (rule "replace_int_RANGE" (formula "15") (term "1,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1"))
                  (rule "replace_int_MIN" (formula "15") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,1"))
                  (rule "add_literals" (formula "15") (term "0,0,1,1"))
                  (rule "mod_axiom" (formula "15") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                  (rule "add_literals" (formula "15") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "15") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,1"))
                  (rule "equal_literals" (formula "15") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "15") (term "0,1,1"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "15") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "15") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                  (rule "add_literals" (formula "15") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "10") (term "0"))
                  (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "mod_axiom" (formula "10") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "expand_moduloInteger" (formula "3") (term "1,1"))
                  (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,1"))
                  (rule "replace_int_MIN" (formula "3") (term "0,1,1"))
                  (rule "replace_int_RANGE" (formula "3") (term "1,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "mod_axiom" (formula "3") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "add_zero_left" (formula "3") (term "0,1"))
                  (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "3") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(2(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "expand_moduloInteger" (formula "1") (term "0"))
                  (rule "replace_int_MIN" (formula "1") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "mod_axiom" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "1") (term "0,0"))
                  (rule "ifthenelse_false" (formula "1") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1"))
                  (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1"))
                  (rule "commute_or" (formula "17") (term "0,0"))
                  (rule "arrayLengthIsAnInt" (formula "14") (term "0"))
                  (rule "expand_inInt" (formula "14"))
                  (rule "replace_int_MAX" (formula "14") (term "1,0"))
                  (rule "replace_int_MIN" (formula "14") (term "0,1"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "14"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                  (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "1"))
                  (rule "mul_literals" (formula "16") (term "1,0,1"))
                  (rule "greater_literals" (formula "16") (term "0"))
                  (rule "concrete_impl_1" (formula "16"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "16"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (rule "concrete_or_1" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                  (rule "concrete_and_2" (formula "15"))
                  (rule "closeFalse" (formula "15"))
               )
               (branch "Case 2"
                  (rule "expand_inInt" (formula "6"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "simplifyUpdate2" (formula "21"))
                  (rule "replace_int_MAX" (formula "6") (term "1,0"))
                  (rule "replace_int_MIN" (formula "6") (term "0,1"))
                  (rule "andLeft" (formula "6"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "0"))
                  (rule "applyOnRigidFormula" (formula "22"))
                  (rule "simplifyUpdate1" (formula "22") (term "1"))
                  (rule "simplifyUpdate1" (formula "22") (term "0"))
                  (rule "applyOnRigidTerm" (formula "1") (term "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "2,1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                  (rule "applyOnPV" (formula "1") (term "0,1"))
                  (rule "applyOnRigidTerm" (formula "22") (term "1"))
                  (rule "simplifyUpdate1" (formula "22") (term "1,1"))
                  (rule "applyOnPV" (formula "22") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "22") (term "2,1"))
                  (rule "applyOnRigidTerm" (formula "22") (term "0"))
                  (rule "applyOnPV" (formula "22") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "2,0"))
                  (rule "eqSymm" (formula "22"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "7"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_util_BitSet_wordsInUse_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "21"))
                  (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                  (rule "concrete_and_2" (formula "21"))
                  (rule "false_right" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "expand_divJint" (formula "10") (term "0"))
                  (rule "jdiv_axiom_inline" (formula "10") (term "0,0"))
                  (rule "qeq_literals" (formula "10") (term "0,0,0"))
                  (rule "ifthenelse_true" (formula "10") (term "0,0"))
                  (rule "div_literals" (formula "10") (term "0,0"))
                  (rule "expand_addJint" (formula "15") (term "1"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,1"))
                  (rule "expand_addJint" (formula "3") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0,1"))
                  (rule "expand_addJint" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                  (rule "expand_moduloInteger" (formula "10") (term "0"))
                  (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "mod_axiom" (formula "10") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,0,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "10") (term "0,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "expand_moduloInteger" (formula "14") (term "1"))
                  (rule "replace_int_RANGE" (formula "14") (term "1,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1"))
                  (rule "replace_int_MIN" (formula "14") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,1,1"))
                  (rule "add_literals" (formula "14") (term "0,0,1,1"))
                  (rule "mod_axiom" (formula "14") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "14") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1"))
                  (rule "equal_literals" (formula "14") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "14") (term "0,1,1"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "14") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "3") (term "1,1"))
                  (rule "replace_int_MIN" (formula "3") (term "0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,1"))
                  (rule "replace_int_RANGE" (formula "3") (term "1,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "mod_axiom" (formula "3") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "add_zero_left" (formula "3") (term "0,1"))
                  (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "3") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,1,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(2(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "expand_moduloInteger" (formula "1") (term "0"))
                  (rule "replace_int_MIN" (formula "1") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "mod_axiom" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                  (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "1") (term "0,0"))
                  (rule "ifthenelse_false" (formula "1") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1"))
                  (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1"))
                  (rule "commute_or" (formula "17") (term "0,0"))
                  (rule "arrayLengthIsAnInt" (formula "14") (term "0"))
                  (rule "expand_inInt" (formula "14"))
                  (rule "replace_int_MAX" (formula "14") (term "1,0"))
                  (rule "replace_int_MIN" (formula "14") (term "0,1"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "14"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                  (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "1"))
                  (rule "mul_literals" (formula "16") (term "1,0,1"))
                  (rule "greater_literals" (formula "16") (term "0"))
                  (rule "concrete_impl_1" (formula "16"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "16"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                  (rule "concrete_and_2" (formula "8"))
                  (rule "closeFalse" (formula "8"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "20"))
               (branch "Case 1"
                  (rule "impRight" (formula "20"))
                  (rule "expand_inInt" (formula "6"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "simplifyUpdate2" (formula "21"))
                  (rule "replace_int_MAX" (formula "6") (term "1,0"))
                  (rule "replace_int_MIN" (formula "6") (term "0,1"))
                  (rule "andLeft" (formula "6"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnRigidFormula" (formula "22"))
                  (rule "simplifyUpdate1" (formula "22") (term "1"))
                  (rule "applyOnRigidTerm" (formula "1") (term "0"))
                  (rule "applyOnPV" (formula "1") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "1") (term "2,0"))
                  (rule "applyOnRigidTerm" (formula "22") (term "0"))
                  (rule "applyOnPV" (formula "22") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "7"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_util_BitSet_wordsInUse_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                  (rule "eqClose" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
               (branch "Case 2"
                  (rule "andRight" (formula "20"))
                  (branch "Case 1"
                     (rule "expand_inInt" (formula "5"))
                     (rule "simplifyUpdate2" (formula "20"))
                     (rule "replace_int_MAX" (formula "5") (term "1,0"))
                     (rule "replace_int_MIN" (formula "5") (term "0,1"))
                     (rule "andLeft" (formula "5"))
                     (rule "applyOnRigidFormula" (formula "21"))
                     (rule "simplifyUpdate1" (formula "21") (term "0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,1"))
                     (rule "applyOnPV" (formula "21") (term "0,0,1"))
                     (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
                     (rule "replaceKnownSelect_taclet00_0" (formula "21") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "21") (term "0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltRight" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "7"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_1" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "expand_addJint" (formula "15") (term "1"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "expand_divJint" (formula "9") (term "0"))
                     (rule "jdiv_axiom_inline" (formula "9") (term "0,0"))
                     (rule "qeq_literals" (formula "9") (term "0,0,0"))
                     (rule "ifthenelse_true" (formula "9") (term "0,0"))
                     (rule "div_literals" (formula "9") (term "0,0"))
                     (rule "expand_addJint" (formula "2") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,1,1"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "expand_addJint" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                     (rule "nnf_imp2or" (formula "20") (term "0,1"))
                     (rule "expand_moduloInteger" (formula "15") (term "1"))
                     (rule "replace_int_RANGE" (formula "15") (term "1,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1"))
                     (rule "replace_int_MIN" (formula "15") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,1,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1,1"))
                     (rule "mod_axiom" (formula "15") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0,1,1"))
                     (rule "equal_literals" (formula "15") (term "0,0,1,1"))
                     (rule "ifthenelse_false" (formula "15") (term "0,1,1"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,1"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "15") (term "0,0"))
                     (rule "concrete_or_2" (formula "15") (term "0"))
                     (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (rule "concrete_or_2" (formula "15"))
                     (rule "expand_moduloInteger" (formula "14") (term "0"))
                     (rule "replace_int_MIN" (formula "14") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                     (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                     (rule "add_literals" (formula "14") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                     (rule "mod_axiom" (formula "14") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "mul_literals" (formula "14") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "leq_literals" (formula "14") (term "0,0"))
                     (rule "concrete_or_2" (formula "14") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (rule "concrete_or_2" (formula "14"))
                     (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "14") (term "0,0"))
                     (rule "ifthenelse_false" (formula "14") (term "0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                     (rule "add_literals" (formula "14") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "inEqSimp_invertInEq0" (formula "14"))
                     (rule "times_zero_2" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "expand_moduloInteger" (formula "9") (term "0"))
                     (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                     (rule "mod_axiom" (formula "9") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                     (rule "div_literals" (formula "9") (term "0,1,0,1,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "9") (term "0,1,0"))
                     (rule "mul_literals" (formula "9") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "expand_moduloInteger" (formula "2") (term "1,1"))
                     (rule "replace_int_MIN" (formula "2") (term "0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,1"))
                     (rule "replace_int_RANGE" (formula "2") (term "1,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,1"))
                     (rule "add_literals" (formula "2") (term "0,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "2") (term "1"))
                     (rule "add_literals" (formula "2") (term "0,1"))
                     (rule "mod_axiom" (formula "2") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                     (rule "polySimp_addAssoc" (formula "2") (term "1"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                     (rule "add_literals" (formula "2") (term "0,0,1"))
                     (rule "add_zero_left" (formula "2") (term "0,1"))
                     (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,1"))
                     (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                     (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,1"))
                     (rule "add_literals" (formula "2") (term "0,0,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "2") (term "1"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,1"))
                     (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                     (rule "commute_or" (formula "18") (term "0,0"))
                     (rule "commute_or" (formula "19") (term "0,0,1"))
                     (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                     (rule "expand_inInt" (formula "17"))
                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                     (rule "andLeft" (formula "17"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "17"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "mul_literals" (formula "14") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                     (rule "mul_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "7"))
                     (rule "leq_literals" (formula "19") (term "0"))
                     (rule "concrete_or_1" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                     (rule "leq_literals" (formula "19") (term "0"))
                     (rule "concrete_or_1" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "20") (term "0,0"))
                     (rule "add_zero_left" (formula "20") (term "0"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                     (rule "andLeft" (formula "16"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                     (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "18"))
                     (rule "eqClose" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
                     (rule "eqClose" (formula "16") (term "1,0"))
                     (rule "concrete_impl_4" (formula "16") (term "0"))
                     (rule "all_unused" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "arrayLengthNotNegative" (formula "21") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "17"))
                     (rule "times_zero_1" (formula "21") (term "0,0"))
                     (rule "add_zero_left" (formula "21") (term "0"))
                     (rule "arrayLengthIsAnInt" (formula "22") (term "1"))
                     (rule "expand_inInt" (formula "22"))
                     (rule "replace_int_MAX" (formula "22") (term "1,0"))
                     (rule "replace_int_MIN" (formula "22") (term "0,1"))
                     (rule "andLeft" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "21"))
                     (rule "leq_literals" (formula "22") (term "0"))
                     (rule "concrete_or_1" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "div_axiom" (formula "15") (term "0,1,1") (inst "quotient=quotient_0"))
                     (rule "equal_literals" (formula "15") (term "0"))
                     (rule "concrete_or_2" (formula "15"))
                     (rule "qeq_literals" (formula "15") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "15") (term "1"))
                     (rule "mul_literals" (formula "15") (term "1,1,1"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                     (rule "add_literals" (formula "17") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "17") (term "1"))
                     (rule "add_literals" (formula "17") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "18") (term "1"))
                     (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "2") (term "1"))
                     (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                     (rule "mul_literals" (formula "15") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                     (rule "mul_literals" (formula "16") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "8"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "15") (ifseqformula "13"))
                     (rule "times_zero_1" (formula "15") (term "1,1,0"))
                     (rule "greater_literals" (formula "15") (term "0,0"))
                     (rule "concrete_impl_1" (formula "15") (term "0"))
                     (rule "qeq_literals" (formula "15") (term "0"))
                     (rule "concrete_and_2" (formula "15"))
                     (rule "closeFalse" (formula "15"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "20"))
                     (branch "Case 1"
                        (rule "simplifyUpdate2" (formula "20") (userinteraction))
                        (rule "allRight" (formula "20") (inst "sk=i_0") (userinteraction))
                        (rule "allLeftHide" (formula "16") (inst "t=i_0") (userinteraction))
                        (rule "Class_invariant_axiom_for_java_util_BitSet" (formula "9") (inst "i=i") (inst "i_0=i_0") (ifseqformula "4") (userinteraction))
                        (rule "andLeft" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "11"))
                        (rule "notLeft" (formula "9"))
                        (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                        (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                        (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                        (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                        (rule "expand_inInt" (formula "5"))
                        (rule "expand_inLong" (formula "16") (term "1,0"))
                        (rule "replace_int_MAX" (formula "5") (term "1,0"))
                        (rule "replace_int_MIN" (formula "5") (term "0,1"))
                        (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                        (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                        (rule "impRight" (formula "28"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "translateJavaSubInt" (formula "12") (term "0,2,0,0,1"))
                        (rule "translateJavaAddInt" (formula "17") (term "1"))
                        (rule "translateJavaMulInt" (formula "18") (term "1"))
                        (rule "translateJavaDivInt" (formula "17") (term "0,1"))
                        (rule "translateJavaDivInt" (formula "18") (term "0,1,1"))
                        (rule "translateJavaAddInt" (formula "18") (term "1,1"))
                        (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "1"))
                        (rule "concrete_and_3" (formula "26") (term "0"))
                        (rule "applyOnRigidFormula" (formula "31"))
                        (rule "simplifyUpdate1" (formula "31") (term "1"))
                        (rule "simplifyUpdate1" (formula "31") (term "0"))
                        (rule "applyOnRigidFormula" (formula "2"))
                        (rule "simplifyUpdate1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "31") (term "1"))
                        (rule "simplifyUpdate1" (formula "31") (term "2,1"))
                        (rule "applyOnPV" (formula "31") (term "0,1"))
                        (rule "applyOnRigidTerm" (formula "31") (term "0"))
                        (rule "applyOnPV" (formula "31") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "31") (term "2,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "1"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,1"))
                        (rule "applyOnPV" (formula "2") (term "0,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,1"))
                        (rule "applyOnRigidTerm" (formula "31") (term "1,1"))
                        (rule "simplifyUpdate1" (formula "31") (term "2,1,1"))
                        (rule "simplifyUpdate1" (formula "31") (term "1,1,1"))
                        (rule "applyOnPV" (formula "31") (term "0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                        (rule "applyOnRigidTerm" (formula "31") (term "1,0"))
                        (rule "simplifyUpdate1" (formula "31") (term "2,1,0"))
                        (rule "simplifyUpdate1" (formula "31") (term "1,1,0"))
                        (rule "applyOnPV" (formula "31") (term "0,1,0"))
                        (rule "eqSymm" (formula "31"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "31") (term "1,0"))
                        (rule "replaceKnownSelect_taclet00_0" (formula "31") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "31") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "31") (term "0"))
                        (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "31"))
                        (rule "concrete_impl_3" (formula "26"))
                        (rule "notLeft" (formula "26"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "8"))
                        (rule "inEqSimp_leqRight" (formula "28"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                        (rule "leq_literals" (formula "9") (term "0"))
                        (rule "concrete_or_1" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                        (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "31"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                        (rule "concrete_or_2" (formula "1") (term "0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "add_zero_left" (formula "14") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                        (rule "mul_literals" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "5"))
                        (rule "times_zero_1" (formula "16") (term "0,0"))
                        (rule "add_zero_left" (formula "16") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "22"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "20"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "6"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_literals" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "20"))
                        (branch "Case 1"
                           (rule "Class_invariant_axiom_for_java_util_BitSet" (formula "9") (inst "i=i") (inst "i_0=i_0") (ifseqformula "4") (userinteraction))
                           (rule "andLeft" (formula "9"))
                           (rule "notLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "9"))
                           (rule "simplifyUpdate2" (formula "28") (userinteraction))
                           (rule "allRight" (formula "28") (inst "sk=i_0") (userinteraction))
                           (rule "impLeft" (formula "24") (userinteraction))
                           (branch "Case 1"
                              (rule "hide_left" (formula "9") (userinteraction))
                              (rule "hide_left" (formula "11") (userinteraction))
                              (rule "impRight" (formula "26") (userinteraction))
                              (rule "insert_constant_value" (formula "13") (term "0,0,1"))
                              (rule "insert_constant_value" (formula "13") (term "1,0,1"))
                              (rule "insert_constant_value" (formula "14") (term "0,0,1,1"))
                              (rule "insert_constant_value" (formula "14") (term "1,0,1,1"))
                              (rule "expand_inInt" (formula "6"))
                              (rule "expand_inLong" (formula "15") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "27"))
                              (rule "replace_int_MAX" (formula "6") (term "1,0"))
                              (rule "replace_int_MIN" (formula "6") (term "0,1"))
                              (rule "replace_long_MIN" (formula "15") (term "0,1,1,0"))
                              (rule "replace_long_MAX" (formula "15") (term "1,0,1,0"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "2"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "andLeft" (formula "7"))
                              (rule "translateJavaAddInt" (formula "15") (term "1"))
                              (rule "translateJavaDivInt" (formula "16") (term "0,1,1"))
                              (rule "translateJavaDivInt" (formula "15") (term "0,1"))
                              (rule "translateJavaAddInt" (formula "16") (term "1,1"))
                              (rule "translateJavaMulInt" (formula "16") (term "1"))
                              (rule "applyOnRigidFormula" (formula "29"))
                              (rule "simplifyUpdate1" (formula "29") (term "1"))
                              (rule "inEqSimp_ltRight" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "applyOnRigidFormula" (formula "3"))
                              (rule "simplifyUpdate1" (formula "3") (term "0"))
                              (rule "applyOnRigidFormula" (formula "2"))
                              (rule "simplifyUpdate1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "29") (term "0"))
                              (rule "simplifyUpdate1" (formula "29") (term "2,0"))
                              (rule "applyOnPV" (formula "29") (term "0,0"))
                              (rule "applyOnRigidTerm" (formula "3") (term "1"))
                              (rule "applyOnRigidTerm" (formula "2") (term "1"))
                              (rule "simplifyUpdate1" (formula "2") (term "1,1"))
                              (rule "simplifyUpdate1" (formula "2") (term "2,1"))
                              (rule "applyOnPV" (formula "2") (term "0,1"))
                              (rule "applyOnRigidTerm" (formula "29") (term "1,0"))
                              (rule "applyOnPV" (formula "29") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "29") (term "2,1,0"))
                              (rule "simplifyUpdate1" (formula "29") (term "1,1,0"))
                              (rule "applyOnRigidTerm" (formula "3") (term "0,1"))
                              (rule "applyOnPV" (formula "3") (term "0,0,1"))
                              (rule "simplifyUpdate1" (formula "3") (term "1,0,1"))
                              (rule "simplifyUpdate1" (formula "3") (term "2,0,1"))
                              (rule "dismissNonSelectedField" (formula "29") (term "1,0"))
                              (rule "replaceKnownSelect_taclet00_0" (formula "29") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "29") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "replaceKnownSelect_taclet00_0" (formula "3") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "3") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "29") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "2"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                              (rule "leq_literals" (formula "9") (term "0"))
                              (rule "concrete_or_1" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "2"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "24"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,0"))
                              (rule "times_zero_1" (formula "24") (term "0"))
                              (rule "leq_literals" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "13") (term "0,0"))
                              (rule "add_zero_left" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "18"))
                              (rule "times_zero_1" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "21"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                              (rule "polySimp_elimOne" (formula "26") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "21"))
                              (rule "times_zero_1" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "expand_addJint" (formula "28") (term "1"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1"))
                              (rule "expand_divJint" (formula "12") (term "0"))
                              (rule "jdiv_axiom_inline" (formula "12") (term "0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,2,0,0"))
                              (rule "qeq_literals" (formula "12") (term "0,0,0"))
                              (rule "ifthenelse_true" (formula "12") (term "0,0"))
                              (rule "div_literals" (formula "12") (term "0,0"))
                              (rule "expand_addJint" (formula "21") (term "1"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "21"))
                              (rule "times_zero_1" (formula "18") (term "0,0"))
                              (rule "add_zero_left" (formula "18") (term "0"))
                              (rule "expand_addJint" (formula "23") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "23"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "23"))
                              (rule "times_zero_1" (formula "16") (term "0,0"))
                              (rule "add_zero_left" (formula "16") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "expand_addJint" (formula "6") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "21") (term "0,0"))
                              (rule "add_zero_left" (formula "21") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "nnf_imp2or" (formula "27") (term "0"))
                              (rule "nnf_imp2or" (formula "37") (term "0"))
                              (rule "nnf_imp2or" (formula "24") (term "0,1"))
                              (rule "expand_addJint" (formula "15") (term "0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                              (rule "expand_addJint" (formula "18") (term "0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                              (rule "expand_mulJint" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "expand_divJint" (formula "29") (term "0,1,0"))
                              (rule "jdiv_axiom_inline" (formula "29") (term "0,0,1,0"))
                              (rule "div_literals" (formula "29") (term "1,0,0,1,0"))
                              (rule "qeq_literals" (formula "29") (term "0,0,0,1,0"))
                              (rule "ifthenelse_true" (formula "29") (term "0,0,1,0"))
                              (rule "expand_addJint" (formula "29") (term "1"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,1"))
                              (rule "expand_mulJint" (formula "15") (term "0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "32") (term "1"))
                              (rule "replace_int_RANGE" (formula "32") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,1"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,1,1"))
                              (rule "add_literals" (formula "32") (term "0,0,1,1"))
                              (rule "mod_axiom" (formula "32") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "32") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0,1,1"))
                              (rule "equal_literals" (formula "32") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "32") (term "0,1,1"))
                              (rule "mul_literals" (formula "32") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,1,1,1,1"))
                              (rule "add_literals" (formula "32") (term "0,0,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "1"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                              (rule "mul_literals" (formula "32") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,0,1"))
                              (rule "expand_addJint" (formula "30") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "0"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                              (rule "mod_axiom" (formula "13") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                              (rule "div_literals" (formula "13") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,0"))
                              (rule "mul_literals" (formula "13") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "13"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (rule "concrete_or_1" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "expand_divJint" (formula "22") (term "1,0,1"))
                              (rule "jdiv_axiom_inline" (formula "22") (term "0,1,0,1"))
                              (rule "qeq_literals" (formula "22") (term "0,0,1,0,1"))
                              (rule "ifthenelse_true" (formula "22") (term "0,1,0,1"))
                              (rule "div_literals" (formula "22") (term "0,1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "22"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "expand_divJint" (formula "17") (term "1,0,0"))
                              (rule "jdiv_axiom_inline" (formula "17") (term "0,1,0,0"))
                              (rule "div_literals" (formula "17") (term "1,0,1,0,0"))
                              (rule "qeq_literals" (formula "17") (term "0,0,1,0,0"))
                              (rule "ifthenelse_true" (formula "17") (term "0,1,0,0"))
                              (rule "expand_moduloInteger" (formula "23") (term "1,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1"))
                              (rule "replace_int_RANGE" (formula "23") (term "1,1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "23") (term "0,0,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,1,1,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1,1,1"))
                              (rule "mod_axiom" (formula "23") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "23") (term "0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "23") (term "0,0,1,1,1"))
                              (rule "ifthenelse_false" (formula "23") (term "0,1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,1"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "1,1,1,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,1,1,1,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "23"))
                              (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                              (rule "mul_literals" (formula "31") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "23"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "expand_divJint" (formula "31") (term "1,0,1,0"))
                              (rule "jdiv_axiom_inline" (formula "31") (term "0,1,0,1,0"))
                              (rule "div_literals" (formula "31") (term "1,0,1,0,1,0"))
                              (rule "qeq_literals" (formula "31") (term "0,0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0,1,0,1,0"))
                              (rule "expand_moduloInteger" (formula "31") (term "1"))
                              (rule "replace_int_MIN" (formula "31") (term "0,1"))
                              (rule "replace_int_RANGE" (formula "31") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,1,1"))
                              (rule "add_literals" (formula "31") (term "0,0,1,1"))
                              (rule "mod_axiom" (formula "31") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "31") (term "1"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                              (rule "add_literals" (formula "31") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "31") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,1,1"))
                              (rule "equal_literals" (formula "31") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "31") (term "0,1,1"))
                              (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "31") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1,1,1,1"))
                              (rule "add_literals" (formula "31") (term "0,0,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                              (rule "mul_literals" (formula "31") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "31") (term "1"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                              (rule "add_literals" (formula "31") (term "0,0,1"))
                              (rule "expand_mulJint" (formula "16") (term "0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                              (rule "expand_mulJint" (formula "4") (term "0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "7") (term "1,1"))
                              (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,1,1"))
                              (rule "replace_int_RANGE" (formula "7") (term "1,1,1,1"))
                              (rule "replace_int_MIN" (formula "7") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1"))
                              (rule "add_literals" (formula "7") (term "0,1"))
                              (rule "mod_axiom" (formula "7") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1"))
                              (rule "add_zero_left" (formula "7") (term "0,1"))
                              (rule "polyDiv_pullOut" (formula "7") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "7") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "7") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "7") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,1"))
                              (rule "add_literals" (formula "7") (term "0,0,0,1,1,1"))
                              (rule "polySimp_addComm0" (formula "7") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                              (rule "mul_literals" (formula "7") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1"))
                              (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "21") (term "0,0"))
                              (rule "add_zero_left" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "expand_moduloInteger" (formula "19") (term "0"))
                              (rule "replace_int_MIN" (formula "19") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "mod_axiom" (formula "19") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                              (rule "polySimp_elimOne" (formula "19") (term "1"))
                              (rule "polyDiv_pullOut" (formula "19") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "19") (term "0,0,0"))
                              (rule "ifthenelse_false" (formula "19") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "0"))
                              (rule "mul_literals" (formula "19") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "expand_moduloInteger" (formula "3") (term "0"))
                              (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "3") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "mod_axiom" (formula "3") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                              (rule "mul_literals" (formula "3") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "30") (term "0,1,0"))
                              (rule "replace_int_MIN" (formula "30") (term "0,0,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,0,1,0"))
                              (rule "replace_int_RANGE" (formula "30") (term "1,1,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,1,0,1,0"))
                              (rule "mod_axiom" (formula "30") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0"))
                              (rule "div_literals" (formula "30") (term "0,1,1,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "1,1,0,1,0"))
                              (rule "add_zero_right" (formula "30") (term "1,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,1,0"))
                              (rule "expand_moduloInteger" (formula "30") (term "1"))
                              (rule "replace_int_MIN" (formula "30") (term "0,1"))
                              (rule "replace_int_RANGE" (formula "30") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1,1"))
                              (rule "mod_axiom" (formula "30") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "30") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "30") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "30") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,1"))
                              (rule "add_literals" (formula "30") (term "0,0,0,1,1,1"))
                              (rule "polySimp_addComm0" (formula "30") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                              (rule "mul_literals" (formula "30") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "1"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "15") (term "0"))
                              (rule "replace_int_MIN" (formula "15") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                              (rule "mod_axiom" (formula "15") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=addJint(divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                Z(4(6(#)))),
        Z(1(#)))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(addJint(divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                                Z(4(6(#)))),
                        Z(1(#))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0"))
                              (rule "leq_literals" (formula "15") (term "0,0"))
                              (rule "concrete_or_2" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                              (rule "concrete_or_2" (formula "15"))
                              (rule "nnf_notAnd" (formula "26") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                              (rule "expand_moduloInteger" (formula "32") (term "1,0"))
                              (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,1,0"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1,0"))
                              (rule "replace_int_RANGE" (formula "32") (term "1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,1,1,0"))
                              (rule "add_literals" (formula "32") (term "0,0,1,1,0"))
                              (rule "mod_axiom" (formula "32") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                              (rule "add_literals" (formula "32") (term "0,0,1,0"))
                              (rule "polyDiv_pullOut" (formula "32") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0,1,1,0"))
                              (rule "equal_literals" (formula "32") (term "0,0,1,1,0"))
                              (rule "ifthenelse_false" (formula "32") (term "0,1,1,0"))
                              (rule "mul_literals" (formula "32") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,1,1,1,1,0"))
                              (rule "add_literals" (formula "32") (term "0,0,1,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                              (rule "add_literals" (formula "32") (term "0,0,1,0"))
                              (rule "expand_moduloInteger" (formula "24") (term "1"))
                              (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,1"))
                              (rule "replace_int_MIN" (formula "24") (term "0,1"))
                              (rule "replace_int_RANGE" (formula "24") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
                              (rule "add_literals" (formula "24") (term "0,0,1,1"))
                              (rule "mod_axiom" (formula "24") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                              (rule "add_literals" (formula "24") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "24") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "24") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "24") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1,1"))
                              (rule "add_literals" (formula "24") (term "0,0,0,1,1,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                              (rule "mul_literals" (formula "24") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "1"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                              (rule "add_literals" (formula "24") (term "0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "21") (term "0,0"))
                              (rule "add_zero_left" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "expand_moduloInteger" (formula "19") (term "1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "19") (term "1,1,1,0,0"))
                              (rule "replace_int_MIN" (formula "19") (term "0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "mod_axiom" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "div_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "expand_divJint" (formula "26") (term "1,0,0,1,1,1"))
                              (rule "jdiv_axiom_inline" (formula "26") (term "0,1,0,0,1,1,1"))
                              (rule "mul_literals" (formula "26") (term "0,0,2,0,1,0,0,1,1,1"))
                              (rule "div_literals" (formula "26") (term "1,0,1,0,0,1,1,1"))
                              (rule "qeq_literals" (formula "26") (term "0,0,1,0,0,1,1,1"))
                              (rule "ifthenelse_true" (formula "26") (term "0,1,0,0,1,1,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "26"))
                              (rule "times_zero_1" (formula "18") (term "0,0"))
                              (rule "add_zero_left" (formula "18") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "27"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "28"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,1"))
                              (rule "mul_literals" (formula "36") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,0,1"))
                              (rule "expand_mulJint" (formula "35") (term "0"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                              (rule "expand_mulJint" (formula "5") (term "0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                              (rule "expand_divJint" (formula "18") (term "1,0,1,0"))
                              (rule "jdiv_axiom_inline" (formula "18") (term "0,1,0,1,0"))
                              (rule "qeq_literals" (formula "18") (term "0,0,1,0,1,0"))
                              (rule "ifthenelse_true" (formula "18") (term "0,1,0,1,0"))
                              (rule "div_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "expand_divJint" (formula "18") (term "1,0,0,1,1,0"))
                              (rule "jdiv_axiom_inline" (formula "18") (term "0,1,0,0,1,1,0"))
                              (rule "div_literals" (formula "18") (term "1,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,0,2,0,1,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "18") (term "0,0,1,0,0,1,1,0"))
                              (rule "ifthenelse_true" (formula "18") (term "0,1,0,0,1,1,0"))
                              (rule "expand_mulJint" (formula "34") (term "0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                              (rule "expand_divJint" (formula "17") (term "1,0,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "17") (term "0,1,0,0,0,0"))
                              (rule "div_literals" (formula "17") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,0,2,0,1,0,0,0,0"))
                              (rule "qeq_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                              (rule "ifthenelse_true" (formula "17") (term "0,1,0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "4") (term "0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "4") (term "1,1,0,0,0"))
                              (rule "replace_int_MIN" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                              (rule "mod_axiom" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polyDiv_pullOut" (formula "4") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,1,0,0"))
                              (rule "equal_literals" (formula "4") (term "0,0,1,0,0"))
                              (rule "ifthenelse_false" (formula "4") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "expand_divJint" (formula "3") (term "0,0,1,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "3") (term "0,0,0,1,0,0,0"))
                              (rule "div_literals" (formula "3") (term "1,0,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,2,0,0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0,0,1,0,0,0"))
                              (rule "ifthenelse_true" (formula "3") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                              (rule "mul_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                              (rule "expand_addJint" (formula "32") (term "1,0"))
                              (rule "add_literals" (formula "32") (term "0,1,0"))
                              (rule "commute_and" (formula "28") (term "1,0"))
                              (rule "expand_addJint" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                              (rule "andLeft" (formula "37"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                              (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "39"))
                              (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                              (rule "eqClose" (formula "38") (term "1,0"))
                              (rule "concrete_impl_4" (formula "38") (term "0"))
                              (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                              (rule "eqClose" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "all_unused" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "arrayLengthIsAnInt" (formula "24") (term "1"))
                              (rule "expand_inInt" (formula "24"))
                              (rule "replace_int_MIN" (formula "24") (term "0,1"))
                              (rule "replace_int_MAX" (formula "24") (term "1,0"))
                              (rule "andLeft" (formula "24"))
                              (rule "inEqSimp_commuteLeq" (formula "25"))
                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "19"))
                              (rule "leq_literals" (formula "25") (term "0"))
                              (rule "concrete_or_1" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0"))
                              (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1"))
                              (rule "polySimp_rightDist" (formula "37") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                              (rule "mul_literals" (formula "37") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "arrayLengthNotNegative" (formula "26") (term "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ! self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null & ! (self.words@anon_heap_ensureCapacity<<anonHeapFunction>>).<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "expand_moduloInteger" (formula "27") (term "1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "27") (term "0,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "27") (term "1,1,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "27") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,1"))
                                 (rule "div_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                                 (rule "times_zero_2" (formula "27") (term "1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "27") (term "1,0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,1,1"))
                                 (rule "div_literals" (formula "27") (term "0,1,1"))
                                 (rule "mul_literals" (formula "27") (term "1,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "1"))
                                 (rule "add_literals" (formula "27") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "27"))
                                 (rule "times_zero_1" (formula "23") (term "0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "mul_literals" (formula "23") (term "1"))
                                 (rule "expand_moduloInteger" (formula "22") (term "1,1"))
                                 (rule "replace_int_MIN" (formula "22") (term "0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,1,1"))
                                 (rule "replace_int_RANGE" (formula "22") (term "1,1,1,1"))
                                 (rule "add_literals" (formula "22") (term "0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                 (rule "add_literals" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "mod_axiom" (formula "22") (term "1,0"))
                                 (rule "div_literals" (formula "22") (term "0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_2" (formula "22") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                 (rule "concrete_or_2" (formula "22"))
                                 (rule "expand_moduloInteger" (formula "20") (term "0"))
                                 (rule "replace_int_RANGE" (formula "20") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,1,0"))
                                 (rule "mod_axiom" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                 (rule "div_literals" (formula "20") (term "0,1,1,0"))
                                 (rule "times_zero_2" (formula "20") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "20") (term "1,0"))
                                 (rule "add_literals" (formula "20") (term "0"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "expand_mulJint" (formula "28") (term "1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "28"))
                                 (rule "times_zero_1" (formula "19") (term "0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "29"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "29"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "expand_moduloInteger" (formula "19") (term "1,0,0,1,0,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,0,0,1,0,1,0"))
                                 (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,1,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "19") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "19") (term "1,0,0,1,1,0"))
                                 (rule "div_literals" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1,0"))
                                 (rule "times_zero_2" (formula "19") (term "1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,1,0"))
                                 (rule "div_literals" (formula "19") (term "0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "1,0"))
                                 (rule "add_literals" (formula "19") (term "0,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "1,0,0,1,0,1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,1,0,0,1,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,1,1,0"))
                                 (rule "mod_axiom" (formula "4") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,1,0"))
                                 (rule "div_literals" (formula "4") (term "0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                                 (rule "div_literals" (formula "4") (term "0,1,1,0"))
                                 (rule "mul_literals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,0"))
                                 (rule "cut_direct" (formula "28") (term "0"))
                                 (branch "CUT: self.wordsInUse <= -1 + self.words.length TRUE"
                                    (rule "concrete_impl_1" (formula "29"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "28"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0"))
                                    (rule "concrete_or_1" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "27"))
                                    (rule "times_zero_1" (formula "25") (term "0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "25"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_1" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "24"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "expand_moduloInteger" (formula "38") (term "1,0,0,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "38") (term "1,1,1,0,0,1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "38") (term "0,0,1,1,0,0,1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "0,1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "38") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,1,0"))
                                    (rule "div_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_2" (formula "38") (term "1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,1,1,0"))
                                    (rule "div_literals" (formula "38") (term "0,1,1,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "1,0"))
                                    (rule "add_literals" (formula "38") (term "0,1,0"))
                                    (rule "expand_divJint" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,0,2,0,1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "37") (term "1,0,1,0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,1,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                    (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "24"))
                                    (rule "leq_literals" (formula "42") (term "0"))
                                    (rule "concrete_or_1" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "expand_divJint" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,2,0,1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "3") (term "1,0,1,0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,1,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                    (rule "expand_inInt" (formula "41"))
                                    (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "inEqSimp_commuteLeq" (formula "42"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                    (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "41") (term "0"))
                                    (rule "concrete_or_1" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "expand_moduloInteger" (formula "17") (term "1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "17") (term "1,1,1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "17") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "1,0"))
                                    (rule "mod_axiom" (formula "17") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
                                    (rule "div_literals" (formula "17") (term "0,1,1,1,0"))
                                    (rule "times_zero_2" (formula "17") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "1,0"))
                                    (rule "add_literals" (formula "17") (term "0,1,0"))
                                    (rule "expand_moduloInteger" (formula "35") (term "0"))
                                    (rule "replace_int_HALFRANGE" (formula "35") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "35") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,0,0,1"))
                                    (rule "expand_moduloInteger" (formula "16") (term "0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                    (rule "mod_axiom" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=moduloInt(add(Z(1(#)),
              moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(add(Z(1(#)),
                              moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "neg_literal" (formula "16") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "16") (term "0,0"))
                                    (rule "concrete_or_2" (formula "16") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "div_axiom" (formula "39") (term "0,1,1") (inst "quotient=quotient_0"))
                                    (rule "qeq_literals" (formula "39") (term "0,1,1"))
                                    (rule "ifthenelse_true_for" (formula "39") (term "1,1"))
                                    (rule "equal_literals" (formula "39") (term "0"))
                                    (rule "concrete_or_2" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1,1,1"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
                                    (rule "add_literals" (formula "41") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "41") (term "1"))
                                    (rule "add_literals" (formula "41") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0"))
                                    (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "37"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "7") (term "1"))
                                    (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "38"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "41") (term "1"))
                                    (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "36") (term "1"))
                                    (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "37") (term "1"))
                                    (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "34") (term "1"))
                                    (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1"))
                                    (rule "mul_literals" (formula "40") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0"))
                                    (rule "qeq_literals" (formula "39") (term "0"))
                                    (rule "concrete_or_1" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "7"))
                                    (rule "times_zero_1" (formula "24") (term "0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "39"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                    (rule "concrete_or_2" (formula "12") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (rule "concrete_or_2" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "30"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,1"))
                                    (rule "mul_literals" (formula "41") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                    (rule "concrete_or_2" (formula "20") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "neg_literal" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_2" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                    (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "20"))
                                    (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEqRigid" (formula "41") (term "0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "41") (term "1,1"))
                                    (rule "add_literals" (formula "41") (term "1"))
                                    (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "21") (term "1,1"))
                                    (rule "add_literals" (formula "21") (term "1"))
                                    (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEq" (formula "37") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "37") (term "1,0,1"))
                                    (rule "add_literals" (formula "37") (term "0,1"))
                                    (rule "applyEq" (formula "40") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "40") (term "1,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,1"))
                                    (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "34") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "34") (term "1,0,1"))
                                    (rule "add_literals" (formula "34") (term "0,1"))
                                    (rule "applyEq" (formula "36") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "36") (term "1,0,1"))
                                    (rule "add_literals" (formula "36") (term "0,1"))
                                    (rule "applyEqRigid" (formula "7") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "7") (term "1,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,1"))
                                    (rule "add_zero_left" (formula "7") (term "1"))
                                    (rule "applyEq" (formula "35") (term "0,1,0,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,1"))
                                    (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                    (rule "concrete_or_1" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "25"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "add_literals" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                    (rule "concrete_or_1" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "24") (term "0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "29"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                    (rule "expand_addJint" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,0,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "mod_axiom" (formula "2") (term "1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "div_literals" (formula "2") (term "0,1,1,0,0,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "expand_mulJint" (formula "34") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                    (rule "expand_addJint" (formula "16") (term "0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "16"))
                                    (rule "expand_moduloInteger" (formula "28") (term "1,1"))
                                    (rule "replace_int_MIN" (formula "28") (term "0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,1,1"))
                                    (rule "replace_int_RANGE" (formula "28") (term "1,1,1,1"))
                                    (rule "add_literals" (formula "28") (term "0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                    (rule "add_literals" (formula "28") (term "0,1"))
                                    (rule "mod_axiom" (formula "28") (term "1,1"))
                                    (rule "div_literals" (formula "28") (term "0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                    (rule "times_zero_2" (formula "28") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "28") (term "1,1"))
                                    (rule "add_literals" (formula "28") (term "1"))
                                    (rule "expand_moduloInteger" (formula "21") (term "0"))
                                    (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "21") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "21") (term "1,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "mod_axiom" (formula "21") (term "0,1,0"))
                                    (rule "div_literals" (formula "21") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                    (rule "times_zero_2" (formula "21") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0"))
                                    (rule "add_literals" (formula "21") (term "0"))
                                    (rule "leq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "20") (term "1,0,0"))
                                    (rule "replace_int_RANGE" (formula "20") (term "1,1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "20") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                    (rule "div_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "times_zero_2" (formula "20") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "div_literals" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "expand_divJint" (formula "27") (term "0,1,0,1"))
                                    (rule "jdiv_axiom_inline" (formula "27") (term "0,0,1,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,0,2,0,0,1,0,1"))
                                    (rule "div_literals" (formula "27") (term "1,0,0,1,0,1"))
                                    (rule "qeq_literals" (formula "27") (term "0,0,0,1,0,1"))
                                    (rule "ifthenelse_true" (formula "27") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "29"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                    (rule "expand_moduloInteger" (formula "37") (term "1,0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "37") (term "0,0,1,1,0,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,1,0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "37") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "37") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "37") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "1,0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,1,0,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,1,0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "5") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "expand_divJint" (formula "20") (term "1,1,0"))
                                    (rule "jdiv_axiom_inline" (formula "20") (term "0,1,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,2,0,1,1,0"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,1,1,0"))
                                    (rule "ifthenelse_true" (formula "20") (term "0,1,1,0"))
                                    (rule "div_literals" (formula "20") (term "0,1,1,0"))
                                    (rule "expand_divJint" (formula "3") (term "1,1,0"))
                                    (rule "jdiv_axiom_inline" (formula "3") (term "0,1,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,2,0,1,1,0"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,1,1,0"))
                                    (rule "ifthenelse_true" (formula "3") (term "0,1,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,1,0"))
                                    (rule "expand_moduloInteger" (formula "21") (term "0"))
                                    (rule "replace_int_RANGE" (formula "21") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "21") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "polyMod_pullOut" (formula "21") (term "0") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "21") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=add(Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
            Z(4(6(#)))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(2(4(9(0(5(4(2(4(4(6(#)))))))))))),
            mul(divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                        Z(4(6(#)))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (rule "concrete_or_2" (formula "21") (term "0"))
                                    (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_2" (formula "21"))
                                    (rule "polyDiv_pullOut" (formula "21") (term "0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "21") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "expand_divJint" (formula "36") (term "1,1,0"))
                                    (rule "jdiv_axiom_inline" (formula "36") (term "0,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,2,0,1,1,0"))
                                    (rule "div_literals" (formula "36") (term "1,0,1,1,0"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,1,1,0"))
                                    (rule "ifthenelse_true" (formula "36") (term "0,1,1,0"))
                                    (rule "expand_moduloInteger" (formula "19") (term "1,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "19") (term "1,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "19") (term "1,0,0,1,1,0"))
                                    (rule "div_literals" (formula "19") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1,0"))
                                    (rule "times_zero_2" (formula "19") (term "1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "19") (term "1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,1,0"))
                                    (rule "div_literals" (formula "19") (term "0,1,1,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0"))
                                    (rule "add_literals" (formula "19") (term "1,0"))
                                    (rule "expand_moduloInteger" (formula "35") (term "0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "35") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "35") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "35") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "35") (term "0,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,2,0,1,0,0,1,1"))
                                    (rule "equal_literals" (formula "35") (term "0,0,1,0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "35") (term "0,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "35") (term "0,1,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "equal_literals" (formula "35") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "35") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                    (rule "polyDiv_pullOut" (formula "35") (term "0,1,1") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                    (rule "equal_literals" (formula "35") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "35") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                    (rule "cnf_rightDist" (formula "30") (term "0"))
                                    (rule "expand_moduloInteger" (formula "18") (term "1"))
                                    (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "18") (term "1,1,1"))
                                    (rule "replace_int_MIN" (formula "18") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "mod_axiom" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "18") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "18") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,1,1,1,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "commute_or" (formula "27") (term "0,0"))
                                    (rule "expand_addJint" (formula "2") (term "0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0"))
                                    (rule "mul_literals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "2") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0"))
                                    (rule "mul_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "expand_moduloInteger" (formula "34") (term "0"))
                                    (rule "replace_int_RANGE" (formula "34") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "17") (term "1"))
                                    (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                    (rule "replace_int_RANGE" (formula "17") (term "1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "mod_axiom" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "17") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "17") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "17") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "expand_moduloInteger" (formula "30") (term "1"))
                                    (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "30") (term "1,1,1"))
                                    (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,1"))
                                    (rule "polyMod_pullOut" (formula "30") (term "1,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,1,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,1,1"))
                                    (rule "mod_axiom" (formula "30") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "30") (term "0,1,1") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,2,0,1,1"))
                                    (rule "equal_literals" (formula "30") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "30") (term "0,1,1"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "1"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "30"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "24") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "24") (inst "elimGcdRightDiv=add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
    moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "24") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (rule "concrete_or_2" (formula "24") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0"))
                                    (rule "qeq_literals" (formula "24") (term "0"))
                                    (rule "concrete_or_2" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "31"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "expand_moduloInteger" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "7") (term "0,1,0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "7") (term "1,1,1,0,0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "7") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "7") (term "0,1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "7") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "24") (term "0,1,0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "24") (term "1,1,1,0,0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "24") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "24") (term "0,1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "24") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "42") (term "0,1,0,0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "42") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "42") (term "1,1,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "42") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "42") (term "0,1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "42") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "expand_divJint" (formula "40") (term "0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "40") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "40") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "40") (term "0,0,1,0,0"))
                                    (rule "expand_divJint" (formula "6") (term "0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "6") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "6") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "6") (term "0,0,1,0,0"))
                                    (rule "expand_mulJint" (formula "21") (term "0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_1" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "expand_moduloInteger" (formula "4") (term "1,1,0"))
                                    (rule "replace_int_MIN" (formula "4") (term "0,1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "4") (term "1,1,1,1,0"))
                                    (rule "add_literals" (formula "4") (term "0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0,1,0"))
                                    (rule "mod_axiom" (formula "4") (term "1,1,0"))
                                    (rule "div_literals" (formula "4") (term "0,0,1,1,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "0,1,1,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,0"))
                                    (rule "add_literals" (formula "4") (term "1,0"))
                                    (rule "expand_divJint" (formula "21") (term "1,1"))
                                    (rule "jdiv_axiom_inline" (formula "21") (term "0,1,1"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,1,1"))
                                    (rule "ifthenelse_true" (formula "21") (term "0,1,1"))
                                    (rule "div_literals" (formula "21") (term "0,1,1"))
                                    (rule "expand_divJint" (formula "21") (term "0,1,0,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                    (rule "ifthenelse_true" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "div_literals" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "expand_mulJint" (formula "36") (term "0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "expand_mulJint" (formula "20") (term "0"))
                                    (rule "mul_literals" (formula "20") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "35") (term "1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "35") (term "0,0,1,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "35") (term "1,1,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                    (rule "div_literals" (formula "35") (term "0,1,1,0,0,0"))
                                    (rule "times_zero_2" (formula "35") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0,0") (ifseqformula "31"))
                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "46"))
                                    (rule "concrete_or_2" (formula "41"))
                                    (rule "expand_moduloInteger" (formula "35") (term "0,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,0,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "35") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "35") (term "1,1,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "35") (term "0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "mod_axiom" (formula "35") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,1,0"))
                                    (rule "div_literals" (formula "35") (term "0,1,0,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "35") (term "1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                    (rule "div_literals" (formula "35") (term "0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                    (rule "expand_moduloInteger" (formula "19") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "19") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "19") (term "0,0") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "19") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "19") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "19") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0"))
                                    (rule "mul_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "19") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "19") (term "0,0,1,0,1"))
                                    (rule "ifthenelse_false" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,1,1,0,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "1"))
                                    (rule "add_literals" (formula "19") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,1"))
                                    (rule "add_zero_right" (formula "19") (term "1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "1"))
                                    (rule "add_literals" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_subsumption2" (formula "19") (ifseqformula "22"))
                                    (rule "eq_and" (formula "19") (term "0,0"))
                                    (rule "greater_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_and_1" (formula "19") (term "0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_1" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "expand_divJint" (formula "3") (term "0,1,1"))
                                    (rule "jdiv_axiom_inline" (formula "3") (term "0,0,1,1"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,0,1,1"))
                                    (rule "ifthenelse_true" (formula "3") (term "0,0,1,1"))
                                    (rule "div_literals" (formula "3") (term "0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "expand_divJint" (formula "3") (term "1,0,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "3") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,2,0,1,0,0,0"))
                                    (rule "div_literals" (formula "3") (term "1,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,1,0,0,0"))
                                    (rule "ifthenelse_true" (formula "3") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "expand_moduloInteger" (formula "33") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "33") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "33") (term "1,1,0,1,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
                                    (rule "div_literals" (formula "33") (term "0,1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "33") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0"))
                                    (rule "div_literals" (formula "33") (term "0,0"))
                                    (rule "times_zero_2" (formula "33") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "33"))
                                    (rule "times_zero_2" (formula "33") (term "1,0"))
                                    (rule "add_zero_right" (formula "33") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1"))
                                    (rule "mul_literals" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                    (rule "expand_moduloInteger" (formula "18") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "18") (term "1,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "18") (term "0,0") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                    Z(4(6(#))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "18") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "18") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "18") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0"))
                                    (rule "mul_literals" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "18") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "18") (term "0,0,1,0,1"))
                                    (rule "ifthenelse_false" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,1,1,1,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "1"))
                                    (rule "add_literals" (formula "18") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,1"))
                                    (rule "add_zero_right" (formula "18") (term "1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "1"))
                                    (rule "add_literals" (formula "18") (term "0,1"))
                                    (rule "expand_moduloInteger" (formula "28") (term "0,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "28") (term "1,1,0,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "28") (term "0,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "28") (term "0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,1"))
                                    (rule "mod_axiom" (formula "28") (term "0,1,0,0,1,1"))
                                    (rule "div_literals" (formula "28") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,1"))
                                    (rule "times_zero_2" (formula "28") (term "1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "28") (term "0,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,1,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,1,1"))
                                    (rule "div_literals" (formula "28") (term "0,1,1"))
                                    (rule "mul_literals" (formula "28") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "1"))
                                    (rule "add_literals" (formula "28") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1"))
                                    (rule "mul_literals" (formula "38") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "29"))
                                    (rule "mul_literals" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_or_2" (formula "23") (term "0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "expand_moduloInteger" (formula "39") (term "0,1,1"))
                                    (rule "replace_int_MIN" (formula "39") (term "0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "39") (term "1,1,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "39") (term "0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "39") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "1"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                    (rule "add_literals" (formula "39") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "mod_axiom" (formula "39") (term "0,1,0"))
                                    (rule "div_literals" (formula "39") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "distr_forallAnd" (formula "31"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "expand_moduloInteger" (formula "22") (term "0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "22") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "22") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,0,1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "22") (term "0,1,0,0,0"))
                                    (rule "div_literals" (formula "22") (term "0,0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "22") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "div_literals" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0"))
                                    (rule "expand_moduloInteger" (formula "7") (term "0,1,1"))
                                    (rule "replace_int_RANGE" (formula "7") (term "1,1,0,1,1"))
                                    (rule "replace_int_MIN" (formula "7") (term "0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "7") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                                    (rule "add_literals" (formula "7") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "mod_axiom" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "7") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "7") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,1,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "expand_moduloInteger" (formula "6") (term "0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "6") (term "1,1,0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                    (rule "div_literals" (formula "6") (term "0,1,0,1,0,0"))
                                    (rule "times_zero_2" (formula "6") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "21") (term "0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "21") (term "1,1,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0"))
                                    (rule "div_literals" (formula "21") (term "0,1,0,1,0,0"))
                                    (rule "times_zero_2" (formula "21") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "expand_moduloInteger" (formula "37") (term "0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "37") (term "0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "37") (term "1,1,0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "37") (term "0,0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "37") (term "0,1,0,0"))
                                    (rule "div_literals" (formula "37") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0"))
                                    (rule "expand_mulJint" (formula "4") (term "0"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "34") (term "1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "34") (term "1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "34") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "34"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "mod_axiom" (formula "34") (term "1,0,0,1,0"))
                                    (rule "div_literals" (formula "34") (term "0,0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "34") (term "1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                    (rule "div_literals" (formula "34") (term "0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                    (rule "expand_moduloInteger" (formula "3") (term "0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "3") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "expand_moduloInteger" (formula "33") (term "0,0"))
                                    (rule "replace_int_MIN" (formula "33") (term "0,0,0"))
                                    (rule "replace_int_RANGE" (formula "33") (term "1,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "0"))
                                    (rule "mul_literals" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "33") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "33") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,1,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0"))
                                    (rule "add_literals" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                    (rule "mul_literals" (formula "33") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "33") (term "0"))
                                    (rule "concrete_or_1" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "expand_divJint" (formula "18") (term "0,1,0,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,2,0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                    (rule "ifthenelse_true" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "div_literals" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "expand_moduloInteger" (formula "27") (term "0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,0,1,1"))
                                    (rule "replace_int_MIN" (formula "27") (term "0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "27") (term "1,1,0,1,1"))
                                    (rule "add_literals" (formula "27") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "1"))
                                    (rule "add_literals" (formula "27") (term "0,1"))
                                    (rule "mod_axiom" (formula "27") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1"))
                                    (rule "div_literals" (formula "27") (term "0,1,0,1,1"))
                                    (rule "times_zero_2" (formula "27") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "27") (term "0,1,1"))
                                    (rule "mul_literals" (formula "27") (term "1,1"))
                                    (rule "add_literals" (formula "27") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "27"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                    (rule "concrete_or_1" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "26"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "26"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "36") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "36") (term "0"))
                                    (rule "concrete_or_1" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "expand_moduloInteger" (formula "35") (term "0,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "35") (term "0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "35") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0"))
                                    (rule "mul_literals" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "35") (term "0,1,0"))
                                    (rule "div_literals" (formula "35") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                    (rule "times_zero_2" (formula "35") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "add_literals" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                    (rule "mul_literals" (formula "35") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "35") (term "0"))
                                    (rule "concrete_or_1" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "expand_moduloInteger" (formula "6") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,0,0"))
                                    (rule "replace_int_RANGE" (formula "6") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "6") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "6") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "expand_moduloInteger" (formula "19") (term "0"))
                                    (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,1,0"))
                                    (rule "mod_axiom" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "div_literals" (formula "19") (term "0,1,1,0"))
                                    (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "19") (term "1,0"))
                                    (rule "add_literals" (formula "19") (term "0"))
                                    (rule "qeq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "expand_moduloInteger" (formula "32") (term "0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "32") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "32") (term "1,1,0,1,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "32") (term "0,1,0,0,0"))
                                    (rule "div_literals" (formula "32") (term "0,0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "32") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0"))
                                    (rule "div_literals" (formula "32") (term "0,0"))
                                    (rule "mul_literals" (formula "32") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "32"))
                                    (rule "mul_literals" (formula "32") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "add_literals" (formula "32") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "32") (term "0"))
                                    (rule "concrete_or_1" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "5") (term "0,1,0,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "5") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "expand_moduloInteger" (formula "4") (term "0"))
                                    (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "4") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "expand_moduloInteger" (formula "16") (term "0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                    (rule "add_literals" (formula "16") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                    (rule "add_literals" (formula "16") (term "0,0"))
                                    (rule "mod_axiom" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "16") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "16") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0"))
                                    (rule "add_literals" (formula "16") (term "0"))
                                    (rule "leq_literals" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "expand_moduloInteger" (formula "28") (term "0"))
                                    (rule "replace_int_MIN" (formula "28") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "28") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "28") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "28") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,1,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                    (rule "mul_literals" (formula "28") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "28") (term "0"))
                                    (rule "concrete_or_1" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "expand_moduloInteger" (formula "3") (term "1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "3") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "mod_axiom" (formula "3") (term "1,0,0,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "expand_divJint" (formula "15") (term "0"))
                                    (rule "jdiv_axiom_inline" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                    (rule "ifthenelse_true" (formula "15") (term "0,0"))
                                    (rule "div_literals" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                    (rule "commute_or" (formula "23") (term "0"))
                                    (rule "expand_moduloInteger" (formula "3") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "div_literals" (formula "3") (term "0,0"))
                                    (rule "times_zero_2" (formula "3") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0"))
                                    (rule "div_literals" (formula "14") (term "0,1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "div_literals" (formula "14") (term "0,0"))
                                    (rule "mul_literals" (formula "14") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "allLeft" (formula "31") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011110000_4" (formula "31") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00011110000_5" (formula "31") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "31") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "31") (term "1,0"))
                                    (rule "concrete_or_4" (formula "31") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "31") (term "0,0"))
                                    (rule "concrete_and_2" (formula "31") (term "0"))
                                    (rule "concrete_or_2" (formula "31"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "31"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "14") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0"))
                                    (rule "add_literals" (formula "14") (term "0"))
                                    (rule "leq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "17") (inst "t=i_0"))
                                    (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "38"))
                                    (rule "concrete_or_4" (formula "17"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                    (rule "concrete_and_2" (formula "17") (term "1"))
                                    (rule "concrete_or_4" (formula "17"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "4"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "17"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "closeFalse" (formula "17"))
                                 )
                                 (branch "CUT: self.wordsInUse <= -1 + self.words.length FALSE"
                                    (rule "concrete_impl_2" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "45"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "28"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "29"))
                                    (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                    (rule "add_literals" (formula "29") (term "1,0"))
                                    (rule "times_zero_1" (formula "29") (term "0"))
                                    (rule "qeq_literals" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "8"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch " ! self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null & ! (self.words@anon_heap_ensureCapacity<<anonHeapFunction>>).<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "expand_moduloInteger" (formula "27") (term "1,0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "27") (term "0,1,0,0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,1,0,0,1,1"))
                                 (rule "replace_int_RANGE" (formula "27") (term "1,1,1,0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,1"))
                                 (rule "mod_axiom" (formula "27") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,1"))
                                 (rule "div_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                                 (rule "times_zero_2" (formula "27") (term "1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "27") (term "1,0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,1,1"))
                                 (rule "div_literals" (formula "27") (term "0,1,1"))
                                 (rule "mul_literals" (formula "27") (term "1,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "1"))
                                 (rule "add_literals" (formula "27") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "27"))
                                 (rule "times_zero_1" (formula "23") (term "0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "mul_literals" (formula "23") (term "1"))
                                 (rule "expand_moduloInteger" (formula "22") (term "1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,1,1"))
                                 (rule "replace_int_RANGE" (formula "22") (term "1,1,1,1"))
                                 (rule "replace_int_MIN" (formula "22") (term "0,1,1"))
                                 (rule "add_literals" (formula "22") (term "0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                 (rule "add_literals" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "mod_axiom" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                 (rule "div_literals" (formula "22") (term "0,1,1,0"))
                                 (rule "times_zero_2" (formula "22") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "neg_literal" (formula "22") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                 (rule "concrete_or_2" (formula "22"))
                                 (rule "expand_moduloInteger" (formula "20") (term "0"))
                                 (rule "replace_int_RANGE" (formula "20") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,1,0"))
                                 (rule "mod_axiom" (formula "20") (term "1,0"))
                                 (rule "div_literals" (formula "20") (term "0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_2" (formula "20") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "20") (term "1,0"))
                                 (rule "add_literals" (formula "20") (term "0"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "expand_mulJint" (formula "28") (term "1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "28"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "29"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "29"))
                                 (rule "times_zero_1" (formula "20") (term "0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0"))
                                 (rule "expand_mulJint" (formula "19") (term "0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                                 (rule "expand_divJint" (formula "4") (term "1,1,0"))
                                 (rule "jdiv_axiom_inline" (formula "4") (term "0,1,1,0"))
                                 (rule "div_literals" (formula "4") (term "1,0,1,1,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,1,1,0"))
                                 (rule "ifthenelse_true" (formula "4") (term "0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1,0"))
                                 (rule "cut_direct" (formula "27") (term "0"))
                                 (branch "CUT: self.wordsInUse <= -1 + self.words.length TRUE"
                                    (rule "concrete_impl_1" (formula "28"))
                                    (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                    (rule "qeq_literals" (formula "26") (term "0"))
                                    (rule "concrete_or_1" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                                    (rule "times_zero_1" (formula "24") (term "0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "24"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "29"))
                                    (rule "mul_literals" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_1" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "expand_divJint" (formula "37") (term "1,1,0"))
                                    (rule "jdiv_axiom_inline" (formula "37") (term "0,1,1,0"))
                                    (rule "div_literals" (formula "37") (term "1,0,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,0,2,0,1,1,0"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,1,1,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "1,0"))
                                    (rule "expand_divJint" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,2,0,1,0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,1,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                    (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                    (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "41") (term "0"))
                                    (rule "concrete_or_1" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                    (rule "expand_inInt" (formula "41"))
                                    (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "inEqSimp_commuteLeq" (formula "42"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                    (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "41") (term "0"))
                                    (rule "concrete_or_1" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "expand_divJint" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,2,0,1,0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,1,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "17") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "17") (term "0,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "17") (term "1,1,1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "1,0"))
                                    (rule "mod_axiom" (formula "17") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
                                    (rule "div_literals" (formula "17") (term "0,1,1,1,0"))
                                    (rule "times_zero_2" (formula "17") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "1,0"))
                                    (rule "add_literals" (formula "17") (term "0,1,0"))
                                    (rule "expand_moduloInteger" (formula "34") (term "0,0,0"))
                                    (rule "replace_int_RANGE" (formula "34") (term "1,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "34") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "34") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "34") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,2,0,1,0,0"))
                                    (rule "equal_literals" (formula "34") (term "0,0,1,0,0"))
                                    (rule "ifthenelse_false" (formula "34") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "16") (term "0,0,0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "16") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "16") (term "0,0,1,0,0"))
                                    (rule "ifthenelse_false" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                    (rule "div_axiom" (formula "38") (term "0,1,1") (inst "quotient=quotient_0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,1,1,1"))
                                    (rule "equal_literals" (formula "38") (term "0"))
                                    (rule "concrete_or_2" (formula "38"))
                                    (rule "qeq_literals" (formula "38") (term "0,1"))
                                    (rule "ifthenelse_true_for" (formula "38") (term "1"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "1"))
                                    (rule "add_literals" (formula "40") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "37") (term "1"))
                                    (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "7") (term "1"))
                                    (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "34") (term "1"))
                                    (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "38"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_addComm1" (formula "33") (term "1"))
                                    (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                    (rule "inEqSimp_homoInEq1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "applyEq" (formula "40") (term "0,1,1") (ifseqformula "37"))
                                    (rule "polySimp_addComm1" (formula "40") (term "1"))
                                    (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "37"))
                                    (rule "polySimp_addComm1" (formula "35") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1"))
                                    (rule "mul_literals" (formula "38") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0"))
                                    (rule "qeq_literals" (formula "38") (term "0"))
                                    (rule "concrete_or_1" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "38"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                    (rule "concrete_or_2" (formula "12") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (rule "concrete_or_2" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "25"))
                                    (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "30"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                    (rule "mul_literals" (formula "41") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "7"))
                                    (rule "times_zero_1" (formula "25") (term "0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                    (rule "mul_literals" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                    (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "21") (term "1,1"))
                                    (rule "add_literals" (formula "21") (term "1"))
                                    (rule "applyEqRigid" (formula "40") (term "0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "40") (term "1,1"))
                                    (rule "add_literals" (formula "40") (term "1"))
                                    (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "34") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "34") (term "1,0,1"))
                                    (rule "add_literals" (formula "34") (term "0,1"))
                                    (rule "applyEq" (formula "33") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "33") (term "1,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,1"))
                                    (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "7") (term "1,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,1"))
                                    (rule "add_zero_left" (formula "7") (term "1"))
                                    (rule "applyEq" (formula "36") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "36") (term "1,0,1"))
                                    (rule "add_literals" (formula "36") (term "0,1"))
                                    (rule "applyEqRigid" (formula "39") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "39") (term "1,0,1"))
                                    (rule "add_literals" (formula "39") (term "0,1"))
                                    (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "35") (term "1,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,1"))
                                    (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "38") (term "0"))
                                    (rule "concrete_or_1" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "24"))
                                    (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "add_literals" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "38") (term "0"))
                                    (rule "concrete_or_1" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "7"))
                                    (rule "times_zero_1" (formula "23") (term "0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                    (rule "mul_literals" (formula "38") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                    (rule "expand_divJint" (formula "2") (term "0,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "2") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "ifthenelse_true" (formula "2") (term "0,0,0,0"))
                                    (rule "div_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "expand_mulJint" (formula "33") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                    (rule "expand_divJint" (formula "16") (term "0,0"))
                                    (rule "jdiv_axiom_inline" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,2,0,0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                    (rule "ifthenelse_true" (formula "16") (term "0,0,0"))
                                    (rule "div_literals" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "16"))
                                    (rule "expand_moduloInteger" (formula "27") (term "1,1"))
                                    (rule "replace_int_RANGE" (formula "27") (term "1,1,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,1,1"))
                                    (rule "replace_int_MIN" (formula "27") (term "0,1,1"))
                                    (rule "add_literals" (formula "27") (term "0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "1"))
                                    (rule "add_literals" (formula "27") (term "0,1"))
                                    (rule "mod_axiom" (formula "27") (term "1,1"))
                                    (rule "div_literals" (formula "27") (term "0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                    (rule "times_zero_2" (formula "27") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "27") (term "1,1"))
                                    (rule "add_literals" (formula "27") (term "1"))
                                    (rule "expand_moduloInteger" (formula "20") (term "0"))
                                    (rule "replace_int_MIN" (formula "20") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "20") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "mod_axiom" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "20") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "20") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0"))
                                    (rule "add_literals" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "commute_or" (formula "40") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "19") (term "1,0,0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "19") (term "1,1,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "19") (term "1,0,0"))
                                    (rule "div_literals" (formula "19") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "19") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "div_literals" (formula "19") (term "0"))
                                    (rule "leq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "expand_divJint" (formula "26") (term "0,1,0,1"))
                                    (rule "jdiv_axiom_inline" (formula "26") (term "0,0,1,0,1"))
                                    (rule "div_literals" (formula "26") (term "1,0,0,1,0,1"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0,1,0,1"))
                                    (rule "ifthenelse_true" (formula "26") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "26"))
                                    (rule "mul_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (rule "concrete_or_1" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "26"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1"))
                                    (rule "mul_literals" (formula "36") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "26"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "expand_moduloInteger" (formula "5") (term "1,0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,1,0,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,1,0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "5") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "35") (term "1,0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "35") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "35") (term "0,0,1,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "35") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "35") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "expand_moduloInteger" (formula "3") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1,0"))
                                    (rule "mod_axiom" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,1,1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1,0"))
                                    (rule "add_literals" (formula "3") (term "0,1,0"))
                                    (rule "expand_moduloInteger" (formula "19") (term "0"))
                                    (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "polyMod_pullOut" (formula "19") (term "0") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "19") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1"))
                                    (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=add(Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
            Z(4(6(#)))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(2(4(9(0(5(4(2(4(4(6(#)))))))))))),
            mul(divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                        Z(4(6(#)))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                    (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "polyDiv_pullOut" (formula "19") (term "0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "19") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0"))
                                    (rule "mul_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "expand_mulJint" (formula "34") (term "0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "18") (term "1,0,0,1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "18") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0"))
                                    (rule "div_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,1,0"))
                                    (rule "div_literals" (formula "18") (term "0,1,1,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,0"))
                                    (rule "expand_moduloInteger" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "33") (term "0,1,0,0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "33") (term "1,1,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "33") (term "0,1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "33") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0"))
                                    (rule "cnf_rightDist" (formula "28") (term "0"))
                                    (rule "commute_or" (formula "25") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                    (rule "div_literals" (formula "2") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                    (rule "expand_moduloInteger" (formula "32") (term "0,0,0"))
                                    (rule "replace_int_MIN" (formula "32") (term "0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "32") (term "1,1,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "32") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0"))
                                    (rule "div_literals" (formula "32") (term "0,1,0,1,0,0"))
                                    (rule "times_zero_2" (formula "32") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "1,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "17") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "17") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "17") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "17") (term "0,0") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                    Z(4(6(#))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "17") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "17") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "17") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0"))
                                    (rule "mul_literals" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "17") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "17") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "17") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "27") (term "1,0,0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,1,0,0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "27") (term "0,1,0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "27") (term "1,1,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,1"))
                                    (rule "mod_axiom" (formula "27") (term "1,0,0,1,0,1"))
                                    (rule "div_literals" (formula "27") (term "0,0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1"))
                                    (rule "times_zero_2" (formula "27") (term "1,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,1,0,1"))
                                    (rule "div_literals" (formula "27") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1"))
                                    (rule "mul_literals" (formula "37") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "expand_moduloInteger" (formula "21") (term "0"))
                                    (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "21") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "polyMod_pullOut" (formula "21") (term "0") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "mod_axiom" (formula "21") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=add(Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(2(4(9(0(5(4(2(4(4(6(#)))))))))))),
            mul(moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (rule "concrete_or_2" (formula "21") (term "0"))
                                    (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_2" (formula "21"))
                                    (rule "polyDiv_pullOut" (formula "21") (term "0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "21") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0,0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "45"))
                                    (rule "concrete_or_2" (formula "29"))
                                    (rule "expand_moduloInteger" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "6") (term "1,1,1,0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                    (rule "mod_axiom" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0,0"))
                                    (rule "div_literals" (formula "6") (term "0,1,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "6") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "5") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "5") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "5") (term "0,0,1,0,0"))
                                    (rule "expand_divJint" (formula "35") (term "0,1,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "35") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "35") (term "0,0,0,1,0,0"))
                                    (rule "ifthenelse_true" (formula "35") (term "0,0,1,0,0"))
                                    (rule "div_literals" (formula "35") (term "0,0,1,0,0"))
                                    (rule "expand_moduloInteger" (formula "3") (term "1,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,1,0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0,0,1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "3") (term "1,0,0,1,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,1,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,1,0"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,0"))
                                    (rule "expand_divJint" (formula "18") (term "1,1"))
                                    (rule "jdiv_axiom_inline" (formula "18") (term "0,1,1"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,1,1"))
                                    (rule "ifthenelse_true" (formula "18") (term "0,1,1"))
                                    (rule "div_literals" (formula "18") (term "0,1,1"))
                                    (rule "expand_divJint" (formula "18") (term "0,1,0,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                    (rule "ifthenelse_true" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "div_literals" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "expand_mulJint" (formula "17") (term "0"))
                                    (rule "mul_literals" (formula "17") (term "0,0"))
                                    (rule "expand_moduloInteger" (formula "33") (term "0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "33") (term "1,1,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "33") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0"))
                                    (rule "div_literals" (formula "33") (term "0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0,0") (ifseqformula "29"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,0,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,0,0,0"))
                                    (rule "div_literals" (formula "2") (term "0,0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "32") (term "0"))
                                    (rule "replace_int_RANGE" (formula "32") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "32") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "32") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,1,0"))
                                    (rule "mul_literals" (formula "32") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "add_literals" (formula "32") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                    (rule "mul_literals" (formula "32") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "32") (term "0"))
                                    (rule "concrete_or_1" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "expand_divJint" (formula "16") (term "0,1,0,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                    (rule "ifthenelse_true" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "div_literals" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                                    (rule "mul_literals" (formula "16") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "27") (term "0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "27") (term "0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "27") (term "1,1,0,1,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,1"))
                                    (rule "mod_axiom" (formula "27") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1"))
                                    (rule "div_literals" (formula "27") (term "0,1,0,1,0,1"))
                                    (rule "times_zero_2" (formula "27") (term "1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "27") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1"))
                                    (rule "mul_literals" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (rule "concrete_or_1" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                    (rule "mul_literals" (formula "5") (term "0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "5") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "5") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0"))
                                    (rule "mul_literals" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "expand_moduloInteger" (formula "19") (term "0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "mod_axiom" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1"))
                                    (rule "mul_literals" (formula "19") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                    (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=add(Z(0(#)), moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(0(5(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "add_zero_left" (formula "19") (term "1,1"))
                                    (rule "leq_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "neg_literal" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "polyDiv_pullOut" (formula "19") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "19") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0"))
                                    (rule "mul_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "distr_forallAnd" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "expand_moduloInteger" (formula "18") (term "1,1"))
                                    (rule "replace_int_MIN" (formula "18") (term "0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,1"))
                                    (rule "replace_int_RANGE" (formula "18") (term "1,1,1,1"))
                                    (rule "add_literals" (formula "18") (term "0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                    (rule "add_literals" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "mod_axiom" (formula "18") (term "1,0"))
                                    (rule "div_literals" (formula "18") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))),
            Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                                    (rule "neg_literal" (formula "18") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "expand_mulJint" (formula "3") (term "0"))
                                    (rule "mul_literals" (formula "3") (term "0,0"))
                                    (rule "expand_addJint" (formula "2") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                    (rule "expand_divJint" (formula "16") (term "1,0,0,0"))
                                    (rule "jdiv_axiom_inline" (formula "16") (term "0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "ifthenelse_true" (formula "16") (term "0,1,0,0,0"))
                                    (rule "div_literals" (formula "16") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "expand_moduloInteger" (formula "26") (term "1"))
                                    (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "26") (term "0,1"))
                                    (rule "replace_int_RANGE" (formula "26") (term "1,1,1"))
                                    (rule "add_literals" (formula "26") (term "0,1,1"))
                                    (rule "mod_axiom" (formula "26") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                    (rule "div_literals" (formula "26") (term "0,1,1,1"))
                                    (rule "times_zero_2" (formula "26") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "26") (term "1,1"))
                                    (rule "add_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "26"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_1" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "25"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "25"))
                                    (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0"))
                                    (rule "add_literals" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "33") (term "0"))
                                    (rule "concrete_or_1" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "expand_moduloInteger" (formula "32") (term "0"))
                                    (rule "replace_int_MIN" (formula "32") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "32") (term "1,1,0"))
                                    (rule "add_literals" (formula "32") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "32") (term "0,1,0"))
                                    (rule "div_literals" (formula "32") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                    (rule "times_zero_2" (formula "32") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,1,0"))
                                    (rule "mul_literals" (formula "32") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "add_literals" (formula "32") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                    (rule "mul_literals" (formula "32") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "32") (term "0"))
                                    (rule "concrete_or_1" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "expand_moduloInteger" (formula "4") (term "0"))
                                    (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                                    (rule "replace_int_MIN" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "4") (term "0,1,0"))
                                    (rule "div_literals" (formula "4") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "expand_moduloInteger" (formula "17") (term "0"))
                                    (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "17") (term "1,1,0"))
                                    (rule "replace_int_MIN" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "0,0"))
                                    (rule "mod_axiom" (formula "17") (term "0,1,0"))
                                    (rule "div_literals" (formula "17") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                    (rule "times_zero_2" (formula "17") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0"))
                                    (rule "add_literals" (formula "17") (term "0"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "expand_moduloInteger" (formula "3") (term "0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,1"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,1"))
                                    (rule "add_literals" (formula "3") (term "0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "div_literals" (formula "3") (term "0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0"))
                                    (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
                                    (rule "div_literals" (formula "16") (term "0,1,0,1,0,0"))
                                    (rule "times_zero_2" (formula "16") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0"))
                                    (rule "div_literals" (formula "16") (term "0"))
                                    (rule "leq_literals" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "expand_addJint" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "15") (term "1,0,0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "15") (term "1,1,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "15") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "mod_axiom" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "div_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "15") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                    (rule "div_literals" (formula "15") (term "0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "expand_moduloInteger" (formula "3") (term "0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "3") (term "0,1,0,0,0"))
                                    (rule "div_literals" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "div_literals" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                    (rule "div_literals" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "div_literals" (formula "2") (term "0,0"))
                                    (rule "times_zero_2" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "times_zero_2" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "expand_moduloInteger" (formula "14") (term "0,1,0,0,1,1"))
                                    (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,0,1,0,0,1,1"))
                                    (rule "replace_int_RANGE" (formula "14") (term "1,1,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "14"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "mod_axiom" (formula "14") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0"))
                                    (rule "div_literals" (formula "14") (term "0,1,0,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                    (rule "div_literals" (formula "14") (term "0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "inEqSimp_invertInEq0" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "times_zero_2" (formula "14") (term "1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "23") (term "0"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0"))
                                    (rule "mul_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                    (rule "div_literals" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "cut_direct" (formula "33") (term "0,0"))
                                    (branch "CUT: self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null TRUE"
                                       (rule "concrete_not_1" (formula "34") (term "0"))
                                       (rule "concrete_and_2" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                                       (rule "concrete_or_1" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "18") (term "1,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "30"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "expand_moduloInteger" (formula "14") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "div_literals" (formula "14") (term "0,1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "expand_addJint" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "14") (term "0"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "div_literals" (formula "14") (term "0,1,1,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "1,0"))
                                       (rule "add_literals" (formula "14") (term "0"))
                                       (rule "qeq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "allLeft" (formula "21") (inst "t=i_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "21") (term "0,0"))
                                       (rule "concrete_or_2" (formula "21") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0"))
                                       (rule "concrete_and_2" (formula "21") (term "0"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "allLeft" (formula "17") (inst "t=i_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "17") (term "0,0"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_and_2" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "allLeft" (formula "31") (inst "t=i_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                       (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "31") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "31") (term "1,0"))
                                       (rule "concrete_or_4" (formula "31") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "31") (term "0,0"))
                                       (rule "concrete_and_2" (formula "31") (term "0"))
                                       (rule "concrete_or_2" (formula "31"))
                                       (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "25"))
                                       (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                                       (rule "equalUnique" (formula "31") (term "0,1,0,0,0"))
                                       (rule "concrete_not_2" (formula "31") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "31") (term "0,0,0"))
                                       (rule "eqClose" (formula "31") (term "0,0,1,0,0"))
                                       (rule "concrete_not_1" (formula "31") (term "0,1,0,0"))
                                       (rule "concrete_and_2" (formula "31") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "31") (term "0,0"))
                                       (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                       (rule "ifEqualsInteger" (formula "31"))
                                       (rule "replace_known_right" (formula "31") (term "1,1") (ifseqformula "37"))
                                       (rule "concrete_and_4" (formula "31") (term "1"))
                                       (rule "concrete_or_4" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31") (term "0"))
                                       (rule "equalUnique" (formula "31") (term "1,0"))
                                       (rule "concrete_and_4" (formula "31") (term "0"))
                                       (rule "concrete_or_2" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31"))
                                       (rule "equalUnique" (formula "31") (term "1"))
                                       (rule "concrete_and_4" (formula "31"))
                                       (rule "closeFalse" (formula "31"))
                                    )
                                    (branch "CUT: self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null FALSE"
                                       (rule "concrete_not_2" (formula "34") (term "0"))
                                       (rule "concrete_and_1" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "30"))
                                       (rule "expand_addJint" (formula "14") (term "0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "14") (term "0"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,0"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "14") (term "0,0,0"))
                                       (rule "ifthenelse_false" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0"))
                                       (rule "mul_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "expand_moduloInteger" (formula "14") (term "1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,1,1"))
                                       (rule "add_literals" (formula "14") (term "0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                       (rule "add_literals" (formula "14") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "mod_axiom" (formula "14") (term "1,0"))
                                       (rule "div_literals" (formula "14") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                       (rule "concrete_or_2" (formula "14") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "expand_moduloInteger" (formula "14") (term "1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "14") (term "1,1,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "14") (term "1,0,0"))
                                       (rule "div_literals" (formula "14") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "div_literals" (formula "14") (term "0"))
                                       (rule "leq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "allLeft" (formula "31") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet0011110000_4" (formula "31") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10011110000_5" (formula "31") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "31") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "31") (term "1,0"))
                                       (rule "concrete_or_4" (formula "31") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "31") (term "0,0"))
                                       (rule "concrete_and_2" (formula "31") (term "0"))
                                       (rule "concrete_or_2" (formula "31"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "31"))
                                       (rule "allLeft" (formula "17") (inst "t=i_0"))
                                       (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "38"))
                                       (rule "concrete_or_4" (formula "17"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_and_2" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "17"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "CUT: self.wordsInUse <= -1 + self.words.length FALSE"
                                    (rule "concrete_impl_2" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_leqRight" (formula "44"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "27"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "27"))
                                    (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                    (rule "add_literals" (formula "27") (term "1,0"))
                                    (rule "times_zero_1" (formula "27") (term "0"))
                                    (rule "qeq_literals" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "38"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "leq_literals" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allLeftHide" (formula "24") (inst "t=i_0") (userinteraction))
                              (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                              (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                              (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                              (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                              (rule "expand_inInt" (formula "5"))
                              (rule "expand_inLong" (formula "16") (term "1,0"))
                              (rule "replace_int_MAX" (formula "5") (term "1,0"))
                              (rule "replace_int_MIN" (formula "5") (term "0,1"))
                              (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                              (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                              (rule "impRight" (formula "28"))
                              (rule "simplifyUpdate2" (formula "29"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "simplifyUpdate2" (formula "2"))
                              (rule "translateJavaSubInt" (formula "12") (term "0,2,0,0,1"))
                              (rule "translateJavaAddInt" (formula "17") (term "1"))
                              (rule "translateJavaMulInt" (formula "18") (term "1"))
                              (rule "translateJavaDivInt" (formula "17") (term "0,1"))
                              (rule "translateJavaAddInt" (formula "18") (term "1,1"))
                              (rule "translateJavaDivInt" (formula "18") (term "0,1,1"))
                              (rule "applyOnRigidFormula" (formula "31"))
                              (rule "simplifyUpdate1" (formula "31") (term "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "simplifyUpdate1" (formula "1") (term "0"))
                              (rule "applyOnRigidFormula" (formula "2"))
                              (rule "simplifyUpdate1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                              (rule "applyOnRigidTerm" (formula "31") (term "0"))
                              (rule "simplifyUpdate1" (formula "31") (term "2,0"))
                              (rule "applyOnPV" (formula "31") (term "0,0"))
                              (rule "applyOnRigidTerm" (formula "1") (term "1"))
                              (rule "simplifyUpdate1" (formula "1") (term "2,1"))
                              (rule "applyOnPV" (formula "1") (term "0,1"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                              (rule "applyOnRigidTerm" (formula "2") (term "1"))
                              (rule "applyOnRigidTerm" (formula "31") (term "1,0"))
                              (rule "applyOnPV" (formula "31") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "31") (term "2,1,0"))
                              (rule "simplifyUpdate1" (formula "31") (term "1,1,0"))
                              (rule "applyOnRigidTerm" (formula "2") (term "0,1"))
                              (rule "applyOnPV" (formula "2") (term "0,0,1"))
                              (rule "simplifyUpdate1" (formula "2") (term "1,0,1"))
                              (rule "simplifyUpdate1" (formula "2") (term "2,0,1"))
                              (rule "dismissNonSelectedField" (formula "31") (term "1,0"))
                              (rule "replaceKnownSelect_taclet00_0" (formula "31") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "31") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                              (rule "replaceKnownSelect_taclet00_0" (formula "2") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "2") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "31") (term "0"))
                              (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "31"))
                              (rule "concrete_impl_3" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "8"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "2"))
                              (rule "concrete_and_1" (formula "28"))
                              (rule "inEqSimp_leqRight" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                              (rule "leq_literals" (formula "9") (term "0"))
                              (rule "concrete_or_1" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "19"))
                              (rule "times_zero_1" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
                              (rule "times_zero_1" (formula "16") (term "0,0"))
                              (rule "add_zero_left" (formula "16") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "expand_divJint" (formula "13") (term "0"))
                              (rule "jdiv_axiom_inline" (formula "13") (term "0,0"))
                              (rule "mul_literals" (formula "13") (term "0,0,2,0,0"))
                              (rule "qeq_literals" (formula "13") (term "0,0,0"))
                              (rule "ifthenelse_true" (formula "13") (term "0,0"))
                              (rule "div_literals" (formula "13") (term "0,0"))
                              (rule "expand_addJint" (formula "30") (term "1"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                              (rule "expand_subJint" (formula "14") (term "0,2,0,0,1"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,0,2,0,0,1"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,2,0,0,1"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,1"))
                              (rule "expand_divJint" (formula "24") (term "0,1"))
                              (rule "jdiv_axiom_inline" (formula "24") (term "0,0,1"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0,1"))
                              (rule "ifthenelse_true" (formula "24") (term "0,0,1"))
                              (rule "div_literals" (formula "24") (term "0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "24"))
                              (rule "mul_literals" (formula "20") (term "0,0"))
                              (rule "add_zero_left" (formula "20") (term "0"))
                              (rule "expand_mulJint" (formula "26") (term "1"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "26"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "36") (term "0"))
                              (rule "nnf_imp2or" (formula "29") (term "0"))
                              (rule "expand_addJint" (formula "7") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "7") (term "0,1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "nnf_imp2or" (formula "27") (term "0,1"))
                              (rule "expand_divJint" (formula "17") (term "0,0"))
                              (rule "jdiv_axiom_inline" (formula "17") (term "0,0,0"))
                              (rule "div_literals" (formula "17") (term "1,0,0,0"))
                              (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                              (rule "ifthenelse_true" (formula "17") (term "0,0,0"))
                              (rule "expand_addJint" (formula "20") (term "0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                              (rule "expand_addJint" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,1,0"))
                              (rule "expand_mulJint" (formula "17") (term "0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "14") (term "0"))
                              (rule "replace_int_MIN" (formula "14") (term "0,0"))
                              (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                              (rule "add_literals" (formula "14") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                              (rule "mod_axiom" (formula "14") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "div_literals" (formula "14") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,1,0"))
                              (rule "add_literals" (formula "14") (term "0,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "14"))
                              (rule "leq_literals" (formula "11") (term "0"))
                              (rule "concrete_or_1" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "expand_moduloInteger" (formula "30") (term "1"))
                              (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "30") (term "1,1,1"))
                              (rule "replace_int_MIN" (formula "30") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1,1"))
                              (rule "mod_axiom" (formula "30") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "30") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "30") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "30") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "30") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1,1,1,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                              (rule "mul_literals" (formula "30") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "1"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "14") (term "0,2,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0,2,0,0,1"))
                              (rule "replace_int_MIN" (formula "14") (term "0,0,2,0,0,1"))
                              (rule "replace_int_RANGE" (formula "14") (term "1,1,0,2,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,2,0,0,1"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,2,0,0,1"))
                              (rule "mod_axiom" (formula "14") (term "1,0,2,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,2,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,2,0,0,1"))
                              (rule "add_literals" (formula "14") (term "0,0,0,2,0,0,1"))
                              (rule "expand_moduloInteger" (formula "24") (term "0,1"))
                              (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,0,1"))
                              (rule "replace_int_MIN" (formula "24") (term "0,0,1"))
                              (rule "replace_int_RANGE" (formula "24") (term "1,1,0,1"))
                              (rule "add_literals" (formula "24") (term "0,1,0,1"))
                              (rule "mod_axiom" (formula "24") (term "1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1"))
                              (rule "div_literals" (formula "24") (term "0,1,1,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,1,0,1"))
                              (rule "add_zero_right" (formula "24") (term "1,0,1"))
                              (rule "add_literals" (formula "24") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "24"))
                              (rule "mul_literals" (formula "20") (term "0,0"))
                              (rule "add_zero_left" (formula "20") (term "0"))
                              (rule "expand_addJint" (formula "18") (term "0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                              (rule "expand_divJint" (formula "26") (term "0,0,0,1"))
                              (rule "jdiv_axiom_inline" (formula "26") (term "0,0,0,0,1"))
                              (rule "mul_literals" (formula "26") (term "0,0,2,0,0,0,0,1"))
                              (rule "div_literals" (formula "26") (term "1,0,0,0,0,1"))
                              (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,1"))
                              (rule "ifthenelse_true" (formula "26") (term "0,0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "26"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "18") (term "0,0"))
                              (rule "add_zero_left" (formula "18") (term "0"))
                              (rule "expand_divJint" (formula "3") (term "0,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "3") (term "0,0,0,0,0"))
                              (rule "div_literals" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,2,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0,0,0,0"))
                              (rule "ifthenelse_true" (formula "3") (term "0,0,0,0,0"))
                              (rule "expand_divJint" (formula "16") (term "0,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "16") (term "0,0,0,0,0"))
                              (rule "div_literals" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,0,2,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "16") (term "0,0,0,0,0,0"))
                              (rule "ifthenelse_true" (formula "16") (term "0,0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "7") (term "1,1"))
                              (rule "replace_int_MIN" (formula "7") (term "0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,1,1"))
                              (rule "replace_int_RANGE" (formula "7") (term "1,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1"))
                              (rule "add_literals" (formula "7") (term "0,1"))
                              (rule "mod_axiom" (formula "7") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1"))
                              (rule "add_zero_left" (formula "7") (term "0,1"))
                              (rule "polyDiv_pullOut" (formula "7") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "7") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "7") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "7") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "7") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                              (rule "mul_literals" (formula "7") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1"))
                              (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "21") (term "0,0"))
                              (rule "add_zero_left" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "expand_moduloInteger" (formula "19") (term "0"))
                              (rule "replace_int_MIN" (formula "19") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "mod_axiom" (formula "19") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                              (rule "polySimp_elimOne" (formula "19") (term "1"))
                              (rule "polyDiv_pullOut" (formula "19") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "19") (term "0,0,0"))
                              (rule "ifthenelse_false" (formula "19") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "0"))
                              (rule "mul_literals" (formula "19") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "expand_mulJint" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                              (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "27") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1"))
                              (rule "expand_addJint" (formula "25") (term "1"))
                              (rule "add_literals" (formula "25") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "25"))
                              (rule "times_zero_1" (formula "21") (term "0,0"))
                              (rule "add_zero_left" (formula "21") (term "0"))
                              (rule "expand_addJint" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "18") (term "0"))
                              (rule "replace_int_RANGE" (formula "18") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "18") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,0"))
                              (rule "mod_axiom" (formula "18") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "polyDiv_pullOut" (formula "18") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "18") (term "0,0,0"))
                              (rule "ifthenelse_false" (formula "18") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "0"))
                              (rule "polySimp_addComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,1,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "0"))
                              (rule "mul_literals" (formula "18") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "expand_addJint" (formula "26") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "26"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "18") (term "0,0"))
                              (rule "add_zero_left" (formula "18") (term "0"))
                              (rule "expand_addJint" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "16") (term "0,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,0,0,0"))
                              (rule "replace_int_MIN" (formula "16") (term "0,0,0,0,0"))
                              (rule "replace_int_RANGE" (formula "16") (term "1,1,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,1,0,0,0,0"))
                              (rule "mod_axiom" (formula "16") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0"))
                              (rule "div_literals" (formula "16") (term "0,1,1,0,0,0,0"))
                              (rule "times_zero_2" (formula "16") (term "1,1,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0"))
                              (rule "expand_divJint" (formula "2") (term "1,0,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "div_literals" (formula "2") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,2,0,1,0,0,0,0"))
                              (rule "qeq_literals" (formula "2") (term "0,0,1,0,0,0,0"))
                              (rule "ifthenelse_true" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "25") (term "1"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1"))
                              (rule "add_literals" (formula "25") (term "0,1,1"))
                              (rule "mod_axiom" (formula "25") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                              (rule "div_literals" (formula "25") (term "0,1,1,1"))
                              (rule "times_zero_2" (formula "25") (term "1,1,1"))
                              (rule "add_zero_right" (formula "25") (term "1,1"))
                              (rule "add_literals" (formula "25") (term "1"))
                              (rule "expand_moduloInteger" (formula "20") (term "0"))
                              (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "20") (term "0,0"))
                              (rule "replace_int_RANGE" (formula "20") (term "1,1,0"))
                              (rule "add_literals" (formula "20") (term "0,1,0"))
                              (rule "mod_axiom" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                              (rule "div_literals" (formula "20") (term "0,1,1,0"))
                              (rule "times_zero_2" (formula "20") (term "1,1,0"))
                              (rule "add_zero_right" (formula "20") (term "1,0"))
                              (rule "add_literals" (formula "20") (term "0"))
                              (rule "qeq_literals" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "expand_moduloInteger" (formula "18") (term "1,1"))
                              (rule "replace_int_MIN" (formula "18") (term "0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,1"))
                              (rule "replace_int_RANGE" (formula "18") (term "1,1,1,1"))
                              (rule "add_literals" (formula "18") (term "0,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1"))
                              (rule "add_literals" (formula "18") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "mod_axiom" (formula "18") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                              (rule "div_literals" (formula "18") (term "0,1,1,0"))
                              (rule "times_zero_2" (formula "18") (term "1,1,0"))
                              (rule "add_zero_right" (formula "18") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "18") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_or_2" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "expand_moduloInteger" (formula "25") (term "1,0,0,0,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,0,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,1,0,0,0,1"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,1,0,0,0,1"))
                              (rule "add_literals" (formula "25") (term "0,1,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                              (rule "mod_axiom" (formula "25") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1"))
                              (rule "div_literals" (formula "25") (term "0,1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "25") (term "1,1,0,0,0,1"))
                              (rule "add_zero_right" (formula "25") (term "1,0,0,0,1"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "25"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "26"))
                              (rule "times_zero_1" (formula "18") (term "0,0"))
                              (rule "add_zero_left" (formula "18") (term "0"))
                              (rule "expand_moduloInteger" (formula "2") (term "0"))
                              (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "2") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "mod_axiom" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "17") (term "1,0,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,0,0,0,0"))
                              (rule "replace_int_RANGE" (formula "17") (term "1,1,1,0,0,0,0"))
                              (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                              (rule "mod_axiom" (formula "17") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0"))
                              (rule "div_literals" (formula "17") (term "0,1,1,0,0,0,0"))
                              (rule "times_zero_2" (formula "17") (term "1,1,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "16") (term "0"))
                              (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "16") (term "0,0"))
                              (rule "mod_axiom" (formula "16") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=addJint(Z(1(3(4(4(5(5(3(3(#))))))))), Z(1(#)))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(addJint(Z(1(3(4(4(5(5(3(3(#))))))))),
                        Z(1(#))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                              (rule "neg_literal" (formula "16") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "16") (term "0,0"))
                              (rule "concrete_or_2" (formula "16") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "commute_and" (formula "27") (term "1,0"))
                              (rule "expand_moduloInteger" (formula "19") (term "1,0,0"))
                              (rule "replace_int_MIN" (formula "19") (term "0,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "19") (term "1,1,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "mod_axiom" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "div_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "times_zero_2" (formula "19") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "div_literals" (formula "19") (term "0"))
                              (rule "leq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "expand_moduloInteger" (formula "25") (term "1"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1"))
                              (rule "mod_axiom" (formula "25") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                              (rule "add_literals" (formula "25") (term "0,0,1"))
                              (rule "add_zero_left" (formula "25") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "26"))
                              (rule "mul_literals" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=moduloInt(Z(2(3(4(4(5(5(3(3(#))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(Z(2(3(4(4(5(5(3(3(#)))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "19") (term "0,0"))
                              (rule "concrete_or_2" (formula "19") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                              (rule "concrete_or_2" (formula "19"))
                              (rule "arrayLengthIsAnInt" (formula "23") (term "1"))
                              (rule "expand_inInt" (formula "23"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0"))
                              (rule "andLeft" (formula "23"))
                              (rule "inEqSimp_commuteLeq" (formula "24"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "20"))
                              (rule "leq_literals" (formula "24") (term "0"))
                              (rule "concrete_or_1" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "23"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                              (rule "andLeft" (formula "35"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                              (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                              (rule "eqClose" (formula "36") (term "1,0"))
                              (rule "concrete_impl_4" (formula "36") (term "0"))
                              (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                              (rule "eqClose" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "all_unused" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "arrayLengthNotNegative" (formula "36") (term "1"))
                              (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                              (rule "cut_direct" (formula "26") (term "0"))
                              (branch "CUT: self.wordsInUse = self.words.length TRUE"
                                 (rule "concrete_or_1" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,1,0,2,0,0,1") (ifseqformula "26"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,2,0,0,1"))
                                 (rule "applyEq" (formula "27") (term "1,1,0,0,0,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "25"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0"))
                                 (rule "qeq_literals" (formula "26") (term "0"))
                                 (rule "concrete_impl_2" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                 (rule "inEqSimp_homoInEq0" (formula "24"))
                                 (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,0"))
                                 (rule "times_zero_1" (formula "24") (term "0"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "16") (term "1,0,2,0,0,1") (ifseqformula "24"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,2,0,0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0"))
                                 (rule "add_literals" (formula "7") (term "0"))
                                 (rule "leq_literals" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                              (branch "CUT: self.wordsInUse = self.words.length FALSE"
                                 (rule "concrete_or_2" (formula "26"))
                                 (rule "inEqSimp_strengthen0" (formula "25") (ifseqformula "40"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "25"))
                                 (rule "concrete_impl_1" (formula "27"))
                                 (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0"))
                                 (rule "qeq_literals" (formula "40") (term "0"))
                                 (rule "concrete_and_2" (formula "40"))
                                 (rule "false_right" (formula "40"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                 (rule "times_zero_1" (formula "23") (term "0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "mul_literals" (formula "23") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                 (rule "concrete_or_1" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "29"))
                                 (rule "mul_literals" (formula "22") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "inEqSimp_subsumption2" (formula "20") (ifseqformula "22"))
                                 (rule "greater_literals" (formula "20") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "20") (term "0,0"))
                                 (rule "greater_literals" (formula "20") (term "0,0"))
                                 (rule "concrete_and_1" (formula "20") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                 (rule "concrete_or_1" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    moduloInt(Z(2(3(4(4(5(5(3(3(#)))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(Z(2(3(4(4(5(5(3(3(#)))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                 (rule "concrete_or_2" (formula "21") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0"))
                                 (rule "qeq_literals" (formula "21") (term "0"))
                                 (rule "concrete_or_2" (formula "21"))
                                 (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                                 (rule "expand_inInt" (formula "37"))
                                 (rule "replace_int_MIN" (formula "37") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "37") (term "1,0"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "inEqSimp_commuteLeq" (formula "38"))
                                 (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                 (rule "leq_literals" (formula "38") (term "0"))
                                 (rule "concrete_or_1" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "37"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "37"))
                                 (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                 (rule "cut_direct" (formula "16") (term "0"))
                                 (branch "CUT: self.wordsInUse = 0 TRUE"
                                    (rule "concrete_or_1" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq0" (formula "24"))
                                    (rule "times_zero_2" (formula "24") (term "1,0"))
                                    (rule "add_zero_right" (formula "24") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "7"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "times_zero_2" (formula "8") (term "1,0"))
                                    (rule "add_zero_right" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "15"))
                                    (rule "add_literals" (formula "25") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "expand_moduloInteger" (formula "3") (term "0"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "16") (term "0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                    (rule "mod_axiom" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "inEqSimp_subsumption2" (formula "16") (ifseqformula "18"))
                                    (rule "greater_literals" (formula "16") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "16") (term "0,0"))
                                    (rule "greater_literals" (formula "16") (term "0,0"))
                                    (rule "concrete_and_1" (formula "16") (term "0"))
                                    (rule "polySimp_mulAssoc" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                    (rule "concrete_or_1" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,1"))
                                    (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,0,1"))
                                    (rule "equal_literals" (formula "2") (term "0,0,1,0,1"))
                                    (rule "ifthenelse_false" (formula "2") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ! self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null & ! (self.words@anon_heap_ensureCapacity<<anonHeapFunction>>).<created> = TRUE TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "expand_addJint" (formula "14") (term "1"))
                                       (rule "add_literals" (formula "14") (term "0,1"))
                                       (rule "expand_addJint" (formula "14") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_subsumption2" (formula "14") (ifseqformula "16"))
                                       (rule "eq_and" (formula "14") (term "0,0"))
                                       (rule "greater_literals" (formula "14") (term "0,0"))
                                       (rule "concrete_and_1" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "expand_moduloInteger" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "20") (term "1,1,0,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "20") (term "0,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "20") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,1,1"))
                                       (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,1"))
                                       (rule "div_literals" (formula "20") (term "0,1,0,1,0,0,1,1"))
                                       (rule "times_zero_2" (formula "20") (term "1,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0,1,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,1"))
                                       (rule "div_literals" (formula "20") (term "0,1,1"))
                                       (rule "times_zero_2" (formula "20") (term "1,1"))
                                       (rule "add_zero_right" (formula "20") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=moduloInt(Z(2(3(4(4(5(5(3(3(#))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "commute_or" (formula "33") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "div_axiom" (formula "28") (term "0,1,1") (inst "quotient=quotient_0"))
                                       (rule "equal_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_2" (formula "28"))
                                       (rule "mul_literals" (formula "28") (term "1,1,1,1"))
                                       (rule "qeq_literals" (formula "28") (term "0,1"))
                                       (rule "ifthenelse_true_for" (formula "28") (term "1"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "30") (term "1"))
                                       (rule "add_literals" (formula "30") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "28"))
                                       (rule "polySimp_addComm1" (formula "31") (term "1"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1"))
                                       (rule "mul_literals" (formula "29") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "28"))
                                       (rule "times_zero_1" (formula "11") (term "0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                       (rule "concrete_or_2" (formula "11") (term "0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "16") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "34"))
                                       (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "16"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEqRigid" (formula "30") (term "0,1,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "30") (term "1,1"))
                                       (rule "add_literals" (formula "30") (term "1"))
                                       (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "17") (term "1,1"))
                                       (rule "add_literals" (formula "17") (term "1"))
                                       (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEq" (formula "27") (term "1") (ifseqformula "11"))
                                       (rule "applyEqRigid" (formula "29") (term "0,1,0,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "29") (term "1,0,1"))
                                       (rule "add_literals" (formula "29") (term "0,1"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "16") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,0"))
                                       (rule "times_zero_2" (formula "16") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "times_zero_2" (formula "16") (term "1,0"))
                                       (rule "add_zero_right" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,0"))
                                       (rule "div_literals" (formula "1") (term "0,0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "cnf_rightDist" (formula "22") (term "0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,0,1,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "expand_moduloInteger" (formula "21") (term "0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,1"))
                                       (rule "replace_int_MIN" (formula "21") (term "0,0,1"))
                                       (rule "replace_int_RANGE" (formula "21") (term "1,1,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "mod_axiom" (formula "21") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1"))
                                       (rule "div_literals" (formula "21") (term "0,1,0,1,1"))
                                       (rule "times_zero_2" (formula "21") (term "1,0,1,1"))
                                       (rule "add_zero_right" (formula "21") (term "0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "1,1"))
                                       (rule "add_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (rule "concrete_or_1" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "expand_moduloInteger" (formula "16") (term "0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                       (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "16") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "16") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0"))
                                       (rule "add_literals" (formula "16") (term "0"))
                                       (rule "leq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "expand_moduloInteger" (formula "3") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "3") (term "0,0,0"))
                                       (rule "replace_int_RANGE" (formula "3") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "3") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "3") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,0"))
                                       (rule "times_zero_2" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0,0") (ifseqformula "19"))
                                       (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "27"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,0") (ifseqformula "5"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "distr_forallAnd" (formula "18"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "commute_or" (formula "19") (term "0"))
                                       (rule "allLeft" (formula "15") (inst "t=i_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "15") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "15") (term "0,0"))
                                       (rule "concrete_and_2" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "allLeft" (formula "31") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet1011110000_3" (formula "31") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0011011110000_4" (formula "31") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                       (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "15"))
                                       (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "38"))
                                       (rule "concrete_or_4" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "31") (term "0,0"))
                                       (rule "concrete_and_2" (formula "31") (term "0"))
                                       (rule "concrete_or_2" (formula "31"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "31"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " ! self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null & ! (self.words@anon_heap_ensureCapacity<<anonHeapFunction>>).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "expand_addJint" (formula "14") (term "1"))
                                       (rule "add_literals" (formula "14") (term "0,1"))
                                       (rule "expand_addJint" (formula "14") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "expand_moduloInteger" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "20") (term "1,1,0,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "20") (term "0,0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "20") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,1,1"))
                                       (rule "mod_axiom" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,1"))
                                       (rule "div_literals" (formula "20") (term "0,1,0,1,0,0,1,1"))
                                       (rule "times_zero_2" (formula "20") (term "1,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0,1,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,1"))
                                       (rule "div_literals" (formula "20") (term "0,1,1"))
                                       (rule "times_zero_2" (formula "20") (term "1,1"))
                                       (rule "add_zero_right" (formula "20") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=moduloInt(Z(2(3(4(4(5(5(3(3(#))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "commute_or" (formula "33") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,1"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "div_axiom" (formula "28") (term "0,1,1") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "28") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "28") (term "1,1"))
                                       (rule "equal_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_2" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "30") (term "1"))
                                       (rule "add_literals" (formula "30") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "28"))
                                       (rule "polySimp_addComm1" (formula "31") (term "1"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1"))
                                       (rule "mul_literals" (formula "29") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "32"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "28"))
                                       (rule "times_zero_1" (formula "11") (term "0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                       (rule "concrete_or_2" (formula "11") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "16"))
                                       (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "31") (term "1,1"))
                                       (rule "add_literals" (formula "31") (term "1"))
                                       (rule "applyEqRigid" (formula "18") (term "0,1,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "18") (term "1,1"))
                                       (rule "add_literals" (formula "18") (term "1"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEqRigid" (formula "29") (term "0,1,0,1") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "29") (term "1,0,1"))
                                       (rule "add_literals" (formula "29") (term "0,1"))
                                       (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "11"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,0,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "16") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,0"))
                                       (rule "times_zero_2" (formula "16") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "times_zero_2" (formula "16") (term "1,0"))
                                       (rule "add_zero_right" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,1,0,0,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "cnf_rightDist" (formula "22") (term "0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "expand_moduloInteger" (formula "21") (term "0,1"))
                                       (rule "replace_int_MIN" (formula "21") (term "0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "21") (term "1,1,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "mod_axiom" (formula "21") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1"))
                                       (rule "div_literals" (formula "21") (term "0,1,0,1,1"))
                                       (rule "times_zero_2" (formula "21") (term "1,0,1,1"))
                                       (rule "add_zero_right" (formula "21") (term "0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "1,1"))
                                       (rule "add_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (rule "concrete_or_1" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "expand_moduloInteger" (formula "3") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "3") (term "0,0,0"))
                                       (rule "replace_int_RANGE" (formula "3") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                       (rule "div_literals" (formula "3") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "times_zero_2" (formula "3") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "expand_moduloInteger" (formula "15") (term "0"))
                                       (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "15") (term "0,0"))
                                       (rule "replace_int_RANGE" (formula "15") (term "1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "mod_axiom" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "15") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "15") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0"))
                                       (rule "add_literals" (formula "15") (term "0"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,0"))
                                       (rule "times_zero_2" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,0") (ifseqformula "5"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0,0") (ifseqformula "20"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "distr_forallAnd" (formula "18"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "commute_or" (formula "19") (term "0"))
                                       (rule "allLeft" (formula "15") (inst "t=i_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "15") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "15") (term "0,0"))
                                       (rule "concrete_and_2" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "allLeft" (formula "31") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet1011110000_3" (formula "31") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1011011110000_4" (formula "31") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                       (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "15"))
                                       (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "37"))
                                       (rule "concrete_or_4" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "31") (term "0,0"))
                                       (rule "concrete_and_2" (formula "31") (term "0"))
                                       (rule "concrete_or_2" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0"))
                                       (rule "add_zero_right" (formula "31") (term "0"))
                                       (rule "leq_literals" (formula "31"))
                                       (rule "closeFalse" (formula "31"))
                                    )
                                 )
                                 (branch "CUT: self.wordsInUse = 0 FALSE"
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "inEqSimp_strengthen1" (formula "22") (ifseqformula "42"))
                                    (rule "add_zero_right" (formula "22") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "22"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0"))
                                    (rule "leq_literals" (formula "42") (term "0"))
                                    (rule "concrete_and_2" (formula "42"))
                                    (rule "false_right" (formula "42"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                    (rule "concrete_or_1" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "inEqSimp_subsumption2" (formula "18") (ifseqformula "22"))
                                    (rule "eq_and" (formula "18") (term "0,0"))
                                    (rule "greater_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_1" (formula "18") (term "0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (rule "concrete_or_1" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_1" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption2" (formula "18") (ifseqformula "21"))
                                    (rule "greater_literals" (formula "18") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "18") (term "0,0"))
                                    (rule "greater_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_1" (formula "18") (term "0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (rule "concrete_or_1" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    moduloInt(Z(2(3(4(4(5(5(3(3(#)))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(Z(2(3(4(4(5(5(3(3(#)))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                    (rule "concrete_or_2" (formula "20") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                    (rule "neg_literal" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_2" (formula "20"))
                                    (rule "expand_moduloInteger" (formula "3") (term "0"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,0"))
                                    (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1"))
                                    (rule "expand_moduloInteger" (formula "16") (term "0"))
                                    (rule "replace_int_MIN" (formula "16") (term "0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                                    (rule "mod_axiom" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "inEqSimp_subsumption2" (formula "16") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "16") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "16") (term "0,0"))
                                    (rule "greater_literals" (formula "16") (term "0,0"))
                                    (rule "concrete_and_1" (formula "16") (term "0"))
                                    (rule "polySimp_mulAssoc" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                    (rule "concrete_or_1" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                                    (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,1"))
                                    (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                    (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "2") (term "0,0,1,0,1"))
                                    (rule "ifthenelse_false" (formula "2") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ! self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null & ! (self.words@anon_heap_ensureCapacity<<anonHeapFunction>>).<created> = TRUE TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "expand_addJint" (formula "14") (term "1"))
                                       (rule "add_literals" (formula "14") (term "0,1"))
                                       (rule "expand_addJint" (formula "14") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_subsumption2" (formula "14") (ifseqformula "17"))
                                       (rule "eq_and" (formula "14") (term "0,0"))
                                       (rule "greater_literals" (formula "14") (term "0,0"))
                                       (rule "concrete_and_1" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "expand_moduloInteger" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "24") (term "1,1,0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "24") (term "0,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,1"))
                                       (rule "mod_axiom" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,1"))
                                       (rule "div_literals" (formula "24") (term "0,1,0,1,0,0,1,1"))
                                       (rule "times_zero_2" (formula "24") (term "1,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,1"))
                                       (rule "div_literals" (formula "24") (term "0,1,1"))
                                       (rule "times_zero_2" (formula "24") (term "1,1"))
                                       (rule "add_zero_right" (formula "24") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                                       (rule "mul_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=moduloInt(Z(2(3(4(4(5(5(3(3(#))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,1"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "div_axiom" (formula "32") (term "0,1,1") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "32") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "32") (term "1,1"))
                                       (rule "equal_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_2" (formula "32"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                                       (rule "add_literals" (formula "34") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "34") (term "1"))
                                       (rule "add_literals" (formula "34") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "32"))
                                       (rule "polySimp_addComm1" (formula "8") (term "1"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "32"))
                                       (rule "polySimp_addComm1" (formula "35") (term "1"))
                                       (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1"))
                                       (rule "mul_literals" (formula "32") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                       (rule "mul_literals" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_1" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                       (rule "mul_literals" (formula "20") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "32"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "leq_literals" (formula "13") (term "0,0"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "17") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "38"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0"))
                                       (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "19") (term "1,1"))
                                       (rule "add_literals" (formula "19") (term "1"))
                                       (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "33") (term "1,1"))
                                       (rule "add_literals" (formula "33") (term "1"))
                                       (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "13"))
                                       (rule "applyEqRigid" (formula "34") (term "0,1,0,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "34") (term "1,0,1"))
                                       (rule "add_literals" (formula "34") (term "0,1"))
                                       (rule "applyEq" (formula "8") (term "0,1,0,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "8") (term "1,0,1"))
                                       (rule "add_literals" (formula "8") (term "0,1"))
                                       (rule "add_zero_left" (formula "8") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_1" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "35"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_1" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "expand_moduloInteger" (formula "17") (term "1,1"))
                                       (rule "replace_int_RANGE" (formula "17") (term "1,1,1,1"))
                                       (rule "replace_int_MIN" (formula "17") (term "0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,1"))
                                       (rule "add_literals" (formula "17") (term "0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                       (rule "add_literals" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "mod_axiom" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                       (rule "div_literals" (formula "17") (term "0,1,1,0"))
                                       (rule "times_zero_2" (formula "17") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        mul(moduloInt(Z(2(3(4(4(5(5(3(3(#)))))))))),
            Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "neg_literal" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "cnf_rightDist" (formula "27") (term "0"))
                                       (rule "commute_or" (formula "24") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,0,1"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,0,1"))
                                       (rule "equal_literals" (formula "1") (term "0,0,1,0,1"))
                                       (rule "ifthenelse_false" (formula "1") (term "0,1,0,1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,0,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "1"))
                                       (rule "add_literals" (formula "1") (term "1,1,1"))
                                       (rule "times_zero_1" (formula "1") (term "1,1"))
                                       (rule "add_zero_right" (formula "1") (term "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,1"))
                                       (rule "expand_moduloInteger" (formula "26") (term "0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,0,1"))
                                       (rule "replace_int_MIN" (formula "26") (term "0,0,1"))
                                       (rule "replace_int_RANGE" (formula "26") (term "1,1,0,1"))
                                       (rule "add_literals" (formula "26") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "mod_axiom" (formula "26") (term "0,1,1"))
                                       (rule "div_literals" (formula "26") (term "0,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1"))
                                       (rule "mul_literals" (formula "26") (term "1,0,1,1"))
                                       (rule "add_zero_right" (formula "26") (term "0,1,1"))
                                       (rule "mul_literals" (formula "26") (term "1,1"))
                                       (rule "add_literals" (formula "26") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "expand_moduloInteger" (formula "18") (term "0"))
                                       (rule "replace_int_RANGE" (formula "18") (term "1,1,0"))
                                       (rule "replace_int_MIN" (formula "18") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "mod_axiom" (formula "18") (term "0,1,0"))
                                       (rule "div_literals" (formula "18") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0"))
                                       (rule "add_literals" (formula "18") (term "0"))
                                       (rule "leq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "expand_moduloInteger" (formula "3") (term "0,0"))
                                       (rule "replace_int_MIN" (formula "3") (term "0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "3") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                       (rule "div_literals" (formula "3") (term "0,0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "3") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,0") (ifseqformula "7"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "39"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0,0") (ifseqformula "25"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "38"))
                                       (rule "concrete_or_2" (formula "33"))
                                       (rule "div_axiom" (formula "39") (term "0,1,0,2,0") (inst "quotient=quotient_1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (rule "ifthenelse_true_for" (formula "1") (term "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "42") (term "0,1,0,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,2,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "leq_literals" (formula "20") (term "0,0"))
                                       (rule "concrete_or_2" (formula "20") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "28"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (rule "concrete_or_2" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (rule "concrete_or_2" (formula "5"))
                                       (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "24"))
                                       (rule "times_zero_2" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "24"))
                                       (rule "times_zero_2" (formula "7") (term "1,1"))
                                       (rule "add_zero_right" (formula "7") (term "1"))
                                       (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "24"))
                                       (rule "mul_literals" (formula "4") (term "1,1"))
                                       (rule "add_zero_right" (formula "4") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "24"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "5") (term "1,1"))
                                       (rule "add_zero_right" (formula "5") (term "1"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "23"))
                                       (rule "applyEqRigid" (formula "46") (term "0,1,0,0,2,0") (ifseqformula "23"))
                                       (rule "times_zero_2" (formula "46") (term "1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0,2,0"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "27"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                       (rule "concrete_or_1" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,1,0,1,0,0"))
                                       (rule "times_zero_2" (formula "16") (term "1,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "div_literals" (formula "16") (term "0"))
                                       (rule "leq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "distr_forallAnd" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "commute_or" (formula "25") (term "0"))
                                       (rule "allLeft" (formula "36") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet1011110000_3" (formula "36") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0111011110000_4" (formula "36") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "36") (term "0,0"))
                                       (rule "concrete_or_2" (formula "36") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,0"))
                                       (rule "concrete_and_2" (formula "36") (term "0"))
                                       (rule "concrete_or_2" (formula "36"))
                                       (rule "applyEq" (formula "44") (term "0") (ifseqformula "36"))
                                       (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))),
    int::select(heap,
                self,
                java.util.BitSet::$wordsInUse))"))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                       (rule "times_zero_2" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "37") (term "1,0"))
                                       (rule "concrete_or_4" (formula "37") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "37") (term "0,0"))
                                       (rule "concrete_and_2" (formula "37") (term "0"))
                                       (rule "concrete_or_2" (formula "37"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "27"))
                                       (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                       (rule "equalUnique" (formula "37") (term "0,1,0,0,0"))
                                       (rule "concrete_not_2" (formula "37") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "37") (term "0,0,0"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_right" (formula "37") (term "0,1,1,0,0") (ifseqformula "40"))
                                       (rule "concrete_not_2" (formula "37") (term "1,1,0,0"))
                                       (rule "concrete_and_3" (formula "37") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "37") (term "0,1,0,0") (ifseqformula "41"))
                                       (rule "concrete_not_2" (formula "37") (term "1,0,0"))
                                       (rule "concrete_or_3" (formula "37") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "37") (term "0"))
                                       (rule "allLeft" (formula "38") (inst "t=int::select(heap, self, java.util.BitSet::$wordsInUse)"))
                                       (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0,0"))
                                       (rule "concrete_or_2" (formula "38") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0"))
                                       (rule "concrete_or_2" (formula "38"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "27"))
                                       (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                       (rule "equalUnique" (formula "38") (term "0,1,0,0,0"))
                                       (rule "concrete_not_2" (formula "38") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "38") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "38") (term "0,0,1,0,0") (ifseqformula "43"))
                                       (rule "concrete_not_2" (formula "38") (term "0,1,0,0"))
                                       (rule "concrete_and_1" (formula "38") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "38") (term "0,1,0,0") (ifseqformula "42"))
                                       (rule "concrete_not_2" (formula "38") (term "1,0,0"))
                                       (rule "concrete_or_3" (formula "38") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "38") (term "0"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "allLeft" (formula "20") (inst "t=i_0"))
                                       (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "47"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "1"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (rule "concrete_and_2" (formula "20") (term "1"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "3"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_literals" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch " ! self.words@anon_heap_ensureCapacity<<anonHeapFunction>> = null & ! (self.words@anon_heap_ensureCapacity<<anonHeapFunction>>).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "expand_addJint" (formula "14") (term "1"))
                                       (rule "add_literals" (formula "14") (term "0,1"))
                                       (rule "expand_addJint" (formula "14") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "expand_moduloInteger" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "24") (term "1,1,0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "24") (term "0,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,1"))
                                       (rule "mod_axiom" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "div_literals" (formula "24") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "times_zero_2" (formula "24") (term "0,1,0,1,0,0,1,1"))
                                       (rule "times_zero_2" (formula "24") (term "1,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,1"))
                                       (rule "div_literals" (formula "24") (term "0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "1,1"))
                                       (rule "add_zero_right" (formula "24") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=moduloInt(Z(2(3(4(4(5(5(3(3(#))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_or_2" (formula "18") (term "0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,1"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "div_axiom" (formula "32") (term "0,1,1") (inst "quotient=quotient_0"))
                                       (rule "qeq_literals" (formula "32") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "32") (term "1,1"))
                                       (rule "equal_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_2" (formula "32"))
                                       (rule "mul_literals" (formula "32") (term "1,1,1"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                                       (rule "add_literals" (formula "34") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "34") (term "1"))
                                       (rule "add_literals" (formula "34") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "32"))
                                       (rule "polySimp_addComm1" (formula "35") (term "1"))
                                       (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "31"))
                                       (rule "polySimp_addComm1" (formula "8") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1"))
                                       (rule "mul_literals" (formula "32") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_1" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "37"))
                                       (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "33"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "13") (term "0,0"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "19") (term "1,1"))
                                       (rule "add_literals" (formula "19") (term "1"))
                                       (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEqRigid" (formula "33") (term "0,1,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "33") (term "1,1"))
                                       (rule "add_literals" (formula "33") (term "1"))
                                       (rule "applyEq" (formula "34") (term "0,1,0,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "34") (term "1,0,1"))
                                       (rule "add_literals" (formula "34") (term "0,1"))
                                       (rule "applyEqRigid" (formula "8") (term "0,1,0,1") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "8") (term "1,0,1"))
                                       (rule "add_literals" (formula "8") (term "0,1"))
                                       (rule "add_zero_left" (formula "8") (term "1"))
                                       (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "13"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_1" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "35"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_1" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "expand_moduloInteger" (formula "17") (term "1,1"))
                                       (rule "replace_int_MIN" (formula "17") (term "0,1,1"))
                                       (rule "replace_int_RANGE" (formula "17") (term "1,1,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,1,1"))
                                       (rule "add_literals" (formula "17") (term "0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                       (rule "add_literals" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "mod_axiom" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                       (rule "div_literals" (formula "17") (term "0,1,1,0"))
                                       (rule "times_zero_2" (formula "17") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        mul(moduloInt(Z(2(3(4(4(5(5(3(3(#)))))))))),
            Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "17") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "cnf_rightDist" (formula "27") (term "0"))
                                       (rule "commute_or" (formula "24") (term "0,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,0"))
                                       (rule "div_literals" (formula "1") (term "0,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "div_literals" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "expand_moduloInteger" (formula "26") (term "0,1"))
                                       (rule "replace_int_RANGE" (formula "26") (term "1,1,0,1"))
                                       (rule "replace_int_MIN" (formula "26") (term "0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,0,1"))
                                       (rule "add_literals" (formula "26") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "mod_axiom" (formula "26") (term "0,1,1"))
                                       (rule "div_literals" (formula "26") (term "0,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1"))
                                       (rule "times_zero_2" (formula "26") (term "1,0,1,1"))
                                       (rule "add_zero_right" (formula "26") (term "0,1,1"))
                                       (rule "mul_literals" (formula "26") (term "1,1"))
                                       (rule "add_literals" (formula "26") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "expand_moduloInteger" (formula "3") (term "0,0"))
                                       (rule "replace_int_RANGE" (formula "3") (term "1,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "3") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "expand_moduloInteger" (formula "17") (term "0"))
                                       (rule "replace_int_MIN" (formula "17") (term "0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "17") (term "1,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "mod_axiom" (formula "17") (term "0,1,0"))
                                       (rule "div_literals" (formula "17") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0"))
                                       (rule "add_literals" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                       (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "div_literals" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,0") (ifseqformula "7"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "38"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0,0") (ifseqformula "25"))
                                       (rule "div_axiom" (formula "38") (term "0,1,0,2,0") (inst "quotient=quotient_1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "41") (term "0,1,0,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "21") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0"))
                                       (rule "concrete_or_2" (formula "21") (term "0"))
                                       (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "28"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (rule "concrete_or_2" (formula "5") (term "0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (rule "concrete_or_2" (formula "5"))
                                       (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "5"))
                                       (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "24"))
                                       (rule "times_zero_2" (formula "7") (term "1,1"))
                                       (rule "add_zero_right" (formula "7") (term "1"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "24"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "4") (term "1,1"))
                                       (rule "add_zero_right" (formula "4") (term "1"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "5") (term "1,1"))
                                       (rule "add_zero_right" (formula "5") (term "1"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "45") (term "0,1,0,0,2,0") (ifseqformula "23"))
                                       (rule "times_zero_2" (formula "45") (term "1,0,0,2,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,2,0"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "expand_moduloInteger" (formula "16") (term "0,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "16") (term "0,0,1,0,0"))
                                       (rule "replace_int_RANGE" (formula "16") (term "1,1,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "16") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
                                       (rule "div_literals" (formula "16") (term "0,1,0,1,0,0"))
                                       (rule "times_zero_2" (formula "16") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "div_literals" (formula "16") (term "0"))
                                       (rule "leq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "expand_moduloInteger" (formula "2") (term "1,0,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0,0,1,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,1,0,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0,0,1,1"))
                                       (rule "add_literals" (formula "2") (term "0,1,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "2") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "commute_or" (formula "25") (term "0"))
                                       (rule "allLeft" (formula "36") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet1011110000_3" (formula "36") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1111011110000_4" (formula "36") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "36") (term "0,0"))
                                       (rule "concrete_or_2" (formula "36") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,0"))
                                       (rule "concrete_and_2" (formula "36") (term "0"))
                                       (rule "concrete_or_2" (formula "36"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                                       (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))),
    int::select(heap,
                self,
                java.util.BitSet::$wordsInUse))"))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "37") (term "0,0"))
                                       (rule "times_zero_2" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "37") (term "0,0"))
                                       (rule "concrete_or_2" (formula "37") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (rule "concrete_and_2" (formula "37") (term "0"))
                                       (rule "concrete_or_2" (formula "37"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "27"))
                                       (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                       (rule "equalUnique" (formula "37") (term "0,1,0,0,0"))
                                       (rule "concrete_not_2" (formula "37") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "37") (term "0,0,0"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "37") (term "0,0"))
                                       (rule "elementOfUnion" (formula "37") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                                       (rule "equalUnique" (formula "37") (term "1,0,0,0"))
                                       (rule "concrete_and_4" (formula "37") (term "0,0,0"))
                                       (rule "concrete_or_2" (formula "37") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "37") (term "0,0"))
                                       (rule "equalUnique" (formula "37") (term "1,0,0"))
                                       (rule "concrete_and_4" (formula "37") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "37") (term "0"))
                                       (rule "allLeft" (formula "38") (inst "t=int::select(heap, self, java.util.BitSet::$wordsInUse)"))
                                       (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0,0"))
                                       (rule "concrete_or_2" (formula "38") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0"))
                                       (rule "concrete_or_2" (formula "38"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "27"))
                                       (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                       (rule "equalUnique" (formula "38") (term "0,1,0,0,0"))
                                       (rule "concrete_not_2" (formula "38") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "38") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "42"))
                                       (rule "concrete_or_4" (formula "38") (term "0,0"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "39"))
                                       (rule "ifEqualsInteger" (formula "38"))
                                       (rule "elementOfUnion" (formula "38") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "38") (term "0,0,0"))
                                       (rule "equalUnique" (formula "38") (term "1,0,0,0"))
                                       (rule "concrete_and_4" (formula "38") (term "0,0,0"))
                                       (rule "concrete_or_2" (formula "38") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "38") (term "0,0"))
                                       (rule "equalUnique" (formula "38") (term "1,0,0"))
                                       (rule "concrete_and_4" (formula "38") (term "0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0"))
                                       (rule "concrete_or_2" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "elementOfUnion" (formula "42"))
                                       (rule "orRight" (formula "42"))
                                       (rule "elementOfSingleton" (formula "42"))
                                       (rule "equalUnique" (formula "42") (term "1"))
                                       (rule "concrete_and_4" (formula "42"))
                                       (rule "false_right" (formula "42"))
                                       (rule "elementOfSingleton" (formula "42"))
                                       (rule "equalUnique" (formula "42") (term "1"))
                                       (rule "concrete_and_4" (formula "42"))
                                       (rule "false_right" (formula "42"))
                                       (rule "allLeft" (formula "20") (inst "t=i_0"))
                                       (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "47"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "1"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (rule "concrete_and_2" (formula "20") (term "1"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "20"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "20"))
                           (branch "Case 1"
                              (rule "andRight" (formula "20"))
                              (branch "Case 1"
                                 (rule "notRight" (formula "20"))
                                 (rule "expand_inInt" (formula "6"))
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "replace_int_MAX" (formula "6") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "6") (term "0,1"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "applyOnRigidFormula" (formula "1"))
                                 (rule "simplifyUpdate1" (formula "1") (term "1"))
                                 (rule "applyOnRigidTerm" (formula "1") (term "0"))
                                 (rule "applyOnPV" (formula "1") (term "0,0"))
                                 (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                 (rule "simplifyUpdate1" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "replaceKnownSelect_taclet00_0" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "17"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "19") (term "1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "15"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_1" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "expand_divJint" (formula "9") (term "0"))
                                 (rule "jdiv_axiom_inline" (formula "9") (term "0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,2,0,0"))
                                 (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                 (rule "ifthenelse_true" (formula "9") (term "0,0"))
                                 (rule "div_literals" (formula "9") (term "0,0"))
                                 (rule "expand_addJint" (formula "14") (term "0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                 (rule "expand_addJint" (formula "2") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,1,1"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                                 (rule "add_literals" (formula "9") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                 (rule "mod_axiom" (formula "9") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                 (rule "div_literals" (formula "9") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "add_literals" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_1" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "expand_moduloInteger" (formula "13") (term "0"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                 (rule "mod_axiom" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,1"))
                                 (rule "ifthenelse_false" (formula "13") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1"))
                                 (rule "expand_moduloInteger" (formula "2") (term "1,1"))
                                 (rule "replace_int_MIN" (formula "2") (term "0,1,1"))
                                 (rule "replace_int_RANGE" (formula "2") (term "1,1,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                 (rule "add_literals" (formula "2") (term "0,1"))
                                 (rule "mod_axiom" (formula "2") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "2") (term "0,1"))
                                 (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,1"))
                                 (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                 (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                 (rule "nnf_imp2or" (formula "17") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1"))
                                 (rule "commute_or" (formula "16") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "14") (inst "iv=iv"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0") (ifseqformula "16"))
                                 (rule "eqClose" (formula "15") (term "1,0"))
                                 (rule "concrete_impl_4" (formula "15") (term "0"))
                                 (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                                 (rule "eqClose" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "all_unused" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "arrayLengthNotNegative" (formula "15") (term "1"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
                                 (rule "times_zero_1" (formula "16") (term "0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0"))
                                 (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                                 (rule "expand_inInt" (formula "17"))
                                 (rule "replace_int_MAX" (formula "17") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (rule "concrete_or_1" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "arrayLengthIsAnInt" (formula "18") (term "1"))
                                 (rule "expand_inInt" (formula "18"))
                                 (rule "replace_int_MAX" (formula "18") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "18") (term "0,1"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (rule "concrete_or_1" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "18"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "mul_literals" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "div_axiom" (formula "14") (term "0,1,1") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,1,1"))
                                 (rule "equal_literals" (formula "14") (term "0"))
                                 (rule "concrete_or_2" (formula "14"))
                                 (rule "qeq_literals" (formula "14") (term "0,1"))
                                 (rule "ifthenelse_true_for" (formula "14") (term "1"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "1"))
                                 (rule "add_literals" (formula "16") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "13"))
                                 (rule "polySimp_addComm1" (formula "16") (term "1"))
                                 (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                 (rule "polySimp_addComm1" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
                                 (rule "times_zero_1" (formula "7") (term "0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                 (rule "concrete_or_2" (formula "7") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_2" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "9"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "15") (term "0,0"))
                                 (rule "concrete_or_2" (formula "15") (term "0"))
                                 (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                 (rule "concrete_or_2" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "23"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "17") (term "0,1,1") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "17") (term "1,1"))
                                 (rule "add_literals" (formula "17") (term "1"))
                                 (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "18") (term "1,1"))
                                 (rule "add_literals" (formula "18") (term "1"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,1") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "2") (term "1,0,1"))
                                 (rule "add_literals" (formula "2") (term "0,1"))
                                 (rule "add_zero_left" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,1") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "17") (term "1,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,1"))
                                 (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (rule "concrete_or_1" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (rule "concrete_or_1" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "20"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (rule "concrete_or_1" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "cut_direct" (formula "23") (term "0"))
                                 (branch "CUT: self.words.length <= -1 + null.length TRUE"
                                    (rule "concrete_impl_1" (formula "24"))
                                    (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_1" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "22"))
                                    (rule "times_zero_1" (formula "18") (term "0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (rule "concrete_or_1" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                    (rule "concrete_or_1" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,1,1,0") (ifseqformula "3"))
                                    (rule "cut_direct" (formula "21") (term "0"))
                                    (branch "CUT: self.words = null TRUE"
                                       (rule "concrete_or_1" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "21") (term "0,1,1,0,0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq0" (formula "22"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                    (branch "CUT: self.words = null FALSE"
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_BitSet" (formula "25") (inst "i=i") (inst "i_0=i_0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "1,0,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "1,0,1,0,1"))
                                       (rule "insert_constant_value" (formula "25") (term "0,0,1,1,1,0"))
                                       (rule "insert_constant_value" (formula "25") (term "1,0,1,1,1,0"))
                                       (rule "insert_constant_value" (formula "25") (term "0,0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,1,1,0,0,1"))
                                       (rule "insert_constant_value" (formula "25") (term "1,0,1,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,1,1,0,0,1"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,1,0,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,1,0,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "1,0,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,1,0,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "1,0,1,0,1,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,1,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,1,0,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "1,0,1,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,1,1,0,0,1,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "1,0,1,0,1,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,1,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "1,0,0,1,1,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,1,1,0,0,1,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "1,0,0,1,1,0,0,0,0,0,0"))
                                       (rule "expand_inLong" (formula "25") (term "1,0,1"))
                                       (rule "replace_long_MIN" (formula "25") (term "0,1,1,0,1"))
                                       (rule "replace_long_MAX" (formula "25") (term "1,0,1,0,1"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "close" (formula "34") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "CUT: self.words.length <= -1 + null.length FALSE"
                                    (rule "concrete_impl_2" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "inEqSimp_leqRight" (formula "24"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "20"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,0"))
                                    (rule "times_zero_1" (formula "20") (term "0"))
                                    (rule "qeq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,1,1,0") (ifseqformula "4"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: self.words = null TRUE"
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "20"))
                                       (rule "eqClose" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_1_in_BitSet" (formula "10"))
                                       (rule "notLeft" (formula "10"))
                                       (rule "close" (formula "22") (ifseqformula "19"))
                                    )
                                    (branch "CUT: self.words = null FALSE"
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_1_in_BitSet" (formula "11"))
                                       (rule "notLeft" (formula "11"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_BitSet" (formula "22") (inst "i=i") (inst "i_0=i_0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "1,0,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "1,0,1,0,1"))
                                       (rule "insert_constant_value" (formula "22") (term "1,0,1,1,0,0"))
                                       (rule "insert_constant_value" (formula "22") (term "0,0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,1,1,0,0,1"))
                                       (rule "insert_constant_value" (formula "22") (term "0,0,1,1,1,0"))
                                       (rule "insert_constant_value" (formula "22") (term "1,0,1,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,1,1,0,0,1"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,1,0,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "1,0,1,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,1,0,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,1,0,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "1,0,1,0,1,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,1,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "1,0,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,1,0,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,1,1,0,0,1,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "1,0,1,0,1,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,1,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,1,1,0,0,1,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,0"))
                                       (rule "expand_inLong" (formula "22") (term "1,0,1"))
                                       (rule "replace_long_MIN" (formula "22") (term "0,1,1,0,1"))
                                       (rule "replace_long_MAX" (formula "22") (term "1,0,1,0,1"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "close" (formula "31") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "expand_inInt" (formula "5"))
                                 (rule "simplifyUpdate2" (formula "20"))
                                 (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "applyOnRigidFormula" (formula "21"))
                                 (rule "simplifyUpdate1" (formula "21") (term "1"))
                                 (rule "simplifyUpdate1" (formula "21") (term "0"))
                                 (rule "applyOnRigidTerm" (formula "21") (term "1"))
                                 (rule "applyOnRigidTerm" (formula "21") (term "0"))
                                 (rule "applyOnRigidTerm" (formula "21") (term "0,1"))
                                 (rule "applyOnPV" (formula "21") (term "0,0,1"))
                                 (rule "simplifyUpdate1" (formula "21") (term "1,0,1"))
                                 (rule "simplifyUpdate1" (formula "21") (term "2,0,1"))
                                 (rule "applyOnRigidTerm" (formula "21") (term "0,0"))
                                 (rule "applyOnPV" (formula "21") (term "0,0,0"))
                                 (rule "simplifyUpdate1" (formula "21") (term "1,0,0"))
                                 (rule "simplifyUpdate1" (formula "21") (term "2,0,0"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
                                 (rule "replaceKnownSelect_taclet00_0" (formula "21") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_leqRight" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "20"))
                              (branch "Case 1"
                                 (rule "expand_inInt" (formula "5"))
                                 (rule "simplifyUpdate2" (formula "20"))
                                 (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "applyOnRigidFormula" (formula "21"))
                                 (rule "simplifyUpdate1" (formula "21") (term "1"))
                                 (rule "applyOnRigidTerm" (formula "21") (term "0"))
                                 (rule "simplifyUpdate1" (formula "21") (term "2,0"))
                                 (rule "simplifyUpdate1" (formula "21") (term "1,0"))
                                 (rule "applyOnPV" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_leqRight" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_1" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_BitSet_wordsInUse_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "1") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "expand_divJint" (formula "9") (term "0"))
                                 (rule "jdiv_axiom_inline" (formula "9") (term "0,0"))
                                 (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                 (rule "ifthenelse_true" (formula "9") (term "0,0"))
                                 (rule "div_literals" (formula "9") (term "0,0"))
                                 (rule "expand_addJint" (formula "14") (term "1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "0,1"))
                                 (rule "expand_addJint" (formula "2") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,1,1"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0,1"))
                                 (rule "expand_divJint" (formula "1") (term "0,0"))
                                 (rule "jdiv_axiom_inline" (formula "1") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "ifthenelse_true" (formula "1") (term "0,0,0"))
                                 (rule "div_literals" (formula "1") (term "0,0,0"))
                                 (rule "expand_addJint" (formula "1") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,1,1"))
                                 (rule "expand_moduloInteger" (formula "9") (term "0"))
                                 (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                 (rule "mod_axiom" (formula "9") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                 (rule "div_literals" (formula "9") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "add_literals" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_1" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "expand_moduloInteger" (formula "13") (term "1"))
                                 (rule "replace_int_RANGE" (formula "13") (term "1,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1"))
                                 (rule "replace_int_MIN" (formula "13") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1"))
                                 (rule "mod_axiom" (formula "13") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "13") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "13") (term "0,0,1,1"))
                                 (rule "ifthenelse_false" (formula "13") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1"))
                                 (rule "expand_moduloInteger" (formula "2") (term "1,1"))
                                 (rule "replace_int_MIN" (formula "2") (term "0,1,1"))
                                 (rule "replace_int_RANGE" (formula "2") (term "1,1,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                 (rule "add_literals" (formula "2") (term "0,1"))
                                 (rule "mod_axiom" (formula "2") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "2") (term "0,1"))
                                 (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                 (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,1"))
                                 (rule "add_literals" (formula "2") (term "0,0,1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                 (rule "expand_moduloInteger" (formula "1") (term "0,0"))
                                 (rule "replace_int_MIN" (formula "1") (term "0,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "mod_axiom" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "div_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "times_zero_2" (formula "1") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "expand_moduloInteger" (formula "1") (term "1,1"))
                                 (rule "replace_int_MIN" (formula "1") (term "0,1,1"))
                                 (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,1"))
                                 (rule "replace_int_RANGE" (formula "1") (term "1,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                 (rule "add_literals" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "mod_axiom" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                                 (rule "ifthenelse_false" (formula "1") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1"))
                                 (rule "expand_addJint" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "expand_moduloInteger" (formula "1") (term "0"))
                                 (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                 (rule "div_literals" (formula "1") (term "0,1,0,1,0"))
                                 (rule "times_zero_2" (formula "1") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "commute_or" (formula "16") (term "0,0"))
                                 (rule "commute_or" (formula "17") (term "0,0,1"))
                                 (rule "arrayLengthIsAnInt" (formula "15") (term "0"))
                                 (rule "expand_inInt" (formula "15"))
                                 (rule "replace_int_MAX" (formula "15") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "15") (term "0,1"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (rule "concrete_or_1" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "arrayLengthIsAnInt" (formula "19") (term "1"))
                                 (rule "expand_inInt" (formula "19"))
                                 (rule "replace_int_MIN" (formula "19") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "19") (term "1,0"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
                                 (rule "eqClose" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0") (ifseqformula "16"))
                                 (rule "eqClose" (formula "15") (term "1,0"))
                                 (rule "concrete_impl_4" (formula "15") (term "0"))
                                 (rule "all_unused" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "arrayLengthNotNegative" (formula "20") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (rule "concrete_or_1" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "div_axiom" (formula "14") (term "0,1,1") (inst "quotient=quotient_0"))
                                 (rule "equal_literals" (formula "14") (term "0"))
                                 (rule "concrete_or_2" (formula "14"))
                                 (rule "qeq_literals" (formula "14") (term "0,1"))
                                 (rule "ifthenelse_true_for" (formula "14") (term "1"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "1"))
                                 (rule "add_literals" (formula "16") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "14"))
                                 (rule "polySimp_addComm1" (formula "17") (term "1"))
                                 (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "14"))
                                 (rule "polySimp_addComm1" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (rule "concrete_or_1" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(neglit(2(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                 (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "15"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0"))
                                 (rule "greater_literals" (formula "8") (term "0,0"))
                                 (rule "concrete_impl_1" (formula "8") (term "0"))
                                 (rule "qeq_literals" (formula "8") (term "0"))
                                 (rule "concrete_and_2" (formula "8"))
                                 (rule "closeFalse" (formula "8"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "20"))
                                 (branch "Case 1"
                                    (rule "Class_invariant_axiom_for_java_util_BitSet" (formula "18") (inst "i=i") (inst "i_0=i_0") (ifseqformula "4") (userinteraction))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,0,0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,0,1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,0,1,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "1,0,1,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "1,0,1,0,1,1"))
                                    (rule "insert_constant_value" (formula "18") (term "0,0,1,1,1,0,1"))
                                    (rule "insert_constant_value" (formula "18") (term "1,0,1,1,1,0,1"))
                                    (rule "insert_constant_value" (formula "18") (term "0,0,1,1,0,0,1"))
                                    (rule "insert_constant_value" (formula "18") (term "1,0,1,1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,1,0,0,1,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,0,1,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,1,1,0,0,1,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,0,1,0,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "1,0,1,1,0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,1,0,1,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,0,0,0,0,0,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "1,0,1,0,1,1,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,1,0,1,0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "1,0,1,1,0,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,1,0,0,1,1,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,0,0,0,0,0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "1,0,1,0,1,1,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "1,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "0,1,1,0,0,1,1,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "1,0,0,1,1,0,0,0,0,0,0,1"))
                                    (rule "expand_inInt" (formula "5"))
                                    (rule "simplifyUpdate2" (formula "20"))
                                    (rule "expand_inLong" (formula "18") (term "1,0,1,1"))
                                    (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                    (rule "replace_long_MIN" (formula "18") (term "0,1,1,0,1,1"))
                                    (rule "replace_long_MAX" (formula "18") (term "1,0,1,0,1,1"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "translateJavaMulInt" (formula "25") (term "1"))
                                    (rule "translateJavaAddInt" (formula "24") (term "1"))
                                    (rule "translateJavaSubInt" (formula "19") (term "0,2,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "25") (term "1,1"))
                                    (rule "translateJavaDivInt" (formula "24") (term "0,1"))
                                    (rule "translateJavaDivInt" (formula "25") (term "0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "applyOnRigidFormula" (formula "29"))
                                    (rule "simplifyUpdate1" (formula "29") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "applyOnRigidTerm" (formula "29") (term "0"))
                                    (rule "applyOnRigidTerm" (formula "29") (term "0,0"))
                                    (rule "applyOnPV" (formula "29") (term "0,0,0"))
                                    (rule "simplifyUpdate1" (formula "29") (term "2,0,0"))
                                    (rule "simplifyUpdate1" (formula "29") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "29") (term "0,0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "29") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "29") (term "0,0"))
                                    (rule "close" (formula "29") (ifseqformula "25"))
                                 )
                                 (branch "Case 2"
                                    (rule "Class_invariant_axiom_for_java_util_BitSet" (formula "18") (inst "i=i") (inst "i_0=i_0") (ifseqformula "4") (userinteraction))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "simplifyUpdate2" (formula "28") (userinteraction))
                                    (rule "allRight" (formula "28") (inst "sk=i_0") (userinteraction))
                                    (rule "allLeftHide" (formula "25") (inst "t=i_0") (userinteraction))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "26") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "26") (term "0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "20") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "24") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "20") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "24") (term "0,0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "1,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "21") (term "0,1,0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "21") (term "1,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,1,0"))
                                    (rule "insert_constant_value" (formula "23") (term "0,0,1"))
                                    (rule "insert_constant_value" (formula "23") (term "1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "21") (term "0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "21") (term "1,0,1"))
                                    (rule "insert_constant_value" (formula "24") (term "0,0,1,1"))
                                    (rule "insert_constant_value" (formula "24") (term "1,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,1,0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "25") (term "0,1,1,0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "1,0,1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "25") (term "0,1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "18") (term "1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0,1,1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "1,0,1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "22") (term "0,1,1,0,0,1"))
                                    (rule "expand_inInt" (formula "5"))
                                    (rule "expand_inLong" (formula "28") (term "1,1"))
                                    (rule "expand_inLong" (formula "25") (term "1"))
                                    (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                    (rule "replace_long_MIN" (formula "28") (term "0,1,1,1"))
                                    (rule "replace_long_MAX" (formula "28") (term "1,0,1,1"))
                                    (rule "replace_long_MAX" (formula "25") (term "1,0,1"))
                                    (rule "replace_long_MIN" (formula "25") (term "0,1,1"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "impRight" (formula "29"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "translateJavaSubInt" (formula "21") (term "0,2,0,0,1"))
                                    (rule "translateJavaAddInt" (formula "26") (term "1"))
                                    (rule "translateJavaMulInt" (formula "27") (term "1"))
                                    (rule "translateJavaDivInt" (formula "26") (term "0,1"))
                                    (rule "translateJavaDivInt" (formula "27") (term "0,1,1"))
                                    (rule "translateJavaAddInt" (formula "27") (term "1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1"))
                                    (rule "applyOnRigidFormula" (formula "31"))
                                    (rule "applyOnRigidFormula" (formula "2"))
                                    (rule "simplifyUpdate1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                    (rule "applyOnRigidFormula" (formula "31") (term "1"))
                                    (rule "simplifyUpdate1" (formula "31") (term "0,1"))
                                    (rule "applyOnRigidFormula" (formula "31") (term "0"))
                                    (rule "simplifyUpdate1" (formula "31") (term "1,0"))
                                    (rule "applyOnRigidTerm" (formula "2") (term "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0"))
                                    (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "1"))
                                    (rule "concrete_and_1" (formula "28") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                                    (rule "applyOnRigidTerm" (formula "31") (term "1,1"))
                                    (rule "simplifyUpdate1" (formula "31") (term "2,1,1"))
                                    (rule "applyOnPV" (formula "31") (term "0,1,1"))
                                    (rule "applyOnRigidTerm" (formula "31") (term "0,0"))
                                    (rule "applyOnPV" (formula "31") (term "0,0,0"))
                                    (rule "simplifyUpdate1" (formula "31") (term "2,0,0"))
                                    (rule "applyOnRigidTerm" (formula "2") (term "0,1"))
                                    (rule "simplifyUpdate1" (formula "2") (term "2,0,1"))
                                    (rule "simplifyUpdate1" (formula "2") (term "1,0,1"))
                                    (rule "applyOnPV" (formula "2") (term "0,0,1"))
                                    (rule "applyOnRigidTerm" (formula "31") (term "1,1,1"))
                                    (rule "applyOnPV" (formula "31") (term "0,1,1,1"))
                                    (rule "simplifyUpdate1" (formula "31") (term "1,1,1,1"))
                                    (rule "simplifyUpdate1" (formula "31") (term "2,1,1,1"))
                                    (rule "applyOnRigidTerm" (formula "31") (term "1,0,0"))
                                    (rule "applyOnPV" (formula "31") (term "0,1,0,0"))
                                    (rule "simplifyUpdate1" (formula "31") (term "1,1,0,0"))
                                    (rule "simplifyUpdate1" (formula "31") (term "2,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "2") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "2") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "31") (term "1,1,1"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "31") (term "1,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "31") (term "1,1,1"))
                                    (rule "dismissNonSelectedField" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "8"))
                                    (rule "dismissNonSelectedField" (formula "31") (term "1,1"))
                                    (rule "dismissNonSelectedField" (formula "31") (term "1,0,0"))
                                    (rule "replaceKnownSelect_taclet00_0" (formula "31") (term "1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "31") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "2"))
                                    (rule "concrete_impl_1" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "28"))
                                    (rule "concrete_and_1" (formula "32"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (rule "concrete_or_1" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "29"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Case 2"
            (rule "expand_inInt" (formula "5"))
            (rule "simplifyUpdate2" (formula "20"))
            (rule "replace_int_MAX" (formula "5") (term "1,0"))
            (rule "replace_int_MIN" (formula "5") (term "0,1"))
            (rule "andLeft" (formula "5"))
            (rule "applyOnRigidFormula" (formula "21"))
            (rule "simplifyUpdate1" (formula "21") (term "1"))
            (rule "applyOnPV" (formula "21") (term "0"))
            (rule "eqClose" (formula "21"))
            (rule "closeTrue" (formula "21"))
         )
      )
      (branch "Case 2"
         (rule "expand_inInt" (formula "5"))
         (rule "simplifyUpdate2" (formula "20"))
         (rule "replace_int_MAX" (formula "5") (term "1,0"))
         (rule "replace_int_MIN" (formula "5") (term "0,1"))
         (rule "andLeft" (formula "5"))
         (rule "allRight" (formula "21") (inst "sk=f_0"))
         (rule "allRight" (formula "21") (inst "sk=o_0"))
         (rule "orRight" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "orRight" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "orRight" (formula "21"))
         (rule "orRight" (formula "21"))
         (rule "applyOnRigidFormula" (formula "25"))
         (rule "simplifyUpdate1" (formula "25") (term "1"))
         (rule "simplifyUpdate1" (formula "25") (term "0"))
         (rule "applyOnRigidFormula" (formula "24"))
         (rule "simplifyUpdate2" (formula "24") (term "0"))
         (rule "applyOnRigidTerm" (formula "25") (term "1"))
         (rule "simplifyUpdate1" (formula "25") (term "2,1"))
         (rule "simplifyUpdate1" (formula "25") (term "1,1"))
         (rule "applyOnPV" (formula "25") (term "0,1"))
         (rule "eqSymm" (formula "25"))
         (rule "applyOnRigidFormula" (formula "24") (term "1"))
         (rule "inEqSimp_ltToLeq" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "25") (term "1"))
         (rule "simplifyUpdate1" (formula "25") (term "2,1"))
         (rule "simplifyUpdate1" (formula "25") (term "1,1"))
         (rule "applyOnPV" (formula "25") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "24") (term "0,1"))
         (rule "simplifyUpdate1" (formula "24") (term "1,0,1"))
         (rule "applyOnRigidTerm" (formula "24") (term "0,0,1"))
         (rule "simplifyUpdate1" (formula "24") (term "1,0,0,1"))
         (rule "applyOnPV" (formula "24") (term "0,0,0,1"))
         (rule "simplifyUpdate1" (formula "24") (term "2,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
         (rule "leq_literals" (formula "6") (term "0"))
         (rule "concrete_or_1" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "25"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "21"))
         (rule "concrete_or_4" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "close" (formula "25") (ifseqformula "1"))
      )
   )
   (branch "Exceptional Post (ensureCapacity)"
      (rule "simplifyUpdate2" (formula "11"))
      (rule "eqSymm" (formula "11") (term "0,1,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "sequentialToParallel2" (formula "11"))
      (rule "simplifyUpdate3" (formula "11") (term "1,0"))
      (rule "andLeft" (formula "11"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "andLeft" (formula "12"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "simplifyUpdate2" (formula "15"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "16") (ifseqformula "15"))
   )
   (branch "Pre (ensureCapacity)"
      (rule "insert_constant_value" (formula "11") (term "0,0,1,1,0,0,1,1"))
      (rule "insert_constant_value" (formula "11") (term "1,0,1,1,0,0,1,1"))
      (rule "expand_inInt" (formula "5"))
      (rule "expand_inInt" (formula "11") (term "1,1,1,1"))
      (rule "replace_int_MAX" (formula "5") (term "1,0"))
      (rule "replace_int_MIN" (formula "5") (term "0,1"))
      (rule "replace_int_MIN" (formula "11") (term "0,1,1,1,1,1"))
      (rule "replace_int_MAX" (formula "11") (term "1,0,1,1,1,1"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "simplifyUpdate2" (formula "11") (term "1"))
      (rule "andLeft" (formula "5"))
      (rule "translateJavaDivInt" (formula "12") (term "0,1,1,0,0,1"))
      (rule "translateJavaAddInt" (formula "12") (term "1,1,0,0,1"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "applyOnRigidFormula" (formula "12") (term "1"))
      (rule "simplifyUpdate2" (formula "12") (term "0,1"))
      (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "2"))
      (rule "concrete_and_1" (formula "12") (term "1"))
      (rule "applyOnRigidFormula" (formula "12") (term "0"))
      (rule "simplifyUpdate2" (formula "12") (term "1,0"))
      (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "10"))
      (rule "concrete_and_3" (formula "12") (term "0"))
      (rule "applyOnRigidFormula" (formula "12") (term "1"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "12") (term "0"))
      (rule "applyOnRigidFormula" (formula "12") (term "0,1"))
      (rule "applyOnPV" (formula "12") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,1"))
      (rule "applyOnRigidFormula" (formula "12") (term "1,1"))
      (rule "applyOnPV" (formula "12") (term "1,1,1"))
      (rule "simplifyUpdate1" (formula "12") (term "0,1,1"))
      (rule "applyOnRigidFormula" (formula "12") (term "0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,0"))
      (rule "applyOnPV" (formula "12") (term "0,0,0"))
      (rule "applyOnRigidFormula" (formula "12") (term "1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1,0"))
      (rule "applyOnPV" (formula "12") (term "0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
      (rule "leq_literals" (formula "6") (term "0"))
      (rule "concrete_or_1" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "expand_divJint" (formula "8") (term "0"))
      (rule "jdiv_axiom_inline" (formula "8") (term "0,0"))
      (rule "mul_literals" (formula "8") (term "0,0,2,0,0"))
      (rule "qeq_literals" (formula "8") (term "0,0,0"))
      (rule "ifthenelse_true" (formula "8") (term "0,0"))
      (rule "div_literals" (formula "8") (term "0,0"))
      (rule "expand_addJint" (formula "11") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
      (rule "expand_addJint" (formula "11") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
      (rule "expand_addJint" (formula "11") (term "0,1,1"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,1,1"))
      (rule "expand_addJint" (formula "11") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,1,1,0"))
      (rule "expand_divJint" (formula "11") (term "0,0,1,0"))
      (rule "jdiv_axiom_inline" (formula "11") (term "0,0,0,1,0"))
      (rule "qeq_literals" (formula "11") (term "0,0,0,0,1,0"))
      (rule "ifthenelse_true" (formula "11") (term "0,0,0,1,0"))
      (rule "div_literals" (formula "11") (term "0,0,0,1,0"))
      (rule "expand_addJint" (formula "1") (term "1,1"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,1"))
      (rule "expand_moduloInteger" (formula "8") (term "0"))
      (rule "replace_int_RANGE" (formula "8") (term "1,1,0"))
      (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,0"))
      (rule "replace_int_MIN" (formula "8") (term "0,0"))
      (rule "add_literals" (formula "8") (term "0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "polySimp_addComm0" (formula "8") (term "0,0"))
      (rule "mod_axiom" (formula "8") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
      (rule "div_literals" (formula "8") (term "0,1,0,1,0"))
      (rule "times_zero_2" (formula "8") (term "1,0,1,0"))
      (rule "add_zero_right" (formula "8") (term "0,1,0"))
      (rule "mul_literals" (formula "8") (term "1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
      (rule "leq_literals" (formula "5") (term "0"))
      (rule "concrete_or_1" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "expand_moduloInteger" (formula "10") (term "0,0,1"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,1"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,1"))
      (rule "replace_int_MIN" (formula "10") (term "0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
      (rule "add_literals" (formula "10") (term "0,0,0,1"))
      (rule "mod_axiom" (formula "10") (term "0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1"))
      (rule "mul_literals" (formula "10") (term "0,0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1"))
      (rule "mul_literals" (formula "10") (term "0,1,0,1"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1"))
      (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0,0,1"))
      (rule "equal_literals" (formula "10") (term "0,0,0,0,1"))
      (rule "ifthenelse_false" (formula "10") (term "0,0,0,1"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1"))
      (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
      (rule "mul_literals" (formula "10") (term "0,0,0,1"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1"))
      (rule "expand_moduloInteger" (formula "10") (term "0,0,0"))
      (rule "replace_int_MIN" (formula "10") (term "0,0,0,0"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
      (rule "mod_axiom" (formula "10") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
      (rule "polyDiv_pullOut" (formula "10") (term "0,0,0,0") (inst "polyDivCoeff=Z(1(#))"))
      (rule "equal_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "ifthenelse_false" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "10") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
      (rule "expand_moduloInteger" (formula "10") (term "0,1,1"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,1"))
      (rule "replace_int_MIN" (formula "10") (term "0,0,1,1"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1,1"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,1,1"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1"))
      (rule "mul_literals" (formula "10") (term "0,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
      (rule "add_literals" (formula "10") (term "0,0,1,1"))
      (rule "add_zero_left" (formula "10") (term "0,1,1"))
      (rule "mod_axiom" (formula "10") (term "0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,1"))
      (rule "mul_literals" (formula "10") (term "0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1"))
      (rule "mul_literals" (formula "10") (term "0,1,1,1"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,1"))
      (rule "polyDiv_pullOut" (formula "10") (term "0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
      (rule "equal_literals" (formula "10") (term "0,0,0,1,1"))
      (rule "ifthenelse_false" (formula "10") (term "0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,1"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1"))
      (rule "polySimp_addComm0" (formula "10") (term "1,0,1,1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,1,1"))
      (rule "add_literals" (formula "10") (term "0,0,1,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1"))
      (rule "mul_literals" (formula "10") (term "0,0,1,1"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1"))
      (rule "mul_literals" (formula "10") (term "0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,1"))
      (rule "expand_moduloInteger" (formula "10") (term "1,1,0"))
      (rule "replace_int_MIN" (formula "10") (term "0,1,1,0"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,0"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,1,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
      (rule "mod_axiom" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
      (rule "polyDiv_pullOut" (formula "10") (term "0,1,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
      (rule "equal_literals" (formula "10") (term "0,0,1,1,1,0"))
      (rule "ifthenelse_false" (formula "10") (term "0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,1,1,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,1,0"))
      (rule "expand_moduloInteger" (formula "1") (term "1,1"))
      (rule "replace_int_MIN" (formula "1") (term "0,1,1"))
      (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,1"))
      (rule "replace_int_RANGE" (formula "1") (term "1,1,1,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,1"))
      (rule "add_literals" (formula "1") (term "0,0,1,1,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "1"))
      (rule "add_literals" (formula "1") (term "0,1"))
      (rule "mod_axiom" (formula "1") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "add_zero_left" (formula "1") (term "0,1"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,1"))
      (rule "equal_literals" (formula "1") (term "0,0,1,1"))
      (rule "ifthenelse_false" (formula "1") (term "0,1,1"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
      (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "1"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1"))
      (rule "expand_addJint" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0"))
      (rule "expand_moduloInteger" (formula "10") (term "0,1,0"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
      (rule "mod_axiom" (formula "10") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "0,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,0,0,1,1,0"))
      (rule "polyDiv_pullOut" (formula "10") (term "0,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0,1,0"))
      (rule "equal_literals" (formula "10") (term "0,0,0,1,0"))
      (rule "ifthenelse_false" (formula "10") (term "0,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
      (rule "mul_literals" (formula "10") (term "0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
      (rule "expand_moduloInteger" (formula "10") (term "1,1,1,0"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1,1,0"))
      (rule "replace_int_MIN" (formula "10") (term "0,1,1,1,0"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0,1,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
      (rule "mod_axiom" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0"))
      (rule "div_literals" (formula "10") (term "0,1,1,0,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
      (rule "expand_moduloInteger" (formula "10") (term "1,0,0,0,1,0"))
      (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,0,0,0,1,0"))
      (rule "replace_int_RANGE" (formula "10") (term "1,1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
      (rule "mod_axiom" (formula "10") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
      (rule "div_literals" (formula "10") (term "0,1,1,0,0,0,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0"))
      (rule "div_literals" (formula "10") (term "0,0,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
      (rule "div_axiom" (formula "10") (term "0,0,0,1") (inst "quotient=quotient_0"))
      (rule "equal_literals" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "qeq_literals" (formula "1") (term "0,1"))
      (rule "ifthenelse_true_for" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1,1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
      (rule "add_literals" (formula "3") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "3") (term "1"))
      (rule "add_literals" (formula "3") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
      (rule "polySimp_addComm1" (formula "4") (term "1"))
      (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
      (rule "applyEq" (formula "13") (term "0,0,0,1") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,1"))
      (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "3"))
      (rule "concrete_and_1" (formula "13") (term "1"))
      (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
      (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1"))
      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
      (rule "concrete_and_3" (formula "13"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1"))
      (rule "polySimp_rightDist" (formula "3") (term "1"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
      (rule "mul_literals" (formula "3") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
      (rule "times_zero_1" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1"))
      (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
      (rule "leq_literals" (formula "9") (term "0,0"))
      (rule "concrete_or_2" (formula "9") (term "0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0"))
      (rule "leq_literals" (formula "9") (term "0"))
      (rule "concrete_or_2" (formula "9"))
      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
      (rule "mul_literals" (formula "2") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
      (rule "leq_literals" (formula "2") (term "0,0"))
      (rule "concrete_or_2" (formula "2") (term "0"))
      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "qeq_literals" (formula "2") (term "0"))
      (rule "concrete_or_2" (formula "2"))
      (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "2"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "applyEqRigid" (formula "15") (term "0,1,1,0") (ifseqformula "10"))
      (rule "mul_literals" (formula "15") (term "1,1,0"))
      (rule "add_literals" (formula "15") (term "1,0"))
      (rule "applyEq" (formula "15") (term "0,1,1,1") (ifseqformula "10"))
      (rule "mul_literals" (formula "15") (term "1,1,1"))
      (rule "add_literals" (formula "15") (term "1,1"))
      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "12"))
      (rule "concrete_and_3" (formula "15"))
      (rule "inEqSimp_geqRight" (formula "15"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "11"))
      (rule "mul_literals" (formula "5") (term "1,1"))
      (rule "add_literals" (formula "5") (term "1"))
      (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "11"))
      (rule "mul_literals" (formula "4") (term "1,1"))
      (rule "add_literals" (formula "4") (term "1"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
      (rule "leq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "10"))
      (rule "mul_literals" (formula "5") (term "1,0,1"))
      (rule "add_literals" (formula "5") (term "0,1"))
      (rule "add_zero_left" (formula "5") (term "1"))
      (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "10"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "1"))
      (rule "leq_literals" (formula "12") (term "0"))
      (rule "concrete_or_1" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
      (rule "leq_literals" (formula "4") (term "0"))
      (rule "concrete_or_1" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
      (rule "leq_literals" (formula "3") (term "0"))
      (rule "concrete_or_1" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if x false"
   (rule "false_to_not_true" (formula "1") (term "1"))
   (rule "simplifyUpdate2" (formula "11"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "simplifyUpdate1" (formula "9") (term "1"))
   (rule "applyOnPV" (formula "9") (term "0"))
   (rule "ifthenelse_concrete3" (formula "9"))
   (rule "boolean_not_equal_2" (formula "9") (term "1"))
   (rule "concrete_or_4" (formula "9"))
   (rule "methodCallEmpty" (formula "11") (term "1"))
   (rule "tryEmpty" (formula "11") (term "1"))
   (rule "emptyModality" (formula "11") (term "1"))
   (rule "Class_invariant_axiom_for_java_util_BitSet" (formula "8") (inst "i=i") (inst "i_0=i_0") (ifseqformula "3") (userinteraction))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andRight" (formula "19"))
   (branch "Case 1"
      (rule "andRight" (formula "19"))
      (branch "Case 1"
         (rule "andRight" (formula "19"))
         (branch "Case 1"
            (rule "impRight" (formula "19"))
            (rule "andRight" (formula "20"))
            (branch "Case 1"
               (rule "insert_constant_value" (formula "15") (term "0,0,1"))
               (rule "insert_constant_value" (formula "15") (term "1,0,1"))
               (rule "insert_constant_value" (formula "16") (term "0,0,1,1"))
               (rule "insert_constant_value" (formula "16") (term "1,0,1,1"))
               (rule "expand_inLong" (formula "17") (term "1,0"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "expand_inInt" (formula "5"))
               (rule "simplifyUpdate2" (formula "20"))
               (rule "replace_long_MIN" (formula "17") (term "0,1,1,0"))
               (rule "replace_long_MAX" (formula "17") (term "1,0,1,0"))
               (rule "replace_int_MIN" (formula "5") (term "0,1"))
               (rule "replace_int_MAX" (formula "5") (term "1,0"))
               (rule "notLeft" (formula "9"))
               (rule "andLeft" (formula "5"))
               (rule "translateJavaSubInt" (formula "10") (term "0,2,0,0,1"))
               (rule "translateJavaAddInt" (formula "15") (term "1"))
               (rule "translateJavaMulInt" (formula "16") (term "1"))
               (rule "translateJavaDivInt" (formula "15") (term "0,1"))
               (rule "translateJavaDivInt" (formula "16") (term "0,1,1"))
               (rule "translateJavaAddInt" (formula "16") (term "1,1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "0"))
               (rule "applyOnRigidFormula" (formula "21"))
               (rule "simplifyUpdate1" (formula "21") (term "1"))
               (rule "inEqSimp_ltRight" (formula "19"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
               (rule "applyOnRigidTerm" (formula "2") (term "1"))
               (rule "applyOnPV" (formula "2") (term "0,1"))
               (rule "simplifyUpdate1" (formula "2") (term "1,1"))
               (rule "simplifyUpdate1" (formula "2") (term "2,1"))
               (rule "applyOnRigidTerm" (formula "21") (term "0"))
               (rule "simplifyUpdate1" (formula "21") (term "2,0"))
               (rule "simplifyUpdate1" (formula "21") (term "1,0"))
               (rule "applyOnPV" (formula "21") (term "0,0"))
               (rule "eqClose" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
            (branch "Case 2"
               (rule "insert_constant_value" (formula "15") (term "0,0,1"))
               (rule "insert_constant_value" (formula "15") (term "1,0,1"))
               (rule "insert_constant_value" (formula "16") (term "0,0,1,1"))
               (rule "insert_constant_value" (formula "16") (term "1,0,1,1"))
               (rule "expand_inLong" (formula "17") (term "1,0"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "expand_inInt" (formula "5"))
               (rule "simplifyUpdate2" (formula "20"))
               (rule "replace_long_MIN" (formula "17") (term "0,1,1,0"))
               (rule "replace_long_MAX" (formula "17") (term "1,0,1,0"))
               (rule "replace_int_MAX" (formula "5") (term "1,0"))
               (rule "replace_int_MIN" (formula "5") (term "0,1"))
               (rule "notLeft" (formula "9"))
               (rule "andLeft" (formula "5"))
               (rule "translateJavaSubInt" (formula "10") (term "0,2,0,0,1"))
               (rule "translateJavaAddInt" (formula "15") (term "1"))
               (rule "translateJavaMulInt" (formula "16") (term "1"))
               (rule "translateJavaDivInt" (formula "15") (term "0,1"))
               (rule "translateJavaDivInt" (formula "16") (term "0,1,1"))
               (rule "translateJavaAddInt" (formula "16") (term "1,1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "0"))
               (rule "applyOnRigidFormula" (formula "21"))
               (rule "simplifyUpdate1" (formula "21") (term "1"))
               (rule "inEqSimp_ltRight" (formula "19"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "applyOnRigidTerm" (formula "2") (term "1"))
               (rule "simplifyUpdate1" (formula "2") (term "2,1"))
               (rule "simplifyUpdate1" (formula "2") (term "1,1"))
               (rule "applyOnPV" (formula "2") (term "0,1"))
               (rule "applyOnRigidTerm" (formula "21") (term "0"))
               (rule "applyOnPV" (formula "21") (term "0,0"))
               (rule "simplifyUpdate1" (formula "21") (term "1,0"))
               (rule "simplifyUpdate1" (formula "21") (term "2,0"))
               (rule "eqClose" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "Case 2"
            (rule "andRight" (formula "19"))
            (branch "Case 1"
               (rule "impRight" (formula "19"))
               (rule "insert_constant_value" (formula "15") (term "0,0,1"))
               (rule "insert_constant_value" (formula "15") (term "1,0,1"))
               (rule "insert_constant_value" (formula "16") (term "0,0,1,1"))
               (rule "insert_constant_value" (formula "16") (term "1,0,1,1"))
               (rule "expand_inLong" (formula "17") (term "1,0"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "expand_inInt" (formula "5"))
               (rule "simplifyUpdate2" (formula "20"))
               (rule "replace_long_MIN" (formula "17") (term "0,1,1,0"))
               (rule "replace_long_MAX" (formula "17") (term "1,0,1,0"))
               (rule "replace_int_MIN" (formula "5") (term "0,1"))
               (rule "replace_int_MAX" (formula "5") (term "1,0"))
               (rule "notLeft" (formula "9"))
               (rule "andLeft" (formula "5"))
               (rule "translateJavaSubInt" (formula "10") (term "0,2,0,0,1"))
               (rule "translateJavaAddInt" (formula "15") (term "1"))
               (rule "translateJavaMulInt" (formula "16") (term "1"))
               (rule "translateJavaDivInt" (formula "15") (term "0,1"))
               (rule "translateJavaAddInt" (formula "16") (term "1,1"))
               (rule "translateJavaDivInt" (formula "16") (term "0,1,1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "inEqSimp_ltRight" (formula "19"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "applyOnRigidTerm" (formula "2") (term "0"))
               (rule "applyOnPV" (formula "2") (term "0,0"))
               (rule "simplifyUpdate1" (formula "2") (term "1,0"))
               (rule "simplifyUpdate1" (formula "2") (term "2,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "7"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
               (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "21"))
               (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0"))
               (rule "leq_literals" (formula "21") (term "0"))
               (rule "concrete_and_2" (formula "21"))
               (rule "false_right" (formula "21"))
               (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
               (rule "leq_literals" (formula "7") (term "0"))
               (rule "concrete_or_1" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
               (rule "times_zero_1" (formula "13") (term "0,0"))
               (rule "add_zero_left" (formula "13") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
               (rule "times_zero_1" (formula "14") (term "0,0"))
               (rule "add_zero_left" (formula "14") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
               (rule "times_zero_1" (formula "15") (term "0,0"))
               (rule "add_zero_left" (formula "15") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "21"))
               (rule "times_zero_1" (formula "15") (term "0,0"))
               (rule "add_zero_left" (formula "15") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "expand_divJint" (formula "13") (term "0"))
               (rule "jdiv_axiom_inline" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,2,0,0"))
               (rule "div_literals" (formula "13") (term "1,0,0"))
               (rule "qeq_literals" (formula "13") (term "0,0,0"))
               (rule "ifthenelse_true" (formula "13") (term "0,0"))
               (rule "expand_subJint" (formula "14") (term "0,2,0,0,1"))
               (rule "polySimp_elimSub" (formula "14") (term "0,0,2,0,0,1"))
               (rule "mul_literals" (formula "14") (term "1,0,0,2,0,0,1"))
               (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,1"))
               (rule "expand_divJint" (formula "22") (term "0,1"))
               (rule "jdiv_axiom_inline" (formula "22") (term "0,0,1"))
               (rule "mul_literals" (formula "22") (term "0,0,2,0,0,1"))
               (rule "qeq_literals" (formula "22") (term "0,0,0,1"))
               (rule "ifthenelse_true" (formula "22") (term "0,0,1"))
               (rule "div_literals" (formula "22") (term "0,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "22"))
               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
               (rule "mul_literals" (formula "5") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "23"))
               (rule "times_zero_1" (formula "19") (term "0,0"))
               (rule "add_zero_left" (formula "19") (term "0"))
               (rule "expand_addJint" (formula "25") (term "1,1"))
               (rule "polySimp_addComm0" (formula "25") (term "0,1,1"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "25"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "26"))
               (rule "times_zero_1" (formula "19") (term "0,0"))
               (rule "add_zero_left" (formula "19") (term "0"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "expand_addJint" (formula "7") (term "1,1"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1,1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "mul_literals" (formula "7") (term "0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
               (rule "mul_literals" (formula "8") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "28"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "mul_literals" (formula "9") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "30"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "mul_literals" (formula "7") (term "0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
               (rule "nnf_imp2or" (formula "29") (term "0,1"))
               (rule "expand_addJint" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
               (rule "expand_addJint" (formula "3") (term "1,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,1,1"))
               (rule "expand_divJint" (formula "3") (term "0,0"))
               (rule "jdiv_axiom_inline" (formula "3") (term "0,0,0"))
               (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
               (rule "ifthenelse_true" (formula "3") (term "0,0,0"))
               (rule "div_literals" (formula "3") (term "0,0,0"))
               (rule "expand_divJint" (formula "18") (term "0,0"))
               (rule "jdiv_axiom_inline" (formula "18") (term "0,0,0"))
               (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
               (rule "ifthenelse_true" (formula "18") (term "0,0,0"))
               (rule "div_literals" (formula "18") (term "0,0,0"))
               (rule "expand_divJint" (formula "18") (term "0,1,0"))
               (rule "jdiv_axiom_inline" (formula "18") (term "0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "0,0,2,0,0,1,0"))
               (rule "qeq_literals" (formula "18") (term "0,0,0,1,0"))
               (rule "ifthenelse_true" (formula "18") (term "0,0,1,0"))
               (rule "div_literals" (formula "18") (term "0,0,1,0"))
               (rule "expand_mulJint" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "expand_addJint" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,1,1"))
               (rule "expand_moduloInteger" (formula "16") (term "0"))
               (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
               (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
               (rule "replace_int_MIN" (formula "16") (term "0,0"))
               (rule "add_literals" (formula "16") (term "0,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "16"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0"))
               (rule "polySimp_addComm0" (formula "16") (term "0,0"))
               (rule "mod_axiom" (formula "16") (term "0,1,0"))
               (rule "div_literals" (formula "16") (term "0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
               (rule "times_zero_2" (formula "16") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "16") (term "0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0"))
               (rule "add_literals" (formula "16") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "16"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "expand_moduloInteger" (formula "16") (term "0,2,0,0,1"))
               (rule "replace_int_RANGE" (formula "16") (term "1,1,0,2,0,0,1"))
               (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,2,0,0,1"))
               (rule "replace_int_MIN" (formula "16") (term "0,0,2,0,0,1"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,2,0,0,1"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,2,0,0,1"))
               (rule "mod_axiom" (formula "16") (term "1,0,2,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,2,0,0,1"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,2,0,0,1"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,2,0,0,1"))
               (rule "add_literals" (formula "16") (term "0,0,0,2,0,0,1"))
               (rule "expand_addJint" (formula "25") (term "1"))
               (rule "polySimp_addComm0" (formula "25") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "25"))
               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
               (rule "mul_literals" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "1"))
               (rule "mul_literals" (formula "8") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "26"))
               (rule "times_zero_1" (formula "22") (term "0,0"))
               (rule "add_zero_left" (formula "22") (term "0"))
               (rule "expand_moduloInteger" (formula "3") (term "0,0"))
               (rule "replace_int_MIN" (formula "3") (term "0,0,0"))
               (rule "replace_int_RANGE" (formula "3") (term "1,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "3") (term "0,1,0,0"))
               (rule "mod_axiom" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
               (rule "div_literals" (formula "3") (term "0,1,1,0,0"))
               (rule "times_zero_2" (formula "3") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "3") (term "1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "expand_moduloInteger" (formula "21") (term "0,0"))
               (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,0"))
               (rule "replace_int_RANGE" (formula "21") (term "1,1,0,0"))
               (rule "replace_int_MIN" (formula "21") (term "0,0,0"))
               (rule "add_literals" (formula "21") (term "0,1,0,0"))
               (rule "mod_axiom" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
               (rule "div_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "times_zero_2" (formula "21") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "21") (term "1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0"))
               (rule "expand_divJint" (formula "28") (term "1,0,1,1"))
               (rule "jdiv_axiom_inline" (formula "28") (term "0,1,0,1,1"))
               (rule "mul_literals" (formula "28") (term "0,0,2,0,1,0,1,1"))
               (rule "qeq_literals" (formula "28") (term "0,0,1,0,1,1"))
               (rule "ifthenelse_true" (formula "28") (term "0,1,0,1,1"))
               (rule "div_literals" (formula "28") (term "0,1,0,1,1"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "28"))
               (rule "times_zero_1" (formula "20") (term "0,0"))
               (rule "add_zero_left" (formula "20") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "29"))
               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
               (rule "mul_literals" (formula "5") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "expand_mulJint" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
               (rule "expand_addJint" (formula "2") (term "1,1"))
               (rule "polySimp_addComm0" (formula "2") (term "0,1,1"))
               (rule "expand_moduloInteger" (formula "20") (term "1,0"))
               (rule "replace_int_RANGE" (formula "20") (term "1,1,1,0"))
               (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,1,0"))
               (rule "replace_int_MIN" (formula "20") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,1,0"))
               (rule "mod_axiom" (formula "20") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,0"))
               (rule "polyDiv_pullOut" (formula "20") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,2,0,1,1,0"))
               (rule "equal_literals" (formula "20") (term "0,0,1,1,0"))
               (rule "ifthenelse_false" (formula "20") (term "0,1,1,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "20") (term "1,1,1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,0"))
               (rule "expand_moduloInteger" (formula "10") (term "1,1"))
               (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1"))
               (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1"))
               (rule "replace_int_MIN" (formula "10") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1"))
               (rule "add_literals" (formula "10") (term "0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "mod_axiom" (formula "10") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
               (rule "add_literals" (formula "10") (term "0,0,1"))
               (rule "polyDiv_pullOut" (formula "10") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1"))
               (rule "equal_literals" (formula "10") (term "0,0,1,1"))
               (rule "ifthenelse_false" (formula "10") (term "0,1,1"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,1,1"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1"))
               (rule "mul_literals" (formula "10") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "polySimp_addComm1" (formula "10") (term "0,1"))
               (rule "add_literals" (formula "10") (term "0,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "26"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1"))
               (rule "polySimp_rightDist" (formula "10") (term "1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
               (rule "mul_literals" (formula "10") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1"))
               (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0"))
               (rule "concrete_or_2" (formula "11") (term "0"))
               (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0"))
               (rule "leq_literals" (formula "11") (term "0"))
               (rule "concrete_or_2" (formula "11"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "31"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1"))
               (rule "polySimp_rightDist" (formula "12") (term "1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
               (rule "polySimp_rightDist" (formula "12") (term "0,1"))
               (rule "mul_literals" (formula "12") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "33"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1"))
               (rule "polySimp_rightDist" (formula "10") (term "1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
               (rule "mul_literals" (formula "10") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
               (rule "expand_moduloInteger" (formula "6") (term "1,1"))
               (rule "replace_int_MIN" (formula "6") (term "0,1,1"))
               (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,1"))
               (rule "replace_int_RANGE" (formula "6") (term "1,1,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1"))
               (rule "add_literals" (formula "6") (term "0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "add_literals" (formula "6") (term "0,1"))
               (rule "mod_axiom" (formula "6") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
               (rule "add_literals" (formula "6") (term "0,0,1"))
               (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,1,1"))
               (rule "equal_literals" (formula "6") (term "0,0,1,1"))
               (rule "ifthenelse_false" (formula "6") (term "0,1,1"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,1,1,1"))
               (rule "add_literals" (formula "6") (term "0,0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1"))
               (rule "mul_literals" (formula "6") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1"))
               (rule "add_literals" (formula "6") (term "0,0,1"))
               (rule "expand_moduloInteger" (formula "6") (term "0"))
               (rule "replace_int_MIN" (formula "6") (term "0,0"))
               (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
               (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
               (rule "add_literals" (formula "6") (term "0,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0"))
               (rule "mod_axiom" (formula "6") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0"))
               (rule "concrete_or_2" (formula "6") (term "0"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_2" (formula "6"))
               (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "equal_literals" (formula "6") (term "0,0"))
               (rule "ifthenelse_false" (formula "6") (term "0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
               (rule "add_literals" (formula "6") (term "0,0,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "add_zero_left" (formula "6") (term "0"))
               (rule "inEqSimp_invertInEq0" (formula "6"))
               (rule "times_zero_2" (formula "6") (term "1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,0"))
               (rule "expand_moduloInteger" (formula "6") (term "0,0"))
               (rule "replace_int_MIN" (formula "6") (term "0,0,0"))
               (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,0"))
               (rule "replace_int_RANGE" (formula "6") (term "1,1,0,0"))
               (rule "add_literals" (formula "6") (term "0,1,0,0"))
               (rule "mod_axiom" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
               (rule "div_literals" (formula "6") (term "0,1,1,0,0"))
               (rule "times_zero_2" (formula "6") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,0,0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "expand_moduloInteger" (formula "6") (term "1,1"))
               (rule "replace_int_MIN" (formula "6") (term "0,1,1"))
               (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,1"))
               (rule "replace_int_RANGE" (formula "6") (term "1,1,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1"))
               (rule "add_literals" (formula "6") (term "0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "add_literals" (formula "6") (term "0,1"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "mod_axiom" (formula "6") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "equal_literals" (formula "6") (term "0,0,1,1"))
               (rule "ifthenelse_false" (formula "6") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,1,1,1"))
               (rule "add_literals" (formula "6") (term "0,0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1"))
               (rule "mul_literals" (formula "6") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1"))
               (rule "add_literals" (formula "6") (term "0,0,1"))
               (rule "expand_divJint" (formula "4") (term "1,0,1,0"))
               (rule "jdiv_axiom_inline" (formula "4") (term "0,1,0,1,0"))
               (rule "qeq_literals" (formula "4") (term "0,0,1,0,1,0"))
               (rule "ifthenelse_true" (formula "4") (term "0,1,0,1,0"))
               (rule "div_literals" (formula "4") (term "0,1,0,1,0"))
               (rule "expand_mulJint" (formula "20") (term "0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
               (rule "expand_addJint" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1"))
               (rule "expand_moduloInteger" (formula "29") (term "1"))
               (rule "replace_int_RANGE" (formula "29") (term "1,1,1"))
               (rule "replace_int_HALFRANGE" (formula "29") (term "0,0,1,1"))
               (rule "replace_int_MIN" (formula "29") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,1,1"))
               (rule "add_literals" (formula "29") (term "0,0,1,1"))
               (rule "mod_axiom" (formula "29") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
               (rule "polySimp_addAssoc" (formula "29") (term "1"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
               (rule "add_literals" (formula "29") (term "0,0,1"))
               (rule "polyDiv_pullOut" (formula "29") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,0,1,1"))
               (rule "equal_literals" (formula "29") (term "0,0,1,1"))
               (rule "ifthenelse_false" (formula "29") (term "0,1,1"))
               (rule "mul_literals" (formula "29") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
               (rule "polySimp_addComm0" (formula "29") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,1,1,1"))
               (rule "add_literals" (formula "29") (term "0,0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1"))
               (rule "mul_literals" (formula "29") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "29") (term "1"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1"))
               (rule "add_literals" (formula "29") (term "0,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "29"))
               (rule "times_zero_1" (formula "25") (term "0,0"))
               (rule "add_zero_left" (formula "25") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "30"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "expand_moduloInteger" (formula "5") (term "1,0,0"))
               (rule "replace_int_MIN" (formula "5") (term "0,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,1,0,0"))
               (rule "replace_int_RANGE" (formula "5") (term "1,1,1,0,0"))
               (rule "add_literals" (formula "5") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0"))
               (rule "mod_axiom" (formula "5") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
               (rule "div_literals" (formula "5") (term "0,1,1,0,0"))
               (rule "times_zero_2" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,0,0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "5"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "expand_moduloInteger" (formula "25") (term "1,0,0"))
               (rule "replace_int_MIN" (formula "25") (term "0,1,0,0"))
               (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,1,0,0"))
               (rule "replace_int_RANGE" (formula "25") (term "1,1,1,0,0"))
               (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0"))
               (rule "mod_axiom" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
               (rule "div_literals" (formula "25") (term "0,1,1,0,0"))
               (rule "times_zero_2" (formula "25") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "25") (term "1,0,0"))
               (rule "add_literals" (formula "25") (term "0,0"))
               (rule "expand_addJint" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "expand_addJint" (formula "24") (term "0"))
               (rule "add_literals" (formula "24") (term "0,0"))
               (rule "expand_moduloInteger" (formula "31") (term "1,1"))
               (rule "replace_int_MIN" (formula "31") (term "0,1,1"))
               (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,1"))
               (rule "replace_int_RANGE" (formula "31") (term "1,1,1,1"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,1,1,1"))
               (rule "add_literals" (formula "31") (term "0,0,1,1,1"))
               (rule "mod_axiom" (formula "31") (term "1,1,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1"))
               (rule "polySimp_addAssoc" (formula "31") (term "1,1"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,1,1"))
               (rule "add_literals" (formula "31") (term "0,0,1,1"))
               (rule "polyDiv_pullOut" (formula "31") (term "0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,1,1,1"))
               (rule "equal_literals" (formula "31") (term "0,0,1,1,1"))
               (rule "ifthenelse_false" (formula "31") (term "0,1,1,1"))
               (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "31") (term "1,1,1,1"))
               (rule "polySimp_addComm1" (formula "31") (term "0,1,1,1,1,1"))
               (rule "add_literals" (formula "31") (term "0,0,1,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,1"))
               (rule "mul_literals" (formula "31") (term "0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "31") (term "1,1"))
               (rule "polySimp_addComm1" (formula "31") (term "0,1,1"))
               (rule "add_literals" (formula "31") (term "0,0,1,1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "31"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "polySimp_rightDist" (formula "7") (term "0,1"))
               (rule "mul_literals" (formula "7") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "32"))
               (rule "times_zero_1" (formula "24") (term "0,0"))
               (rule "add_zero_left" (formula "24") (term "0"))
               (rule "expand_mulJint" (formula "23") (term "0"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
               (rule "expand_moduloInteger" (formula "3") (term "1,0,1,0"))
               (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0,1,0"))
               (rule "replace_int_MIN" (formula "3") (term "0,1,0,1,0"))
               (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "mod_axiom" (formula "3") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0"))
               (rule "div_literals" (formula "3") (term "0,1,1,0,1,0"))
               (rule "times_zero_2" (formula "3") (term "1,1,0,1,0"))
               (rule "add_zero_right" (formula "3") (term "1,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,1,0"))
               (rule "expand_moduloInteger" (formula "3") (term "1,1"))
               (rule "replace_int_RANGE" (formula "3") (term "1,1,1,1"))
               (rule "replace_int_MIN" (formula "3") (term "0,1,1"))
               (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,1"))
               (rule "add_literals" (formula "3") (term "0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "mod_axiom" (formula "3") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,1,1"))
               (rule "equal_literals" (formula "3") (term "0,0,1,1"))
               (rule "ifthenelse_false" (formula "3") (term "0,1,1"))
               (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,1"))
               (rule "add_literals" (formula "3") (term "0,0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "1,1"))
               (rule "mul_literals" (formula "3") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "expand_moduloInteger" (formula "1") (term "0,0,0"))
               (rule "replace_int_MIN" (formula "1") (term "0,0,0,0"))
               (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0"))
               (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "equal_literals" (formula "1") (term "0,0,1,0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "expand_moduloInteger" (formula "1") (term "1,1"))
               (rule "replace_int_MIN" (formula "1") (term "0,1,1"))
               (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,1"))
               (rule "replace_int_RANGE" (formula "1") (term "1,1,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,1"))
               (rule "add_literals" (formula "1") (term "0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "add_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "mod_axiom" (formula "1") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
               (rule "equal_literals" (formula "1") (term "0,0,1,1"))
               (rule "ifthenelse_false" (formula "1") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "expand_divJint" (formula "22") (term "1,0,0,1,1,0"))
               (rule "jdiv_axiom_inline" (formula "22") (term "0,1,0,0,1,1,0"))
               (rule "qeq_literals" (formula "22") (term "0,0,1,0,0,1,1,0"))
               (rule "ifthenelse_true" (formula "22") (term "0,1,0,0,1,1,0"))
               (rule "div_literals" (formula "22") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "22") (term "1,0"))
               (rule "expand_moduloInteger" (formula "10") (term "0"))
               (rule "replace_int_MIN" (formula "10") (term "0,0"))
               (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
               (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
               (rule "add_literals" (formula "10") (term "0,0,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0"))
               (rule "mod_axiom" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
               (rule "mul_literals" (formula "10") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1"))
               (rule "polySimp_rightDist" (formula "10") (term "1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
               (rule "mul_literals" (formula "10") (term "0,0,0,1"))
               (rule "polyDiv_pullOut" (formula "10") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "equal_literals" (formula "10") (term "0,0,0"))
               (rule "ifthenelse_false" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0"))
               (rule "mul_literals" (formula "10") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "expand_moduloInteger" (formula "6") (term "1,0"))
               (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,0"))
               (rule "replace_int_RANGE" (formula "6") (term "1,1,1,0"))
               (rule "replace_int_MIN" (formula "6") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,0"))
               (rule "add_literals" (formula "6") (term "0,0,1,1,0"))
               (rule "mod_axiom" (formula "6") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
               (rule "add_literals" (formula "6") (term "0,0,1,0"))
               (rule "polyDiv_pullOut" (formula "6") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,1,1,0"))
               (rule "equal_literals" (formula "6") (term "0,0,1,1,0"))
               (rule "ifthenelse_false" (formula "6") (term "0,1,1,0"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
               (rule "add_literals" (formula "6") (term "0,0,1,0"))
               (rule "commute_and" (formula "32") (term "1,0"))
               (rule "expand_addJint" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "expand_moduloInteger" (formula "19") (term "0"))
               (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
               (rule "replace_int_MIN" (formula "19") (term "0,0"))
               (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
               (rule "mod_axiom" (formula "19") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
               (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=addJint(moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))),
        Z(1(#)))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(addJint(moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))),
                        Z(1(#))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0"))
               (rule "concrete_or_2" (formula "19") (term "0"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0"))
               (rule "qeq_literals" (formula "19") (term "0"))
               (rule "concrete_or_2" (formula "19"))
               (rule "cut_direct" (formula "18") (term "0"))
               (branch "CUT: self.wordsInUse = 0 TRUE"
                  (rule "concrete_or_1" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "times_zero_2" (formula "10") (term "1,0"))
                  (rule "add_zero_right" (formula "10") (term "0"))
                  (rule "applyEq" (formula "28") (term "0,2,0,1") (ifseqformula "18"))
                  (rule "applyEq" (formula "29") (term "1,1,0,0,0,1") (ifseqformula "18"))
                  (rule "add_zero_right" (formula "29") (term "1,0,0,0,1"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
                  (rule "inEqSimp_commuteLeq" (formula "11"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "17"))
                  (rule "inEqSimp_homoInEq0" (formula "27"))
                  (rule "times_zero_2" (formula "27") (term "1,0"))
                  (rule "add_zero_right" (formula "27") (term "0"))
                  (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "17"))
                  (rule "eqSymm" (formula "25") (term "0"))
                  (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "17"))
                  (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                  (rule "times_zero_2" (formula "26") (term "1,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0"))
                  (rule "mul_literals" (formula "26") (term "1,0"))
                  (rule "arrayLengthNotNegative" (formula "27") (term "0"))
                  (rule "arrayLengthIsAnInt" (formula "27") (term "0"))
                  (rule "expand_inInt" (formula "27"))
                  (rule "replace_int_MIN" (formula "27") (term "0,1"))
                  (rule "replace_int_MAX" (formula "27") (term "1,0"))
                  (rule "andLeft" (formula "27"))
                  (rule "inEqSimp_commuteLeq" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "22"))
                  (rule "leq_literals" (formula "28") (term "0"))
                  (rule "concrete_or_1" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "inEqSimp_subsumption5" (formula "7") (ifseqformula "11"))
                  (rule "eq_and" (formula "7") (term "0,0"))
                  (rule "greater_literals" (formula "7") (term "0,0"))
                  (rule "concrete_and_1" (formula "7") (term "0"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "expand_moduloInteger" (formula "24") (term "1,1"))
                  (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,1,1"))
                  (rule "replace_int_RANGE" (formula "24") (term "1,1,1,1"))
                  (rule "replace_int_MIN" (formula "24") (term "0,1,1"))
                  (rule "add_literals" (formula "24") (term "0,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "24") (term "1"))
                  (rule "add_literals" (formula "24") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "mod_axiom" (formula "24") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                  (rule "div_literals" (formula "24") (term "0,1,1,0"))
                  (rule "times_zero_2" (formula "24") (term "1,1,0"))
                  (rule "add_zero_right" (formula "24") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "add_literals" (formula "24") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "neg_literal" (formula "24") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "24") (term "0,0"))
                  (rule "concrete_or_2" (formula "24") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0"))
                  (rule "qeq_literals" (formula "24") (term "0"))
                  (rule "concrete_or_2" (formula "24"))
                  (rule "expand_moduloInteger" (formula "9") (term "1,1"))
                  (rule "replace_int_MIN" (formula "9") (term "0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1,1"))
                  (rule "replace_int_RANGE" (formula "9") (term "1,1,1,1"))
                  (rule "add_literals" (formula "9") (term "0,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "9") (term "1"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "mod_axiom" (formula "9") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                  (rule "div_literals" (formula "9") (term "0,1,1,0"))
                  (rule "times_zero_2" (formula "9") (term "1,1,0"))
                  (rule "add_zero_right" (formula "9") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "expand_moduloInteger" (formula "5") (term "0"))
                  (rule "replace_int_MIN" (formula "5") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                  (rule "add_literals" (formula "5") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "mod_axiom" (formula "5") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                  (rule "mul_literals" (formula "5") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                  (rule "polyDiv_pullOut" (formula "5") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "5") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "5") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "5") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "5") (term "0,0,0,1,1,1"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                  (rule "add_literals" (formula "5") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "22") (term "0"))
                  (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "22") (term "1,1,0"))
                  (rule "replace_int_MIN" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "0,1,0"))
                  (rule "mod_axiom" (formula "22") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                  (rule "div_literals" (formula "22") (term "0,1,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,0"))
                  (rule "add_literals" (formula "22") (term "0"))
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "expand_addJint" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "expand_moduloInteger" (formula "26") (term "1,0,0,1,1,1"))
                  (rule "replace_int_MIN" (formula "26") (term "0,1,0,0,1,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,1,0,0,1,1,1"))
                  (rule "replace_int_RANGE" (formula "26") (term "1,1,1,0,0,1,1,1"))
                  (rule "add_literals" (formula "26") (term "0,1,1,0,0,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,1,1"))
                  (rule "mod_axiom" (formula "26") (term "1,0,0,1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,1,1"))
                  (rule "div_literals" (formula "26") (term "0,1,1,0,0,1,1,1"))
                  (rule "times_zero_2" (formula "26") (term "1,1,0,0,1,1,1"))
                  (rule "add_zero_right" (formula "26") (term "1,0,0,1,1,1"))
                  (rule "add_literals" (formula "26") (term "0,0,1,1,1"))
                  (rule "div_literals" (formula "26") (term "0,1,1,1"))
                  (rule "mul_literals" (formula "26") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "26") (term "1,1"))
                  (rule "add_literals" (formula "26") (term "0,1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                  (rule "mul_literals" (formula "6") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "27"))
                  (rule "times_zero_1" (formula "22") (term "0,0"))
                  (rule "add_zero_left" (formula "22") (term "0"))
                  (rule "expand_mulJint" (formula "5") (term "0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                  (rule "expand_moduloInteger" (formula "21") (term "1,0,0,1,1,0"))
                  (rule "replace_int_MIN" (formula "21") (term "0,1,0,0,1,1,0"))
                  (rule "replace_int_RANGE" (formula "21") (term "1,1,1,0,0,1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "21") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "21") (term "1,0,0,1,1,0"))
                  (rule "div_literals" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "21") (term "1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "21") (term "1,0,0,1,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,1,1,0"))
                  (rule "div_literals" (formula "21") (term "0,1,1,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "1,0"))
                  (rule "add_literals" (formula "21") (term "0,1,0"))
                  (rule "expand_moduloInteger" (formula "20") (term "0,0,0"))
                  (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0,0,0"))
                  (rule "replace_int_RANGE" (formula "20") (term "1,1,0,0,0"))
                  (rule "replace_int_MIN" (formula "20") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "mod_axiom" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "polyDiv_pullOut" (formula "20") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "20") (term "0,0,1,0,0"))
                  (rule "ifthenelse_false" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,1,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "expand_mulJint" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                  (rule "expand_divJint" (formula "1") (term "0,1,0,0,0"))
                  (rule "jdiv_axiom_inline" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "div_literals" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "expand_divJint" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "jdiv_axiom_inline" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "qeq_literals" (formula "1") (term "0,0,1,0,0,1,0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "div_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "expand_moduloInteger" (formula "18") (term "1,0,0,1,0,1,0"))
                  (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,1,0,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,1,0,0,1,0,1,0"))
                  (rule "replace_int_RANGE" (formula "18") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,1,1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,1,0"))
                  (rule "mod_axiom" (formula "18") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0"))
                  (rule "div_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "18") (term "1,0,0,1,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,1,1,0"))
                  (rule "div_literals" (formula "18") (term "0,1,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "1,0"))
                  (rule "add_literals" (formula "18") (term "0,1,0"))
                  (rule "div_axiom" (formula "6") (term "0,1,1") (inst "quotient=quotient_0"))
                  (rule "equal_literals" (formula "6") (term "0"))
                  (rule "concrete_or_2" (formula "6"))
                  (rule "qeq_literals" (formula "6") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "1,1,1"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                  (rule "add_literals" (formula "8") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "1"))
                  (rule "add_literals" (formula "8") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "6"))
                  (rule "polySimp_addComm1" (formula "9") (term "1"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "6"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "6"))
                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "6"))
                  (rule "polySimp_addComm1" (formula "11") (term "1"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "6"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "6"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "6"))
                  (rule "polySimp_addComm1" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                  (rule "mul_literals" (formula "12") (term "0,1"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                  (rule "concrete_or_1" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "17"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "10"))
                  (rule "greater_literals" (formula "7") (term "0,0"))
                  (rule "concrete_impl_1" (formula "7") (term "0"))
                  (rule "times_zero_1" (formula "7") (term "1,0"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (rule "concrete_and_2" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
               (branch "CUT: self.wordsInUse = 0 FALSE"
                  (rule "concrete_or_2" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "inEqSimp_strengthen1" (formula "25") (ifseqformula "33"))
                  (rule "add_zero_right" (formula "25") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "25"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0"))
                  (rule "leq_literals" (formula "33") (term "0"))
                  (rule "concrete_and_2" (formula "33"))
                  (rule "false_right" (formula "33"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                  (rule "mul_literals" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                  (rule "mul_literals" (formula "25") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "25"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (rule "concrete_or_1" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "11"))
                  (rule "mul_literals" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                  (rule "mul_literals" (formula "25") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "25"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_1" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "29"))
                  (rule "mul_literals" (formula "25") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "inEqSimp_subsumption2" (formula "22") (ifseqformula "25"))
                  (rule "eq_and" (formula "22") (term "0,0"))
                  (rule "greater_literals" (formula "22") (term "0,0"))
                  (rule "concrete_and_1" (formula "22") (term "0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "qeq_literals" (formula "22") (term "0"))
                  (rule "concrete_or_1" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "30"))
                  (rule "mul_literals" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "mul_literals" (formula "22") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "22"))
                  (rule "leq_literals" (formula "20") (term "0"))
                  (rule "concrete_or_1" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthIsAnInt" (formula "26") (term "1"))
                  (rule "expand_inInt" (formula "26"))
                  (rule "replace_int_MAX" (formula "26") (term "1,0"))
                  (rule "replace_int_MIN" (formula "26") (term "0,1"))
                  (rule "andLeft" (formula "26"))
                  (rule "inEqSimp_commuteLeq" (formula "27"))
                  (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "22"))
                  (rule "leq_literals" (formula "27") (term "0"))
                  (rule "concrete_or_1" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "23"))
                  (rule "leq_literals" (formula "32") (term "0"))
                  (rule "concrete_or_1" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "cut_direct" (formula "29") (term "0"))
                  (branch "CUT: self.wordsInUse = self.words.length TRUE"
                     (rule "concrete_or_1" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "29"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                     (rule "inEqSimp_homoInEq0" (formula "28"))
                     (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "1,0"))
                     (rule "times_zero_1" (formula "28") (term "0"))
                     (rule "qeq_literals" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "qeq_literals" (formula "29") (term "0"))
                     (rule "concrete_impl_2" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                     (rule "applyEq" (formula "31") (term "1,0,0,1,0,2,0") (ifseqformula "27"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,2,0"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "30") (term "1,0,2,0") (ifseqformula "26"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,2,0"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "27"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "27"))
                     (rule "mul_literals" (formula "22") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "10"))
                     (rule "greater_literals" (formula "8") (term "0,0"))
                     (rule "concrete_and_1" (formula "8") (term "0"))
                     (rule "times_zero_1" (formula "8") (term "1,0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (rule "concrete_or_1" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "11"))
                     (rule "mul_literals" (formula "22") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                     (rule "mul_literals" (formula "22") (term "1"))
                     (rule "expand_moduloInteger" (formula "27") (term "1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "27") (term "0,1,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,1,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "27") (term "1,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,1"))
                     (rule "mod_axiom" (formula "27") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,1"))
                     (rule "div_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                     (rule "times_zero_2" (formula "27") (term "1,1,0,0,1,1"))
                     (rule "add_zero_right" (formula "27") (term "1,0,0,1,1"))
                     (rule "add_literals" (formula "27") (term "0,0,1,1"))
                     (rule "div_literals" (formula "27") (term "0,1,1"))
                     (rule "mul_literals" (formula "27") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "27") (term "1"))
                     (rule "add_literals" (formula "27") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "27"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                     (rule "mul_literals" (formula "8") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "28"))
                     (rule "mul_literals" (formula "23") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "add_zero_left" (formula "23") (term "0"))
                     (rule "expand_moduloInteger" (formula "11") (term "1,1"))
                     (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1"))
                     (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1"))
                     (rule "replace_int_MIN" (formula "11") (term "0,1,1"))
                     (rule "add_literals" (formula "11") (term "0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "mod_axiom" (formula "11") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                     (rule "div_literals" (formula "11") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "expand_moduloInteger" (formula "5") (term "0"))
                     (rule "replace_int_MIN" (formula "5") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                     (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                     (rule "add_literals" (formula "5") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0"))
                     (rule "mod_axiom" (formula "5") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                     (rule "polyDiv_pullOut" (formula "5") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,1,1"))
                     (rule "equal_literals" (formula "5") (term "0,0,1,1"))
                     (rule "ifthenelse_false" (formula "5") (term "0,1,1"))
                     (rule "mul_literals" (formula "5") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,1"))
                     (rule "add_literals" (formula "5") (term "0,0,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "5") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                     (rule "mul_literals" (formula "5") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                     (rule "add_literals" (formula "5") (term "0,0,1"))
                     (rule "expand_moduloInteger" (formula "20") (term "0"))
                     (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "20") (term "0,0"))
                     (rule "replace_int_RANGE" (formula "20") (term "1,1,0"))
                     (rule "add_literals" (formula "20") (term "0,1,0"))
                     (rule "mod_axiom" (formula "20") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                     (rule "div_literals" (formula "20") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "20") (term "1,1,0"))
                     (rule "add_zero_right" (formula "20") (term "1,0"))
                     (rule "add_literals" (formula "20") (term "0"))
                     (rule "qeq_literals" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "expand_addJint" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "expand_moduloInteger" (formula "28") (term "1,0,0,1,1,1"))
                     (rule "replace_int_MIN" (formula "28") (term "0,1,0,0,1,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,1,0,0,1,1,1"))
                     (rule "replace_int_RANGE" (formula "28") (term "1,1,1,0,0,1,1,1"))
                     (rule "add_literals" (formula "28") (term "0,1,1,0,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,1"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,1,1"))
                     (rule "mod_axiom" (formula "28") (term "1,0,0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,1,1"))
                     (rule "div_literals" (formula "28") (term "0,1,1,0,0,1,1,1"))
                     (rule "mul_literals" (formula "28") (term "1,1,0,0,1,1,1"))
                     (rule "add_zero_right" (formula "28") (term "1,0,0,1,1,1"))
                     (rule "add_literals" (formula "28") (term "0,0,1,1,1"))
                     (rule "div_literals" (formula "28") (term "0,1,1,1"))
                     (rule "mul_literals" (formula "28") (term "1,1,1"))
                     (rule "polySimp_addComm1" (formula "28") (term "1,1"))
                     (rule "add_literals" (formula "28") (term "0,1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "28"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                     (rule "mul_literals" (formula "8") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "29"))
                     (rule "mul_literals" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                     (rule "mul_literals" (formula "23") (term "1"))
                     (rule "expand_mulJint" (formula "5") (term "0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                     (rule "expand_moduloInteger" (formula "20") (term "0,0,0"))
                     (rule "replace_int_MIN" (formula "20") (term "0,0,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "replace_int_RANGE" (formula "20") (term "1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "mod_axiom" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "polyDiv_pullOut" (formula "20") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "20") (term "0,0,1,0,0"))
                     (rule "ifthenelse_false" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "expand_mulJint" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                     (rule "expand_divJint" (formula "1") (term "0,1,0,0,0"))
                     (rule "jdiv_axiom_inline" (formula "1") (term "0,0,1,0,0,0"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0,0,1,0,0,0"))
                     (rule "div_literals" (formula "1") (term "0,0,1,0,0,0"))
                     (rule "expand_divJint" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "jdiv_axiom_inline" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "div_literals" (formula "1") (term "1,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,2,0,1,0,0,1,0,0"))
                     (rule "qeq_literals" (formula "1") (term "0,0,1,0,0,1,0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "expand_divJint" (formula "18") (term "1,1,0"))
                     (rule "jdiv_axiom_inline" (formula "18") (term "0,1,1,0"))
                     (rule "div_literals" (formula "18") (term "1,0,1,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,0,2,0,1,1,0"))
                     (rule "qeq_literals" (formula "18") (term "0,0,1,1,0"))
                     (rule "ifthenelse_true" (formula "18") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "1,0"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "div_axiom" (formula "8") (term "0,1,1") (inst "quotient=quotient_0"))
                     (rule "equal_literals" (formula "8") (term "0"))
                     (rule "concrete_or_2" (formula "8"))
                     (rule "qeq_literals" (formula "8") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "8") (term "1"))
                     (rule "mul_literals" (formula "8") (term "1,1,1"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "1"))
                     (rule "add_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "13") (term "1"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "8"))
                     (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "11") (term "1"))
                     (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "2") (term "1"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "7") (term "1"))
                     (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "6") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "mul_literals" (formula "9") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                     (rule "mul_literals" (formula "25") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "add_literals" (formula "25") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "25") (term "1,1,0"))
                     (rule "greater_literals" (formula "25") (term "0,0"))
                     (rule "concrete_and_1" (formula "25") (term "0"))
                     (rule "leq_literals" (formula "25") (term "0"))
                     (rule "concrete_or_1" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0"))
                     (rule "add_zero_right" (formula "10") (term "0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "mul_literals" (formula "10") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "12"))
                     (rule "times_zero_1" (formula "10") (term "1,1,0"))
                     (rule "greater_literals" (formula "10") (term "0,0"))
                     (rule "concrete_and_1" (formula "10") (term "0"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "27"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "30"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "18"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "9") (ifseqformula "12"))
                     (rule "greater_literals" (formula "9") (term "0,0"))
                     (rule "concrete_impl_1" (formula "9") (term "0"))
                     (rule "mul_literals" (formula "9") (term "1,0"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                     (rule "concrete_and_2" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
                  (branch "CUT: self.wordsInUse = self.words.length FALSE"
                     (rule "concrete_or_2" (formula "29"))
                     (rule "inEqSimp_strengthen0" (formula "28") (ifseqformula "34"))
                     (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "28"))
                     (rule "concrete_impl_1" (formula "30"))
                     (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0"))
                     (rule "add_zero_right" (formula "34") (term "0,0"))
                     (rule "qeq_literals" (formula "34") (term "0"))
                     (rule "concrete_and_2" (formula "34"))
                     (rule "false_right" (formula "34"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "28"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "qeq_literals" (formula "8") (term "0"))
                     (rule "concrete_or_1" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                     (rule "mul_literals" (formula "26") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "add_literals" (formula "26") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "mul_literals" (formula "26") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "26"))
                     (rule "leq_literals" (formula "23") (term "0"))
                     (rule "concrete_or_1" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "32"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "27"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "32"))
                     (rule "mul_literals" (formula "25") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "25"))
                     (rule "leq_literals" (formula "22") (term "0"))
                     (rule "concrete_or_1" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "expand_moduloInteger" (formula "31") (term "1,0,0,1,1"))
                     (rule "replace_int_MIN" (formula "31") (term "0,1,0,0,1,1"))
                     (rule "replace_int_RANGE" (formula "31") (term "1,1,1,0,0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,0,0,1,1"))
                     (rule "add_literals" (formula "31") (term "0,1,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,1"))
                     (rule "add_literals" (formula "31") (term "0,0,0,1,1"))
                     (rule "mod_axiom" (formula "31") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,1"))
                     (rule "div_literals" (formula "31") (term "0,1,1,0,0,1,1"))
                     (rule "times_zero_2" (formula "31") (term "1,1,0,0,1,1"))
                     (rule "add_zero_right" (formula "31") (term "1,0,0,1,1"))
                     (rule "add_literals" (formula "31") (term "0,0,1,1"))
                     (rule "div_literals" (formula "31") (term "0,1,1"))
                     (rule "mul_literals" (formula "31") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "31") (term "1"))
                     (rule "add_literals" (formula "31") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "31"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "32"))
                     (rule "mul_literals" (formula "27") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "0,0"))
                     (rule "add_zero_left" (formula "27") (term "0"))
                     (rule "expand_moduloInteger" (formula "7") (term "1,1"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,1,1"))
                     (rule "replace_int_RANGE" (formula "7") (term "1,1,1,1"))
                     (rule "add_literals" (formula "7") (term "0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "7") (term "1"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,1"))
                     (rule "add_literals" (formula "7") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "mod_axiom" (formula "7") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                     (rule "div_literals" (formula "7") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "7") (term "1,1,0"))
                     (rule "add_zero_right" (formula "7") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "expand_moduloInteger" (formula "5") (term "0"))
                     (rule "replace_int_MIN" (formula "5") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                     (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                     (rule "add_literals" (formula "5") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0"))
                     (rule "mod_axiom" (formula "5") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                     (rule "polyDiv_pullOut" (formula "5") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "5") (term "0,0,1,1"))
                     (rule "ifthenelse_false" (formula "5") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,1"))
                     (rule "mul_literals" (formula "5") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,1"))
                     (rule "add_literals" (formula "5") (term "0,0,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "5") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                     (rule "mul_literals" (formula "5") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                     (rule "add_literals" (formula "5") (term "0,0,1"))
                     (rule "expand_moduloInteger" (formula "21") (term "0"))
                     (rule "replace_int_RANGE" (formula "21") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "0,1,0"))
                     (rule "mod_axiom" (formula "21") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                     (rule "div_literals" (formula "21") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "21") (term "1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "1,0"))
                     (rule "add_literals" (formula "21") (term "0"))
                     (rule "qeq_literals" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "expand_addJint" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "expand_moduloInteger" (formula "32") (term "1,0,0,1,1,1"))
                     (rule "replace_int_RANGE" (formula "32") (term "1,1,1,0,0,1,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,1,0,0,1,1,1"))
                     (rule "replace_int_MIN" (formula "32") (term "0,1,0,0,1,1,1"))
                     (rule "add_literals" (formula "32") (term "0,1,1,0,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1,1"))
                     (rule "add_literals" (formula "32") (term "0,0,0,1,1,1"))
                     (rule "mod_axiom" (formula "32") (term "1,0,0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,1,1"))
                     (rule "div_literals" (formula "32") (term "0,1,1,0,0,1,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,1,0,0,1,1,1"))
                     (rule "add_zero_right" (formula "32") (term "1,0,0,1,1,1"))
                     (rule "add_literals" (formula "32") (term "0,0,1,1,1"))
                     (rule "div_literals" (formula "32") (term "0,1,1,1"))
                     (rule "mul_literals" (formula "32") (term "1,1,1"))
                     (rule "polySimp_addComm1" (formula "32") (term "1,1"))
                     (rule "add_literals" (formula "32") (term "0,1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "32"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                     (rule "mul_literals" (formula "9") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "33"))
                     (rule "mul_literals" (formula "25") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "expand_moduloInteger" (formula "21") (term "0"))
                     (rule "replace_int_RANGE" (formula "21") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "21") (term "0,0"))
                     (rule "mod_axiom" (formula "21") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=moduloInt(add(Z(1(#)),
              moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(add(Z(1(#)),
                              moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "21") (term "0,0"))
                     (rule "concrete_or_2" (formula "21") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                     (rule "concrete_or_2" (formula "21"))
                     (rule "expand_moduloInteger" (formula "3") (term "1,0"))
                     (rule "replace_int_MIN" (formula "3") (term "0,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0"))
                     (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0"))
                     (rule "add_literals" (formula "3") (term "0,1,1,0"))
                     (rule "mod_axiom" (formula "3") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                     (rule "div_literals" (formula "3") (term "0,1,1,1,0"))
                     (rule "times_zero_2" (formula "3") (term "1,1,1,0"))
                     (rule "add_zero_right" (formula "3") (term "1,1,0"))
                     (rule "add_literals" (formula "3") (term "1,0"))
                     (rule "expand_moduloInteger" (formula "1") (term "0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "polyMod_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                    Z(4(6(#))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "mod_axiom" (formula "1") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                     (rule "equal_literals" (formula "1") (term "0,0,0"))
                     (rule "ifthenelse_false" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "expand_divJint" (formula "20") (term "1,1,0"))
                     (rule "jdiv_axiom_inline" (formula "20") (term "0,1,1,0"))
                     (rule "div_literals" (formula "20") (term "1,0,1,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,2,0,1,1,0"))
                     (rule "qeq_literals" (formula "20") (term "0,0,1,1,0"))
                     (rule "ifthenelse_true" (formula "20") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "1,0"))
                     (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "24"))
                     (rule "leq_literals" (formula "20") (term "0"))
                     (rule "concrete_or_1" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "div_axiom" (formula "12") (term "0,1,1") (inst "quotient=quotient_0"))
                     (rule "equal_literals" (formula "12") (term "0"))
                     (rule "concrete_or_2" (formula "12"))
                     (rule "qeq_literals" (formula "12") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "12") (term "1"))
                     (rule "mul_literals" (formula "12") (term "1,1,1"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                     (rule "add_literals" (formula "14") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "1"))
                     (rule "add_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "6") (term "1"))
                     (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "15") (term "1"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "10") (term "1"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "11") (term "1"))
                     (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "7") (term "1"))
                     (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "12"))
                     (rule "polySimp_addComm1" (formula "9") (term "1"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1") (ifseqformula "12"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1"))
                     (rule "mul_literals" (formula "13") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                     (rule "mul_literals" (formula "14") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "mul_literals" (formula "8") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                     (rule "concrete_or_1" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                     (rule "mul_literals" (formula "14") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "mul_literals" (formula "14") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "14") (term "1,1,0"))
                     (rule "greater_literals" (formula "14") (term "0,0"))
                     (rule "concrete_and_1" (formula "14") (term "0"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (rule "concrete_or_1" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "31"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                     (rule "mul_literals" (formula "14") (term "0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "34"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                     (rule "mul_literals" (formula "14") (term "0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "35"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                     (rule "mul_literals" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "30"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "8"))
                     (rule "mul_literals" (formula "23") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                     (rule "mul_literals" (formula "23") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "23") (term "1,1,0"))
                     (rule "greater_literals" (formula "23") (term "0,0"))
                     (rule "concrete_and_1" (formula "23") (term "0"))
                     (rule "leq_literals" (formula "23") (term "0"))
                     (rule "concrete_or_1" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "13") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "13") (term "1,1,0"))
                     (rule "greater_literals" (formula "13") (term "0,0"))
                     (rule "concrete_impl_1" (formula "13") (term "0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                     (rule "concrete_and_2" (formula "13"))
                     (rule "closeFalse" (formula "13"))
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "19"))
               (branch "Case 1"
                  (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                  (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                  (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                  (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                  (rule "expand_inInt" (formula "4"))
                  (rule "expand_inLong" (formula "16") (term "1,0"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "replace_int_MIN" (formula "4") (term "0,1"))
                  (rule "replace_int_MAX" (formula "4") (term "1,0"))
                  (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                  (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "4"))
                  (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1"))
                  (rule "translateJavaAddInt" (formula "14") (term "1"))
                  (rule "translateJavaMulInt" (formula "15") (term "1"))
                  (rule "translateJavaDivInt" (formula "14") (term "0,1"))
                  (rule "translateJavaDivInt" (formula "15") (term "0,1,1"))
                  (rule "translateJavaAddInt" (formula "15") (term "1,1"))
                  (rule "inEqSimp_ltRight" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltRight" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "7"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                  (rule "times_zero_1" (formula "13") (term "0,0"))
                  (rule "add_zero_left" (formula "13") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
                  (rule "times_zero_1" (formula "14") (term "0,0"))
                  (rule "add_zero_left" (formula "14") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                  (rule "times_zero_1" (formula "15") (term "0,0"))
                  (rule "add_zero_left" (formula "15") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "16") (term "0,0"))
                  (rule "add_zero_left" (formula "16") (term "0"))
                  (rule "expand_divJint" (formula "13") (term "0"))
                  (rule "jdiv_axiom_inline" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0"))
                  (rule "ifthenelse_true" (formula "13") (term "0,0"))
                  (rule "div_literals" (formula "13") (term "0,0"))
                  (rule "expand_subJint" (formula "14") (term "0,2,0,0,1"))
                  (rule "polySimp_elimSub" (formula "14") (term "0,0,2,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,2,0,0,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,1"))
                  (rule "expand_addJint" (formula "22") (term "1"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "22"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "23"))
                  (rule "times_zero_1" (formula "19") (term "0,0"))
                  (rule "add_zero_left" (formula "19") (term "0"))
                  (rule "expand_divJint" (formula "25") (term "0,1,1"))
                  (rule "jdiv_axiom_inline" (formula "25") (term "0,0,1,1"))
                  (rule "mul_literals" (formula "25") (term "0,0,2,0,0,1,1"))
                  (rule "qeq_literals" (formula "25") (term "0,0,0,1,1"))
                  (rule "ifthenelse_true" (formula "25") (term "0,0,1,1"))
                  (rule "div_literals" (formula "25") (term "0,0,1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "26"))
                  (rule "times_zero_1" (formula "18") (term "0,0"))
                  (rule "add_zero_left" (formula "18") (term "0"))
                  (rule "expand_addJint" (formula "8") (term "1"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "23"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "27"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "29"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "32") (term "0"))
                  (rule "nnf_imp2or" (formula "29") (term "0,1"))
                  (rule "expand_addJint" (formula "5") (term "1"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                  (rule "expand_addJint" (formula "5") (term "0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                  (rule "expand_addJint" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "expand_mulJint" (formula "2") (term "0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "expand_addJint" (formula "2") (term "1"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                  (rule "expand_addJint" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "expand_addJint" (formula "18") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,1,0"))
                  (rule "expand_moduloInteger" (formula "16") (term "0"))
                  (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "16") (term "1,1,0"))
                  (rule "replace_int_MIN" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                  (rule "mod_axiom" (formula "16") (term "0,1,0"))
                  (rule "div_literals" (formula "16") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                  (rule "times_zero_2" (formula "16") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "16") (term "0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "16"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (rule "concrete_or_1" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "expand_moduloInteger" (formula "16") (term "0,2,0,0,1"))
                  (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,0,2,0,0,1"))
                  (rule "replace_int_RANGE" (formula "16") (term "1,1,0,2,0,0,1"))
                  (rule "replace_int_MIN" (formula "16") (term "0,0,2,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,2,0,0,1"))
                  (rule "add_literals" (formula "16") (term "0,0,1,0,2,0,0,1"))
                  (rule "mod_axiom" (formula "16") (term "1,0,2,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,2,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,2,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,2,0,0,1"))
                  (rule "add_literals" (formula "16") (term "0,0,0,2,0,0,1"))
                  (rule "expand_divJint" (formula "25") (term "1,0,1"))
                  (rule "jdiv_axiom_inline" (formula "25") (term "0,1,0,1"))
                  (rule "mul_literals" (formula "25") (term "0,0,2,0,1,0,1"))
                  (rule "qeq_literals" (formula "25") (term "0,0,1,0,1"))
                  (rule "ifthenelse_true" (formula "25") (term "0,1,0,1"))
                  (rule "div_literals" (formula "25") (term "0,1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "25"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "26"))
                  (rule "times_zero_1" (formula "22") (term "0,0"))
                  (rule "add_zero_left" (formula "22") (term "0"))
                  (rule "expand_moduloInteger" (formula "4") (term "0"))
                  (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "4") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                  (rule "add_literals" (formula "4") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "mod_axiom" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "4") (term "0,0,0"))
                  (rule "ifthenelse_false" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0"))
                  (rule "mul_literals" (formula "4") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "expand_moduloInteger" (formula "21") (term "0"))
                  (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "21") (term "0,0"))
                  (rule "replace_int_RANGE" (formula "21") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,1,0"))
                  (rule "mod_axiom" (formula "21") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polyDiv_pullOut" (formula "21") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,2,0,0"))
                  (rule "equal_literals" (formula "21") (term "0,0,0"))
                  (rule "ifthenelse_false" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0"))
                  (rule "mul_literals" (formula "21") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "expand_addJint" (formula "28") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "28"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "29"))
                  (rule "times_zero_1" (formula "21") (term "0,0"))
                  (rule "add_zero_left" (formula "21") (term "0"))
                  (rule "expand_moduloInteger" (formula "3") (term "0,1,0"))
                  (rule "replace_int_MIN" (formula "3") (term "0,0,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,0"))
                  (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,1,0,1,0"))
                  (rule "mod_axiom" (formula "3") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0"))
                  (rule "div_literals" (formula "3") (term "0,1,1,0,1,0"))
                  (rule "times_zero_2" (formula "3") (term "1,1,0,1,0"))
                  (rule "add_zero_right" (formula "3") (term "1,0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,1,0"))
                  (rule "expand_addJint" (formula "3") (term "1"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                  (rule "expand_mulJint" (formula "20") (term "0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                  (rule "expand_moduloInteger" (formula "11") (term "1"))
                  (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "11") (term "1,1,1"))
                  (rule "replace_int_MIN" (formula "11") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1"))
                  (rule "mod_axiom" (formula "11") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "11") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "11") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "11") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "29"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                  (rule "mul_literals" (formula "12") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                  (rule "concrete_or_2" (formula "12") (term "0"))
                  (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_2" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "33"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                  (rule "expand_moduloInteger" (formula "8") (term "1"))
                  (rule "replace_int_MIN" (formula "8") (term "0,1"))
                  (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "8") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,1,1"))
                  (rule "add_literals" (formula "8") (term "0,0,1,1"))
                  (rule "mod_axiom" (formula "8") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "8") (term "1"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                  (rule "add_literals" (formula "8") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "8") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "8") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "8") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "8") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "8") (term "1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                  (rule "add_literals" (formula "8") (term "0,0,1"))
                  (rule "expand_divJint" (formula "8") (term "1,0,0"))
                  (rule "jdiv_axiom_inline" (formula "8") (term "0,1,0,0"))
                  (rule "qeq_literals" (formula "8") (term "0,0,1,0,0"))
                  (rule "ifthenelse_true" (formula "8") (term "0,1,0,0"))
                  (rule "div_literals" (formula "8") (term "0,1,0,0"))
                  (rule "expand_mulJint" (formula "5") (term "0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                  (rule "expand_moduloInteger" (formula "5") (term "1"))
                  (rule "replace_int_MIN" (formula "5") (term "0,1"))
                  (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "5") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,1,1"))
                  (rule "add_literals" (formula "5") (term "0,0,1,1"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "mod_axiom" (formula "5") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "polyDiv_pullOut" (formula "5") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "5") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "5") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "5") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "5") (term "0,0,0,1,1,1"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                  (rule "add_literals" (formula "5") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "6") (term "0"))
                  (rule "replace_int_MIN" (formula "6") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                  (rule "add_literals" (formula "6") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                  (rule "mod_axiom" (formula "6") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), wordIndex),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                  (rule "concrete_or_2" (formula "6") (term "0"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_2" (formula "6"))
                  (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0"))
                  (rule "equal_literals" (formula "6") (term "0,0"))
                  (rule "ifthenelse_false" (formula "6") (term "0"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
                  (rule "add_literals" (formula "6") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "add_zero_left" (formula "6") (term "0"))
                  (rule "inEqSimp_invertInEq0" (formula "6"))
                  (rule "times_zero_2" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "expand_moduloInteger" (formula "2") (term "0"))
                  (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                  (rule "mod_axiom" (formula "2") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                  (rule "expand_mulJint" (formula "20") (term "0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                  (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1"))
                  (rule "expand_moduloInteger" (formula "30") (term "1"))
                  (rule "replace_int_RANGE" (formula "30") (term "1,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,1"))
                  (rule "replace_int_MIN" (formula "30") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                  (rule "add_literals" (formula "30") (term "0,0,1,1"))
                  (rule "mod_axiom" (formula "30") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "30") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,2,0,1,1"))
                  (rule "equal_literals" (formula "30") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "30") (term "0,1,1"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "30") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "30") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "1"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "30"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "31"))
                  (rule "times_zero_1" (formula "27") (term "0,0"))
                  (rule "add_zero_left" (formula "27") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "expand_moduloInteger" (formula "7") (term "0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,0"))
                  (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "7") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                  (rule "add_literals" (formula "7") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                  (rule "mod_axiom" (formula "7") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                  (rule "mul_literals" (formula "7") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                  (rule "polyDiv_pullOut" (formula "7") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "equal_literals" (formula "7") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "7") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "7") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                  (rule "mul_literals" (formula "7") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                  (rule "add_literals" (formula "7") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "26") (term "0"))
                  (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "26") (term "1,1,0"))
                  (rule "replace_int_MIN" (formula "26") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,1,0"))
                  (rule "mod_axiom" (formula "26") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polyDiv_pullOut" (formula "26") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,2,0,0"))
                  (rule "equal_literals" (formula "26") (term "0,0,0"))
                  (rule "ifthenelse_false" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0"))
                  (rule "polySimp_addComm0" (formula "26") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0"))
                  (rule "mul_literals" (formula "26") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "expand_divJint" (formula "4") (term "1,1"))
                  (rule "jdiv_axiom_inline" (formula "4") (term "0,1,1"))
                  (rule "mul_literals" (formula "4") (term "0,0,2,0,1,1"))
                  (rule "qeq_literals" (formula "4") (term "0,0,1,1"))
                  (rule "ifthenelse_true" (formula "4") (term "0,1,1"))
                  (rule "div_literals" (formula "4") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "expand_divJint" (formula "4") (term "1,0,0,0"))
                  (rule "jdiv_axiom_inline" (formula "4") (term "0,1,0,0,0"))
                  (rule "qeq_literals" (formula "4") (term "0,0,1,0,0,0"))
                  (rule "ifthenelse_true" (formula "4") (term "0,1,0,0,0"))
                  (rule "div_literals" (formula "4") (term "0,1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "expand_divJint" (formula "25") (term "1,1"))
                  (rule "jdiv_axiom_inline" (formula "25") (term "0,1,1"))
                  (rule "mul_literals" (formula "25") (term "0,0,2,0,1,1"))
                  (rule "qeq_literals" (formula "25") (term "0,0,1,1"))
                  (rule "ifthenelse_true" (formula "25") (term "0,1,1"))
                  (rule "div_literals" (formula "25") (term "0,1,1"))
                  (rule "expand_divJint" (formula "25") (term "1,0,0,0"))
                  (rule "jdiv_axiom_inline" (formula "25") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,0,2,0,1,0,0,0"))
                  (rule "qeq_literals" (formula "25") (term "0,0,1,0,0,0"))
                  (rule "ifthenelse_true" (formula "25") (term "0,1,0,0,0"))
                  (rule "div_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "expand_moduloInteger" (formula "31") (term "1,0,1,1"))
                  (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,0,1,1"))
                  (rule "replace_int_RANGE" (formula "31") (term "1,1,1,0,1,1"))
                  (rule "replace_int_MIN" (formula "31") (term "0,1,0,1,1"))
                  (rule "add_literals" (formula "31") (term "0,1,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,1,1"))
                  (rule "add_literals" (formula "31") (term "0,0,1,1"))
                  (rule "mod_axiom" (formula "31") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1"))
                  (rule "div_literals" (formula "31") (term "0,1,1,0,1,1"))
                  (rule "times_zero_2" (formula "31") (term "1,1,0,1,1"))
                  (rule "add_zero_right" (formula "31") (term "1,0,1,1"))
                  (rule "add_literals" (formula "31") (term "0,1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "31"))
                  (rule "times_zero_1" (formula "24") (term "0,0"))
                  (rule "add_zero_left" (formula "24") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "32"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                  (rule "expand_mulJint" (formula "6") (term "0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                  (rule "expand_moduloInteger" (formula "6") (term "1"))
                  (rule "replace_int_MIN" (formula "6") (term "0,1"))
                  (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "6") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,1,1"))
                  (rule "add_literals" (formula "6") (term "0,0,1,1"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "mod_axiom" (formula "6") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,1,1"))
                  (rule "equal_literals" (formula "6") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "6") (term "0,1,1"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "6") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                  (rule "mul_literals" (formula "6") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "6") (term "1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                  (rule "add_literals" (formula "6") (term "0,0,1"))
                  (rule "expand_moduloInteger" (formula "24") (term "1,0"))
                  (rule "replace_int_MIN" (formula "24") (term "0,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,1,0"))
                  (rule "replace_int_RANGE" (formula "24") (term "1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,1,1,0"))
                  (rule "add_literals" (formula "24") (term "0,0,1,1,0"))
                  (rule "mod_axiom" (formula "24") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                  (rule "add_literals" (formula "24") (term "0,0,1,0"))
                  (rule "polyDiv_pullOut" (formula "24") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,2,0,1,1,0"))
                  (rule "equal_literals" (formula "24") (term "0,0,1,1,0"))
                  (rule "ifthenelse_false" (formula "24") (term "0,1,1,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,1,1,1,1,0"))
                  (rule "add_literals" (formula "24") (term "0,0,1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                  (rule "add_literals" (formula "24") (term "0,0,1,0"))
                  (rule "expand_mulJint" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                  (rule "expand_moduloInteger" (formula "3") (term "1"))
                  (rule "replace_int_MIN" (formula "3") (term "0,1"))
                  (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1"))
                  (rule "replace_int_RANGE" (formula "3") (term "1,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1,1"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "mod_axiom" (formula "3") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,1,1"))
                  (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                  (rule "ifthenelse_false" (formula "3") (term "0,1,1"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "expand_addJint" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                  (rule "expand_moduloInteger" (formula "8") (term "1,0,0"))
                  (rule "replace_int_MIN" (formula "8") (term "0,1,0,0"))
                  (rule "replace_int_HALFRANGE" (formula "8") (term "0,0,1,1,0,0"))
                  (rule "replace_int_RANGE" (formula "8") (term "1,1,1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "mod_axiom" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "div_literals" (formula "8") (term "0,1,1,0,0"))
                  (rule "times_zero_2" (formula "8") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "expand_moduloInteger" (formula "10") (term "1,0,1,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1,0,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,0,1,0"))
                  (rule "replace_int_RANGE" (formula "10") (term "1,1,1,0,1,0"))
                  (rule "add_literals" (formula "10") (term "0,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0"))
                  (rule "mod_axiom" (formula "10") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0"))
                  (rule "div_literals" (formula "10") (term "0,1,1,0,1,0"))
                  (rule "times_zero_2" (formula "10") (term "1,1,0,1,0"))
                  (rule "add_zero_right" (formula "10") (term "1,0,1,0"))
                  (rule "add_literals" (formula "10") (term "0,1,0"))
                  (rule "expand_moduloInteger" (formula "5") (term "0"))
                  (rule "replace_int_RANGE" (formula "5") (term "1,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "5") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "mod_axiom" (formula "5") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0,1"))
                  (rule "mul_literals" (formula "5") (term "0,0,0,1"))
                  (rule "commute_and" (formula "33") (term "1,0"))
                  (rule "expand_addJint" (formula "2") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                  (rule "expand_moduloInteger" (formula "21") (term "0,0,0"))
                  (rule "replace_int_MIN" (formula "21") (term "0,0,0,0"))
                  (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,0,0"))
                  (rule "replace_int_RANGE" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "mod_axiom" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polyDiv_pullOut" (formula "21") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,2,0,1,0,0"))
                  (rule "equal_literals" (formula "21") (term "0,0,1,0,0"))
                  (rule "ifthenelse_false" (formula "21") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "arrayLengthNotNegative" (formula "29") (term "1,0"))
                  (rule "arrayLengthIsAnInt" (formula "32") (term "0"))
                  (rule "expand_inInt" (formula "32"))
                  (rule "replace_int_MAX" (formula "32") (term "1,0"))
                  (rule "replace_int_MIN" (formula "32") (term "0,1"))
                  (rule "andLeft" (formula "32"))
                  (rule "inEqSimp_commuteLeq" (formula "33"))
                  (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "25"))
                  (rule "leq_literals" (formula "33") (term "0"))
                  (rule "concrete_or_1" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "32"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                  (rule "cut_direct" (formula "21") (term "0"))
                  (branch "CUT: self.wordsInUse = 0 TRUE"
                     (rule "concrete_or_1" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "applyEq" (formula "31") (term "1,1,0,0,0,1") (ifseqformula "21"))
                     (rule "add_zero_right" (formula "31") (term "1,0,0,0,1"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "21"))
                     (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                     (rule "times_zero_2" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "applyEq" (formula "32") (term "0") (ifseqformula "21"))
                     (rule "inEqSimp_homoInEq0" (formula "32"))
                     (rule "times_zero_2" (formula "32") (term "1,0"))
                     (rule "add_zero_right" (formula "32") (term "0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "21"))
                     (rule "qeq_literals" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                     (rule "inEqSimp_homoInEq1" (formula "14"))
                     (rule "times_zero_2" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "21"))
                     (rule "eqSymm" (formula "29") (term "0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "21"))
                     (rule "inEqSimp_commuteLeq" (formula "28"))
                     (rule "applyEq" (formula "28") (term "0,2,0,1") (ifseqformula "21"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0"))
                     (rule "mul_literals" (formula "29") (term "1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "inEqSimp_subsumption5" (formula "11") (ifseqformula "14"))
                     (rule "eq_and" (formula "11") (term "0,0"))
                     (rule "greater_literals" (formula "11") (term "0,0"))
                     (rule "concrete_and_1" (formula "11") (term "0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                     (rule "concrete_or_1" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "expand_moduloInteger" (formula "12") (term "1,1"))
                     (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,1"))
                     (rule "replace_int_RANGE" (formula "12") (term "1,1,1,1"))
                     (rule "replace_int_MIN" (formula "12") (term "0,1,1"))
                     (rule "add_literals" (formula "12") (term "0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "12") (term "1"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "mod_axiom" (formula "12") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                     (rule "div_literals" (formula "12") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "12") (term "1,1,0"))
                     (rule "add_zero_right" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "expand_moduloInteger" (formula "26") (term "1,1"))
                     (rule "replace_int_MIN" (formula "26") (term "0,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,1,1"))
                     (rule "replace_int_RANGE" (formula "26") (term "1,1,1,1"))
                     (rule "add_literals" (formula "26") (term "0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "26") (term "1"))
                     (rule "add_literals" (formula "26") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "mod_axiom" (formula "26") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                     (rule "div_literals" (formula "26") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "26") (term "1,1,0"))
                     (rule "add_zero_right" (formula "26") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "add_literals" (formula "26") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "26") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "26") (term "0,0"))
                     (rule "concrete_or_2" (formula "26") (term "0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0"))
                     (rule "qeq_literals" (formula "26") (term "0"))
                     (rule "concrete_or_2" (formula "26"))
                     (rule "expand_moduloInteger" (formula "7") (term "0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0"))
                     (rule "replace_int_RANGE" (formula "7") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                     (rule "add_literals" (formula "7") (term "0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "7") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "7") (term "0,0,1,0,1"))
                     (rule "ifthenelse_false" (formula "7") (term "0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                     (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,0,1"))
                     (rule "add_literals" (formula "7") (term "0,0,1,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,1"))
                     (rule "add_literals" (formula "7") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "7") (term "0,0,1"))
                     (rule "expand_moduloInteger" (formula "4") (term "1,0,1"))
                     (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,1"))
                     (rule "replace_int_MIN" (formula "4") (term "0,1,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,1"))
                     (rule "add_literals" (formula "4") (term "0,1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "mod_axiom" (formula "4") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                     (rule "div_literals" (formula "4") (term "0,1,1,0"))
                     (rule "times_zero_2" (formula "4") (term "1,1,0"))
                     (rule "add_zero_right" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "expand_moduloInteger" (formula "30") (term "1,1"))
                     (rule "replace_int_RANGE" (formula "30") (term "1,1,1,1"))
                     (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,1,1"))
                     (rule "replace_int_MIN" (formula "30") (term "0,1,1"))
                     (rule "add_literals" (formula "30") (term "0,1,1,1"))
                     (rule "mod_axiom" (formula "30") (term "1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1"))
                     (rule "div_literals" (formula "30") (term "0,1,1,1,1"))
                     (rule "times_zero_2" (formula "30") (term "1,1,1,1"))
                     (rule "add_zero_right" (formula "30") (term "1,1,1"))
                     (rule "add_literals" (formula "30") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "30"))
                     (rule "times_zero_1" (formula "25") (term "0,0"))
                     (rule "add_zero_left" (formula "25") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "31"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                     (rule "expand_mulJint" (formula "25") (term "0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                     (rule "expand_moduloInteger" (formula "10") (term "1,0"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,0"))
                     (rule "replace_int_RANGE" (formula "10") (term "1,1,1,0"))
                     (rule "add_literals" (formula "10") (term "0,1,1,0"))
                     (rule "mod_axiom" (formula "10") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                     (rule "div_literals" (formula "10") (term "0,1,1,1,0"))
                     (rule "times_zero_2" (formula "10") (term "1,1,1,0"))
                     (rule "add_zero_right" (formula "10") (term "1,1,0"))
                     (rule "add_literals" (formula "10") (term "1,0"))
                     (rule "expand_moduloInteger" (formula "6") (term "0,0,0"))
                     (rule "replace_int_RANGE" (formula "6") (term "1,1,0,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,0,0"))
                     (rule "replace_int_MIN" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                     (rule "mod_axiom" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polyDiv_pullOut" (formula "6") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,1,0,0"))
                     (rule "equal_literals" (formula "6") (term "0,0,1,0,0"))
                     (rule "ifthenelse_false" (formula "6") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "expand_moduloInteger" (formula "23") (term "1,0,0,1,1,0"))
                     (rule "replace_int_MIN" (formula "23") (term "0,1,0,0,1,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "replace_int_RANGE" (formula "23") (term "1,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "23") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0"))
                     (rule "div_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "23") (term "1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "23") (term "1,0,0,1,1,0"))
                     (rule "add_literals" (formula "23") (term "0,0,1,1,0"))
                     (rule "div_literals" (formula "23") (term "0,1,1,0"))
                     (rule "mul_literals" (formula "23") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "1,0"))
                     (rule "add_literals" (formula "23") (term "0,1,0"))
                     (rule "div_axiom" (formula "8") (term "0,1,1") (inst "quotient=quotient_0"))
                     (rule "equal_literals" (formula "8") (term "0"))
                     (rule "concrete_or_2" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1,1,1,1"))
                     (rule "qeq_literals" (formula "8") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "8") (term "1"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
                     (rule "add_literals" (formula "10") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "1"))
                     (rule "add_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "15") (term "1"))
                     (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "6") (term "1"))
                     (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "11") (term "1"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "8"))
                     (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "13") (term "1"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "14") (term "1"))
                     (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "8"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                     (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "8"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "mul_literals" (formula "9") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                     (rule "mul_literals" (formula "16") (term "0,1"))
                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "32"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "15"))
                     (rule "times_zero_1" (formula "20") (term "0,0"))
                     (rule "add_zero_left" (formula "20") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "20") (term "1,1,0"))
                     (rule "greater_literals" (formula "20") (term "0,0"))
                     (rule "concrete_and_1" (formula "20") (term "0"))
                     (rule "leq_literals" (formula "20") (term "0"))
                     (rule "concrete_or_1" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "add_zero_right" (formula "13") (term "0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                     (rule "mul_literals" (formula "13") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "11"))
                     (rule "greater_literals" (formula "13") (term "0,0"))
                     (rule "concrete_and_1" (formula "13") (term "0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "leq_literals" (formula "13") (term "0"))
                     (rule "concrete_or_1" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "21"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "9") (ifseqformula "12"))
                     (rule "greater_literals" (formula "9") (term "0,0"))
                     (rule "concrete_impl_1" (formula "9") (term "0"))
                     (rule "times_zero_1" (formula "9") (term "1,0"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                     (rule "concrete_and_2" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
                  (branch "CUT: self.wordsInUse = 0 FALSE"
                     (rule "concrete_or_2" (formula "21"))
                     (rule "notLeft" (formula "21"))
                     (rule "inEqSimp_strengthen1" (formula "27") (ifseqformula "36"))
                     (rule "add_zero_right" (formula "27") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "27"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0"))
                     (rule "leq_literals" (formula "36") (term "0"))
                     (rule "concrete_and_2" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "31"))
                     (rule "mul_literals" (formula "27") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0"))
                     (rule "qeq_literals" (formula "26") (term "0"))
                     (rule "concrete_or_1" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                     (rule "mul_literals" (formula "27") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                     (rule "mul_literals" (formula "27") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "27"))
                     (rule "leq_literals" (formula "25") (term "0"))
                     (rule "concrete_or_1" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                     (rule "mul_literals" (formula "26") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "mul_literals" (formula "26") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "26"))
                     (rule "leq_literals" (formula "19") (term "0"))
                     (rule "concrete_or_1" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "33"))
                     (rule "mul_literals" (formula "26") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "mul_literals" (formula "26") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "26"))
                     (rule "leq_literals" (formula "23") (term "0"))
                     (rule "concrete_or_1" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cut_direct" (formula "29") (term "0"))
                     (branch "CUT: self.wordsInUse = self.words.length TRUE"
                        (rule "concrete_or_1" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "29"))
                        (rule "applyEq" (formula "30") (term "1,1,0,0,0,1") (ifseqformula "29"))
                        (rule "applyEq" (formula "35") (term "1,0,0,1,0,2,0") (ifseqformula "29"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,2,0"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
                        (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "qeq_literals" (formula "30") (term "0"))
                        (rule "concrete_impl_2" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "28"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq0" (formula "26"))
                        (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,0"))
                        (rule "times_zero_1" (formula "26") (term "0"))
                        (rule "qeq_literals" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "26"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,2,0"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "27"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "27"))
                        (rule "mul_literals" (formula "25") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "expand_moduloInteger" (formula "27") (term "1,0,0,1,1"))
                        (rule "replace_int_MIN" (formula "27") (term "0,1,0,0,1,1"))
                        (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,1,0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "27") (term "1,1,1,0,0,1,1"))
                        (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,1"))
                        (rule "mod_axiom" (formula "27") (term "1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,1"))
                        (rule "div_literals" (formula "27") (term "0,1,1,0,0,1,1"))
                        (rule "times_zero_2" (formula "27") (term "1,1,0,0,1,1"))
                        (rule "add_zero_right" (formula "27") (term "1,0,0,1,1"))
                        (rule "add_literals" (formula "27") (term "0,0,1,1"))
                        (rule "div_literals" (formula "27") (term "0,1,1"))
                        (rule "mul_literals" (formula "27") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "27") (term "1"))
                        (rule "add_literals" (formula "27") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "27"))
                        (rule "mul_literals" (formula "25") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                        (rule "add_literals" (formula "25") (term "0,0"))
                        (rule "add_zero_left" (formula "25") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "28"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                        (rule "mul_literals" (formula "12") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                        (rule "expand_moduloInteger" (formula "14") (term "1,1"))
                        (rule "replace_int_MIN" (formula "14") (term "0,1,1"))
                        (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,1,1"))
                        (rule "replace_int_RANGE" (formula "14") (term "1,1,1,1"))
                        (rule "add_literals" (formula "14") (term "0,1,1,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "mod_axiom" (formula "14") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                        (rule "div_literals" (formula "14") (term "0,1,1,0"))
                        (rule "times_zero_2" (formula "14") (term "1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "expand_moduloInteger" (formula "7") (term "0"))
                        (rule "replace_int_MIN" (formula "7") (term "0,0"))
                        (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0"))
                        (rule "replace_int_RANGE" (formula "7") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                        (rule "add_literals" (formula "7") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "7") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "7") (term "0,0,1,0,1"))
                        (rule "ifthenelse_false" (formula "7") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1"))
                        (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                        (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,0,1"))
                        (rule "add_literals" (formula "7") (term "0,0,1,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,1"))
                        (rule "add_literals" (formula "7") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "7") (term "0,0,1"))
                        (rule "expand_moduloInteger" (formula "4") (term "1,0,0,1,1"))
                        (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,0,1,1"))
                        (rule "replace_int_MIN" (formula "4") (term "0,1,0,0,1,1"))
                        (rule "add_literals" (formula "4") (term "0,1,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1"))
                        (rule "add_literals" (formula "4") (term "0,0,0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "mod_axiom" (formula "4") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "div_literals" (formula "4") (term "0,1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "4") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "4") (term "0,0,1,0"))
                        (rule "div_literals" (formula "4") (term "0,1,0"))
                        (rule "mul_literals" (formula "4") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "expand_moduloInteger" (formula "31") (term "1,1"))
                        (rule "replace_int_RANGE" (formula "31") (term "1,1,1,1"))
                        (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,1"))
                        (rule "replace_int_MIN" (formula "31") (term "0,1,1"))
                        (rule "add_literals" (formula "31") (term "0,1,1,1"))
                        (rule "mod_axiom" (formula "31") (term "1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1"))
                        (rule "div_literals" (formula "31") (term "0,1,1,1,1"))
                        (rule "mul_literals" (formula "31") (term "1,1,1,1"))
                        (rule "add_zero_right" (formula "31") (term "1,1,1"))
                        (rule "add_literals" (formula "31") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "31"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                        (rule "mul_literals" (formula "13") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "32"))
                        (rule "mul_literals" (formula "28") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                        (rule "mul_literals" (formula "28") (term "1"))
                        (rule "expand_moduloInteger" (formula "10") (term "1,0"))
                        (rule "replace_int_MIN" (formula "10") (term "0,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,0"))
                        (rule "replace_int_RANGE" (formula "10") (term "1,1,1,0"))
                        (rule "add_literals" (formula "10") (term "0,1,1,0"))
                        (rule "mod_axiom" (formula "10") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                        (rule "div_literals" (formula "10") (term "0,1,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0"))
                        (rule "add_literals" (formula "10") (term "1,0"))
                        (rule "expand_moduloInteger" (formula "6") (term "1,0,0,0,0"))
                        (rule "replace_int_MIN" (formula "6") (term "0,1,0,0,0,0"))
                        (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,0,0,0,0"))
                        (rule "replace_int_RANGE" (formula "6") (term "1,1,1,0,0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                        (rule "mod_axiom" (formula "6") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0"))
                        (rule "div_literals" (formula "6") (term "0,1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "6") (term "1,0,0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "expand_moduloInteger" (formula "22") (term "1,0,0,1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "replace_int_RANGE" (formula "22") (term "1,1,1,0,0,1,1,0"))
                        (rule "replace_int_MIN" (formula "22") (term "0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "22") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,1,0"))
                        (rule "mod_axiom" (formula "22") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0"))
                        (rule "div_literals" (formula "22") (term "0,1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "22") (term "1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "22") (term "1,0,0,1,1,0"))
                        (rule "add_literals" (formula "22") (term "0,0,1,1,0"))
                        (rule "div_literals" (formula "22") (term "0,1,1,0"))
                        (rule "mul_literals" (formula "22") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "1,0"))
                        (rule "add_literals" (formula "22") (term "0,1,0"))
                        (rule "div_axiom" (formula "8") (term "0,1,1") (inst "quotient=quotient_0"))
                        (rule "equal_literals" (formula "8") (term "0"))
                        (rule "concrete_or_2" (formula "8"))
                        (rule "qeq_literals" (formula "8") (term "0,1"))
                        (rule "ifthenelse_true_for" (formula "8") (term "1"))
                        (rule "mul_literals" (formula "8") (term "1,1,1"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
                        (rule "add_literals" (formula "10") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "10") (term "1"))
                        (rule "add_literals" (formula "10") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "15") (term "1"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "8"))
                        (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "16") (term "1"))
                        (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "6") (term "1"))
                        (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "13") (term "1"))
                        (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "11") (term "1"))
                        (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "16") (term "1"))
                        (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "8"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                        (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "8"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                        (rule "mul_literals" (formula "9") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                        (rule "mul_literals" (formula "10") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "10"))
                        (rule "mul_literals" (formula "26") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "mul_literals" (formula "26") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "12"))
                        (rule "greater_literals" (formula "26") (term "0,0"))
                        (rule "concrete_and_1" (formula "26") (term "0"))
                        (rule "mul_literals" (formula "26") (term "1,0"))
                        (rule "leq_literals" (formula "26") (term "0"))
                        (rule "concrete_or_1" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                        (rule "add_literals" (formula "15") (term "1,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0"))
                        (rule "add_zero_right" (formula "15") (term "0"))
                        (rule "polySimp_rightDist" (formula "15") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                        (rule "mul_literals" (formula "15") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "12"))
                        (rule "greater_literals" (formula "15") (term "0,0"))
                        (rule "concrete_and_1" (formula "15") (term "0"))
                        (rule "times_zero_1" (formula "15") (term "1,0"))
                        (rule "leq_literals" (formula "15") (term "0"))
                        (rule "concrete_or_1" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "32"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                        (rule "mul_literals" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "34"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                        (rule "mul_literals" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "21"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                        (rule "mul_literals" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "inEqSimp_contradInEq5" (formula "9") (ifseqformula "13"))
                        (rule "greater_literals" (formula "9") (term "0,0"))
                        (rule "concrete_impl_1" (formula "9") (term "0"))
                        (rule "mul_literals" (formula "9") (term "1,0"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                        (rule "concrete_and_2" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                     (branch "CUT: self.wordsInUse = self.words.length FALSE"
                        (rule "concrete_or_2" (formula "29"))
                        (rule "inEqSimp_strengthen0" (formula "28") (ifseqformula "35"))
                        (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "28"))
                        (rule "concrete_impl_1" (formula "30"))
                        (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0"))
                        (rule "qeq_literals" (formula "35") (term "0"))
                        (rule "concrete_and_2" (formula "35"))
                        (rule "false_right" (formula "35"))
                        (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                        (rule "mul_literals" (formula "27") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                        (rule "mul_literals" (formula "27") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "27"))
                        (rule "leq_literals" (formula "26") (term "0"))
                        (rule "concrete_or_1" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "28"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                        (rule "concrete_or_1" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "33"))
                        (rule "mul_literals" (formula "26") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "mul_literals" (formula "26") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "26"))
                        (rule "leq_literals" (formula "25") (term "0"))
                        (rule "concrete_or_1" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                        (rule "mul_literals" (formula "13") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0"))
                        (rule "qeq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "9"))
                        (rule "times_zero_1" (formula "13") (term "1,1,0"))
                        (rule "greater_literals" (formula "13") (term "0,0"))
                        (rule "concrete_and_1" (formula "13") (term "0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                        (rule "concrete_or_1" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "32"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                        (rule "mul_literals" (formula "13") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0"))
                        (rule "qeq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                        (rule "mul_literals" (formula "26") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "mul_literals" (formula "26") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "26"))
                        (rule "leq_literals" (formula "24") (term "0"))
                        (rule "concrete_or_1" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "expand_moduloInteger" (formula "31") (term "1,0,0,1,1"))
                        (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "31") (term "1,1,1,0,0,1,1"))
                        (rule "replace_int_MIN" (formula "31") (term "0,1,0,0,1,1"))
                        (rule "add_literals" (formula "31") (term "0,1,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,1"))
                        (rule "add_literals" (formula "31") (term "0,0,0,1,1"))
                        (rule "mod_axiom" (formula "31") (term "1,0,0,1,1"))
                        (rule "div_literals" (formula "31") (term "0,0,1,1,0,0,1,1"))
                        (rule "times_zero_2" (formula "31") (term "0,1,1,0,0,1,1"))
                        (rule "times_zero_2" (formula "31") (term "1,1,0,0,1,1"))
                        (rule "add_zero_right" (formula "31") (term "1,0,0,1,1"))
                        (rule "add_literals" (formula "31") (term "0,0,1,1"))
                        (rule "div_literals" (formula "31") (term "0,1,1"))
                        (rule "mul_literals" (formula "31") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "31") (term "1"))
                        (rule "add_literals" (formula "31") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "31"))
                        (rule "mul_literals" (formula "27") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "0,0"))
                        (rule "add_zero_left" (formula "27") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "32"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                        (rule "expand_moduloInteger" (formula "10") (term "1,1"))
                        (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,1"))
                        (rule "replace_int_RANGE" (formula "10") (term "1,1,1,1"))
                        (rule "replace_int_MIN" (formula "10") (term "0,1,1"))
                        (rule "add_literals" (formula "10") (term "0,1,1,1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "10") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "mod_axiom" (formula "10") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                        (rule "div_literals" (formula "10") (term "0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "expand_moduloInteger" (formula "7") (term "0"))
                        (rule "replace_int_MIN" (formula "7") (term "0,0"))
                        (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0"))
                        (rule "replace_int_RANGE" (formula "7") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                        (rule "add_literals" (formula "7") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "7") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "7") (term "0,0,1,0,1"))
                        (rule "ifthenelse_false" (formula "7") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1"))
                        (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                        (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,0,1"))
                        (rule "add_literals" (formula "7") (term "0,0,1,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,1"))
                        (rule "add_literals" (formula "7") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "7") (term "0,0,1"))
                        (rule "expand_moduloInteger" (formula "4") (term "1,0,0,1,1"))
                        (rule "replace_int_MIN" (formula "4") (term "0,1,0,0,1,1"))
                        (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,0,1,1"))
                        (rule "add_literals" (formula "4") (term "0,1,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1"))
                        (rule "add_literals" (formula "4") (term "0,0,0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "mod_axiom" (formula "4") (term "1,0,0,1,0"))
                        (rule "div_literals" (formula "4") (term "0,0,1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "4") (term "0,1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "4") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "4") (term "0,0,1,0"))
                        (rule "div_literals" (formula "4") (term "0,1,0"))
                        (rule "mul_literals" (formula "4") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "expand_mulJint" (formula "35") (term "1"))
                        (rule "polySimp_mulComm0" (formula "35") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "35"))
                        (rule "mul_literals" (formula "27") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                        (rule "mul_literals" (formula "27") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "36"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                        (rule "mul_literals" (formula "13") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                        (rule "expand_moduloInteger" (formula "6") (term "0"))
                        (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                        (rule "replace_int_MIN" (formula "6") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,1"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,1"))
                        (rule "expand_moduloInteger" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "replace_int_MIN" (formula "24") (term "0,1,0,0,1,1,0"))
                        (rule "replace_int_RANGE" (formula "24") (term "1,1,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,1,0"))
                        (rule "mod_axiom" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,1,0"))
                        (rule "div_literals" (formula "24") (term "0,1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,0,0,1,1,0"))
                        (rule "add_literals" (formula "24") (term "0,0,1,1,0"))
                        (rule "div_literals" (formula "24") (term "0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "1,0"))
                        (rule "add_literals" (formula "24") (term "0,1,0"))
                        (rule "div_axiom" (formula "16") (term "0,1,1") (inst "quotient=quotient_0"))
                        (rule "mul_literals" (formula "16") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "16") (term "0,1,1"))
                        (rule "ifthenelse_true_for" (formula "16") (term "1,1"))
                        (rule "equal_literals" (formula "16") (term "0"))
                        (rule "concrete_or_2" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                        (rule "add_literals" (formula "18") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "18") (term "1"))
                        (rule "add_literals" (formula "18") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                        (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "8") (term "1"))
                        (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "19") (term "1"))
                        (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "14") (term "1"))
                        (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "11") (term "1"))
                        (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "15") (term "1"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "16"))
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "10") (term "1"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "16"))
                        (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "13") (term "1"))
                        (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                        (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "16"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                        (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1"))
                        (rule "mul_literals" (formula "17") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1"))
                        (rule "polySimp_rightDist" (formula "18") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                        (rule "mul_literals" (formula "18") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1"))
                        (rule "mul_literals" (formula "12") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                        (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0"))
                        (rule "qeq_literals" (formula "18") (term "0"))
                        (rule "concrete_or_1" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0"))
                        (rule "add_zero_right" (formula "14") (term "0"))
                        (rule "polySimp_rightDist" (formula "14") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                        (rule "mul_literals" (formula "14") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "9"))
                        (rule "greater_literals" (formula "14") (term "0,0"))
                        (rule "concrete_and_1" (formula "14") (term "0"))
                        (rule "times_zero_1" (formula "14") (term "1,0"))
                        (rule "leq_literals" (formula "14") (term "0"))
                        (rule "concrete_or_1" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "39"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "23"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "inEqSimp_contradInEq5" (formula "17") (ifseqformula "9"))
                        (rule "times_zero_1" (formula "17") (term "1,1,0"))
                        (rule "greater_literals" (formula "17") (term "0,0"))
                        (rule "concrete_impl_1" (formula "17") (term "0"))
                        (rule "qeq_literals" (formula "17") (term "0"))
                        (rule "concrete_and_2" (formula "17"))
                        (rule "closeFalse" (formula "17"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "19"))
                  (branch "Case 1"
                     (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                     (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                     (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                     (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                     (rule "expand_inInt" (formula "4"))
                     (rule "expand_inLong" (formula "16") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "replace_int_MAX" (formula "4") (term "1,0"))
                     (rule "replace_int_MIN" (formula "4") (term "0,1"))
                     (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                     (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                     (rule "notLeft" (formula "8"))
                     (rule "andLeft" (formula "4"))
                     (rule "allRight" (formula "20") (inst "sk=i_0"))
                     (rule "impRight" (formula "20"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "translateJavaSubInt" (formula "11") (term "0,2,0,0,1"))
                     (rule "translateJavaAddInt" (formula "16") (term "1"))
                     (rule "translateJavaMulInt" (formula "17") (term "1"))
                     (rule "translateJavaDivInt" (formula "16") (term "0,1"))
                     (rule "translateJavaAddInt" (formula "17") (term "1,1"))
                     (rule "translateJavaDivInt" (formula "17") (term "0,1,1"))
                     (rule "inEqSimp_ltRight" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "22"))
                     (rule "simplifyUpdate1" (formula "22") (term "1"))
                     (rule "applyOnRigidFormula" (formula "3"))
                     (rule "simplifyUpdate1" (formula "3") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "22") (term "0"))
                     (rule "simplifyUpdate1" (formula "22") (term "2,0"))
                     (rule "applyOnPV" (formula "22") (term "0,0"))
                     (rule "applyOnRigidTerm" (formula "3") (term "1"))
                     (rule "simplifyUpdate1" (formula "3") (term "2,1"))
                     (rule "simplifyUpdate1" (formula "3") (term "1,1"))
                     (rule "applyOnPV" (formula "3") (term "0,1"))
                     (rule "applyOnRigidTerm" (formula "22") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "1,1,0"))
                     (rule "applyOnPV" (formula "22") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "2,1,0"))
                     (rule "eqClose" (formula "22"))
                     (rule "closeTrue" (formula "22"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "19"))
                     (branch "Case 1"
                        (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                        (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                        (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                        (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                        (rule "expand_inInt" (formula "4"))
                        (rule "simplifyUpdate2" (formula "19"))
                        (rule "expand_inLong" (formula "16") (term "1,0"))
                        (rule "replace_int_MIN" (formula "4") (term "0,1"))
                        (rule "replace_int_MAX" (formula "4") (term "1,0"))
                        (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                        (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                        (rule "notLeft" (formula "8"))
                        (rule "andLeft" (formula "4"))
                        (rule "allRight" (formula "20") (inst "sk=i_0"))
                        (rule "impRight" (formula "20"))
                        (rule "simplifyUpdate2" (formula "21"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "2"))
                        (rule "translateJavaSubInt" (formula "11") (term "0,2,0,0,1"))
                        (rule "translateJavaAddInt" (formula "16") (term "1"))
                        (rule "translateJavaMulInt" (formula "17") (term "1"))
                        (rule "translateJavaDivInt" (formula "16") (term "0,1"))
                        (rule "translateJavaDivInt" (formula "17") (term "0,1,1"))
                        (rule "translateJavaAddInt" (formula "17") (term "1,1"))
                        (rule "inEqSimp_ltRight" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "applyOnRigidFormula" (formula "2"))
                        (rule "simplifyUpdate1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "2") (term "1"))
                        (rule "simplifyUpdate1" (formula "2") (term "2,1"))
                        (rule "simplifyUpdate1" (formula "2") (term "1,1"))
                        (rule "applyOnPV" (formula "2") (term "0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8"))
                        (rule "inEqSimp_commuteGeq" (formula "2"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                        (rule "leq_literals" (formula "8") (term "0"))
                        (rule "concrete_or_1" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "12") (term "0,0"))
                        (rule "add_zero_left" (formula "12") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "add_zero_left" (formula "14") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                        (rule "times_zero_1" (formula "17") (term "0,0"))
                        (rule "add_zero_left" (formula "17") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "23"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (rule "add_zero_left" (formula "19") (term "0"))
                        (rule "expand_divJint" (formula "15") (term "0"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0"))
                        (rule "div_literals" (formula "15") (term "1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,2,0,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0"))
                        (rule "ifthenelse_true" (formula "15") (term "0,0"))
                        (rule "expand_subJint" (formula "16") (term "0,2,0,0,1"))
                        (rule "polySimp_elimSub" (formula "16") (term "0,0,2,0,0,1"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,2,0,0,1"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,2,0,0,1"))
                        (rule "expand_divJint" (formula "25") (term "0,1"))
                        (rule "jdiv_axiom_inline" (formula "25") (term "0,0,1"))
                        (rule "qeq_literals" (formula "25") (term "0,0,0,1"))
                        (rule "ifthenelse_true" (formula "25") (term "0,0,1"))
                        (rule "div_literals" (formula "25") (term "0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "21") (term "0,0"))
                        (rule "add_zero_left" (formula "21") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "26"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1"))
                        (rule "expand_addJint" (formula "28") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "28"))
                        (rule "times_zero_1" (formula "21") (term "0,0"))
                        (rule "add_zero_left" (formula "21") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "29"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "30"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1"))
                        (rule "mul_literals" (formula "10") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                        (rule "expand_addJint" (formula "7") (term "1"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "8") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "32"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "34"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1"))
                        (rule "nnf_imp2or" (formula "36") (term "0"))
                        (rule "nnf_imp2or" (formula "33") (term "0,1"))
                        (rule "expand_addJint" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "expand_divJint" (formula "24") (term "0,0"))
                        (rule "jdiv_axiom_inline" (formula "24") (term "0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,2,0,0,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0,0,0"))
                        (rule "ifthenelse_true" (formula "24") (term "0,0,0"))
                        (rule "div_literals" (formula "24") (term "0,0,0"))
                        (rule "expand_addJint" (formula "3") (term "1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                        (rule "expand_addJint" (formula "3") (term "0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                        (rule "expand_addJint" (formula "3") (term "1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                        (rule "expand_mulJint" (formula "11") (term "0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                        (rule "expand_addJint" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
                        (rule "expand_mulJint" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                        (rule "expand_moduloInteger" (formula "19") (term "0"))
                        (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0"))
                        (rule "replace_int_MIN" (formula "19") (term "0,0"))
                        (rule "replace_int_RANGE" (formula "19") (term "1,1,0"))
                        (rule "add_literals" (formula "19") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                        (rule "mod_axiom" (formula "19") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                        (rule "div_literals" (formula "19") (term "0,1,0,1,0"))
                        (rule "times_zero_2" (formula "19") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,1,0"))
                        (rule "mul_literals" (formula "19") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "add_literals" (formula "19") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "1"))
                        (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "19"))
                        (rule "leq_literals" (formula "16") (term "0"))
                        (rule "concrete_or_1" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "expand_moduloInteger" (formula "19") (term "0,2,0,0,1"))
                        (rule "replace_int_MIN" (formula "19") (term "0,0,2,0,0,1"))
                        (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0,2,0,0,1"))
                        (rule "replace_int_RANGE" (formula "19") (term "1,1,0,2,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,2,0,0,1"))
                        (rule "add_literals" (formula "19") (term "0,0,1,0,2,0,0,1"))
                        (rule "mod_axiom" (formula "19") (term "1,0,2,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,2,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,2,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,2,0,0,1"))
                        (rule "add_literals" (formula "19") (term "0,0,0,2,0,0,1"))
                        (rule "expand_moduloInteger" (formula "29") (term "0,1"))
                        (rule "replace_int_MIN" (formula "29") (term "0,0,1"))
                        (rule "replace_int_HALFRANGE" (formula "29") (term "0,0,1,0,1"))
                        (rule "replace_int_RANGE" (formula "29") (term "1,1,0,1"))
                        (rule "add_literals" (formula "29") (term "0,1,0,1"))
                        (rule "mod_axiom" (formula "29") (term "1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1"))
                        (rule "div_literals" (formula "29") (term "0,1,1,0,1"))
                        (rule "mul_literals" (formula "29") (term "1,1,0,1"))
                        (rule "add_zero_right" (formula "29") (term "1,0,1"))
                        (rule "add_literals" (formula "29") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "29"))
                        (rule "times_zero_1" (formula "25") (term "0,0"))
                        (rule "add_zero_left" (formula "25") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "30"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                        (rule "polySimp_elimOne" (formula "8") (term "1"))
                        (rule "expand_moduloInteger" (formula "25") (term "0,0"))
                        (rule "replace_int_MIN" (formula "25") (term "0,0,0"))
                        (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,0,0"))
                        (rule "replace_int_RANGE" (formula "25") (term "1,1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,1,0,0"))
                        (rule "mod_axiom" (formula "25") (term "1,0,0"))
                        (rule "div_literals" (formula "25") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0"))
                        (rule "expand_addJint" (formula "3") (term "0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "3"))
                        (rule "expand_divJint" (formula "31") (term "1,0,1,1"))
                        (rule "jdiv_axiom_inline" (formula "31") (term "0,1,0,1,1"))
                        (rule "qeq_literals" (formula "31") (term "0,0,1,0,1,1"))
                        (rule "ifthenelse_true" (formula "31") (term "0,1,0,1,1"))
                        (rule "div_literals" (formula "31") (term "0,1,0,1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "31"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "32"))
                        (rule "times_zero_1" (formula "25") (term "0,0"))
                        (rule "add_zero_left" (formula "25") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1"))
                        (rule "mul_literals" (formula "14") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                        (rule "expand_divJint" (formula "25") (term "1,0,1,0"))
                        (rule "jdiv_axiom_inline" (formula "25") (term "0,1,0,1,0"))
                        (rule "div_literals" (formula "25") (term "1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,2,0,1,0,1,0"))
                        (rule "qeq_literals" (formula "25") (term "0,0,1,0,1,0"))
                        (rule "ifthenelse_true" (formula "25") (term "0,1,0,1,0"))
                        (rule "expand_moduloInteger" (formula "1") (term "1,0"))
                        (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0"))
                        (rule "replace_int_MIN" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                        (rule "mod_axiom" (formula "1") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,1,0"))
                        (rule "polyDiv_pullOut" (formula "1") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,1,0"))
                        (rule "equal_literals" (formula "1") (term "0,0,1,1,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0,1,1,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,1,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,1,0"))
                        (rule "expand_addJint" (formula "1") (term "1"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                        (rule "expand_moduloInteger" (formula "13") (term "1,0"))
                        (rule "replace_int_MIN" (formula "13") (term "0,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0"))
                        (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,1,1,0"))
                        (rule "mod_axiom" (formula "13") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,1,0"))
                        (rule "polyDiv_pullOut" (formula "13") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "13") (term "0,0,1,1,0"))
                        (rule "ifthenelse_false" (formula "13") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,1,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,1,0"))
                        (rule "expand_moduloInteger" (formula "10") (term "1"))
                        (rule "replace_int_RANGE" (formula "10") (term "1,1,1"))
                        (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1"))
                        (rule "replace_int_MIN" (formula "10") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
                        (rule "add_literals" (formula "10") (term "0,0,1,1"))
                        (rule "mod_axiom" (formula "10") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
                        (rule "add_literals" (formula "10") (term "0,0,1"))
                        (rule "polyDiv_pullOut" (formula "10") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,1,1"))
                        (rule "equal_literals" (formula "10") (term "0,0,1,1"))
                        (rule "ifthenelse_false" (formula "10") (term "0,1,1"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "10") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                        (rule "add_literals" (formula "10") (term "0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "32"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "30"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                        (rule "mul_literals" (formula "11") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                        (rule "mul_literals" (formula "12") (term "0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "36"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                        (rule "mul_literals" (formula "11") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                        (rule "expand_moduloInteger" (formula "6") (term "1"))
                        (rule "replace_int_MIN" (formula "6") (term "0,1"))
                        (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "6") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1,1"))
                        (rule "add_literals" (formula "6") (term "0,0,1,1"))
                        (rule "mod_axiom" (formula "6") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                        (rule "add_literals" (formula "6") (term "0,0,1"))
                        (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "6") (term "0,0,1,1"))
                        (rule "ifthenelse_false" (formula "6") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "6") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                        (rule "mul_literals" (formula "6") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "add_literals" (formula "6") (term "0,0,1"))
                        (rule "expand_moduloInteger" (formula "6") (term "0"))
                        (rule "replace_int_MIN" (formula "6") (term "0,0"))
                        (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                        (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                        (rule "add_literals" (formula "6") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "mod_axiom" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                        (rule "mul_literals" (formula "6") (term "0,0,1"))
                        (rule "polyDiv_pullOut" (formula "6") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,0"))
                        (rule "equal_literals" (formula "6") (term "0,0,0"))
                        (rule "ifthenelse_false" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0"))
                        (rule "mul_literals" (formula "6") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "expand_addJint" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "expand_moduloInteger" (formula "6") (term "1"))
                        (rule "replace_int_MIN" (formula "6") (term "0,1"))
                        (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "6") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1,1"))
                        (rule "add_literals" (formula "6") (term "0,0,1,1"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "mod_axiom" (formula "6") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "6") (term "0,0,1,1"))
                        (rule "ifthenelse_false" (formula "6") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "6") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                        (rule "mul_literals" (formula "6") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "add_literals" (formula "6") (term "0,0,1"))
                        (rule "expand_mulJint" (formula "4") (term "0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                        (rule "expand_moduloInteger" (formula "4") (term "1"))
                        (rule "replace_int_MIN" (formula "4") (term "0,1"))
                        (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "4") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1,1"))
                        (rule "add_literals" (formula "4") (term "0,0,1,1"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "mod_axiom" (formula "4") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "polyDiv_pullOut" (formula "4") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "4") (term "0,0,1,1"))
                        (rule "ifthenelse_false" (formula "4") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "4") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "4") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "4") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                        (rule "add_literals" (formula "4") (term "0,0,1"))
                        (rule "expand_divJint" (formula "2") (term "1,0,0"))
                        (rule "jdiv_axiom_inline" (formula "2") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,2,0,1,0,0"))
                        (rule "qeq_literals" (formula "2") (term "0,0,1,0,0"))
                        (rule "ifthenelse_true" (formula "2") (term "0,1,0,0"))
                        (rule "div_literals" (formula "2") (term "0,1,0,0"))
                        (rule "expand_moduloInteger" (formula "2") (term "1"))
                        (rule "replace_int_MIN" (formula "2") (term "0,1"))
                        (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "2") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,1,1"))
                        (rule "add_literals" (formula "2") (term "0,0,1,1"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "mod_axiom" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                        (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "2") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "2") (term "1"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                        (rule "add_literals" (formula "2") (term "0,0,1"))
                        (rule "expand_moduloInteger" (formula "13") (term "0"))
                        (rule "replace_int_RANGE" (formula "13") (term "1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0"))
                        (rule "replace_int_MIN" (formula "13") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0"))
                        (rule "mod_axiom" (formula "13") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                        (rule "mul_literals" (formula "13") (term "0,0,1"))
                        (rule "nnf_notAnd" (formula "35") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                        (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                        (rule "expand_moduloInteger" (formula "25") (term "0"))
                        (rule "replace_int_MIN" (formula "25") (term "0,0"))
                        (rule "replace_int_RANGE" (formula "25") (term "1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,0"))
                        (rule "mod_axiom" (formula "25") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=addJint(divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                Z(4(6(#)))),
        Z(1(#)))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(addJint(divJint(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                                Z(4(6(#)))),
                        Z(1(#))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                        (rule "leq_literals" (formula "25") (term "0,0"))
                        (rule "concrete_or_2" (formula "25") (term "0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                        (rule "neg_literal" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "qeq_literals" (formula "25") (term "0"))
                        (rule "concrete_or_2" (formula "25"))
                        (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1"))
                        (rule "expand_addJint" (formula "33") (term "1"))
                        (rule "add_literals" (formula "33") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                        (rule "mul_literals" (formula "11") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "34"))
                        (rule "times_zero_1" (formula "30") (term "0,0"))
                        (rule "add_zero_left" (formula "30") (term "0"))
                        (rule "expand_addJint" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "0,0"))
                        (rule "expand_addJint" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "6"))
                        (rule "expand_addJint" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "expand_mulJint" (formula "35") (term "1"))
                        (rule "polySimp_mulComm0" (formula "35") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "35"))
                        (rule "times_zero_1" (formula "28") (term "0,0"))
                        (rule "add_zero_left" (formula "28") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "36"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                        (rule "mul_literals" (formula "9") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "37"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                        (rule "mul_literals" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1"))
                        (rule "polySimp_rightDist" (formula "18") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                        (rule "mul_literals" (formula "18") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                        (rule "expand_mulJint" (formula "4") (term "0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                        (rule "expand_moduloInteger" (formula "4") (term "1"))
                        (rule "replace_int_MIN" (formula "4") (term "0,1"))
                        (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1"))
                        (rule "replace_int_RANGE" (formula "4") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1,1"))
                        (rule "add_literals" (formula "4") (term "0,0,1,1"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "mod_axiom" (formula "4") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "polyDiv_pullOut" (formula "4") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "4") (term "0,0,1,1"))
                        (rule "ifthenelse_false" (formula "4") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "4") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "4") (term "1,1,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,1"))
                        (rule "add_literals" (formula "4") (term "0,0,1,1,1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                        (rule "add_literals" (formula "4") (term "0,0,1"))
                        (rule "expand_moduloInteger" (formula "28") (term "1,0"))
                        (rule "replace_int_MIN" (formula "28") (term "0,1,0"))
                        (rule "replace_int_RANGE" (formula "28") (term "1,1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0"))
                        (rule "add_literals" (formula "28") (term "0,0,1,1,0"))
                        (rule "mod_axiom" (formula "28") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                        (rule "add_literals" (formula "28") (term "0,0,1,0"))
                        (rule "polyDiv_pullOut" (formula "28") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "28") (term "0,0,1,1,0"))
                        (rule "ifthenelse_false" (formula "28") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,1,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                        (rule "add_literals" (formula "28") (term "0,0,1,0"))
                        (rule "expand_moduloInteger" (formula "16") (term "1,0"))
                        (rule "replace_int_MIN" (formula "16") (term "0,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1,0"))
                        (rule "replace_int_RANGE" (formula "16") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0"))
                        (rule "add_literals" (formula "16") (term "0,0,1,1,0"))
                        (rule "mod_axiom" (formula "16") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                        (rule "add_literals" (formula "16") (term "0,0,1,0"))
                        (rule "polyDiv_pullOut" (formula "16") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "16") (term "0,0,1,1,0"))
                        (rule "ifthenelse_false" (formula "16") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,1,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                        (rule "add_literals" (formula "16") (term "0,0,1,0"))
                        (rule "expand_divJint" (formula "1") (term "1,0,0,1,1,0"))
                        (rule "jdiv_axiom_inline" (formula "1") (term "0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,2,0,1,0,0,1,1,0"))
                        (rule "qeq_literals" (formula "1") (term "0,0,1,0,0,1,1,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0,1,0,0,1,1,0"))
                        (rule "div_literals" (formula "1") (term "0,1,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,0"))
                        (rule "expand_moduloInteger" (formula "1") (term "1"))
                        (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1"))
                        (rule "replace_int_MIN" (formula "1") (term "0,1"))
                        (rule "replace_int_RANGE" (formula "1") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,1,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1,1"))
                        (rule "mod_axiom" (formula "1") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                        (rule "ifthenelse_false" (formula "1") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "expand_divJint" (formula "15") (term "1,0,0,1,1,0"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,2,0,1,0,0,1,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,1,0,0,1,1,0"))
                        (rule "ifthenelse_true" (formula "15") (term "0,1,0,0,1,1,0"))
                        (rule "div_literals" (formula "15") (term "0,1,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "1,0"))
                        (rule "expand_addJint" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "expand_moduloInteger" (formula "6") (term "1,0"))
                        (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,0"))
                        (rule "replace_int_MIN" (formula "6") (term "0,1,0"))
                        (rule "replace_int_RANGE" (formula "6") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,0"))
                        (rule "add_literals" (formula "6") (term "0,0,1,1,0"))
                        (rule "mod_axiom" (formula "6") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                        (rule "add_literals" (formula "6") (term "0,0,1,0"))
                        (rule "polyDiv_pullOut" (formula "6") (term "0,1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "equal_literals" (formula "6") (term "0,0,1,1,0"))
                        (rule "ifthenelse_false" (formula "6") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,1,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
                        (rule "add_literals" (formula "6") (term "0,0,1,0"))
                        (rule "commute_and" (formula "37") (term "1,0"))
                        (rule "expand_moduloInteger" (formula "4") (term "1,0,0"))
                        (rule "replace_int_MIN" (formula "4") (term "0,1,0,0"))
                        (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,0"))
                        (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,0"))
                        (rule "add_literals" (formula "4") (term "0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "mod_axiom" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                        (rule "div_literals" (formula "4") (term "0,1,1,0,0"))
                        (rule "times_zero_2" (formula "4") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "1,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "expand_moduloInteger" (formula "3") (term "0"))
                        (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                        (rule "replace_int_MIN" (formula "3") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "mod_axiom" (formula "3") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,1"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,1"))
                        (rule "arrayLengthIsAnInt" (formula "32") (term "1,0"))
                        (rule "expand_inInt" (formula "32"))
                        (rule "replace_int_MAX" (formula "32") (term "1,0"))
                        (rule "replace_int_MIN" (formula "32") (term "0,1"))
                        (rule "andLeft" (formula "32"))
                        (rule "inEqSimp_commuteLeq" (formula "33"))
                        (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "28"))
                        (rule "leq_literals" (formula "33") (term "0"))
                        (rule "concrete_or_1" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "32"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "arrayLengthNotNegative" (formula "33") (term "1"))
                        (rule "cut_direct" (formula "25") (term "0"))
                        (branch "CUT: self.wordsInUse = 0 TRUE"
                           (rule "concrete_or_1" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "36"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "11"))
                           (rule "times_zero_2" (formula "11") (term "1,0"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "applyEq" (formula "35") (term "1,1,0,0,0,1") (ifseqformula "25"))
                           (rule "add_zero_right" (formula "35") (term "1,0,0,0,1"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "25"))
                           (rule "eqSymm" (formula "34") (term "0"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "32"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                           (rule "times_zero_2" (formula "34") (term "1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0"))
                           (rule "applyEq" (formula "33") (term "0,2,0,1") (ifseqformula "25"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "12"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0"))
                           (rule "mul_literals" (formula "33") (term "1,0"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (rule "concrete_or_1" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "expand_addJint" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                           (rule "mul_literals" (formula "11") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                           (rule "expand_divJint" (formula "25") (term "0,1"))
                           (rule "jdiv_axiom_inline" (formula "25") (term "0,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,0,2,0,0,1"))
                           (rule "qeq_literals" (formula "25") (term "0,0,0,1"))
                           (rule "ifthenelse_true" (formula "25") (term "0,0,1"))
                           (rule "div_literals" (formula "25") (term "0,0,1"))
                           (rule "expand_divJint" (formula "25") (term "0,0,1,0,0,0"))
                           (rule "jdiv_axiom_inline" (formula "25") (term "0,0,0,1,0,0,0"))
                           (rule "div_literals" (formula "25") (term "1,0,0,0,1,0,0,0"))
                           (rule "qeq_literals" (formula "25") (term "0,0,0,0,1,0,0,0"))
                           (rule "ifthenelse_true" (formula "25") (term "0,0,0,1,0,0,0"))
                           (rule "expand_moduloInteger" (formula "9") (term "0"))
                           (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
                           (rule "replace_int_MIN" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "mod_axiom" (formula "9") (term "0,1,0"))
                           (rule "div_literals" (formula "9") (term "0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                           (rule "times_zero_2" (formula "9") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "9") (term "0,1,0"))
                           (rule "mul_literals" (formula "9") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "inEqSimp_subsumption5" (formula "9") (ifseqformula "10"))
                           (rule "eq_and" (formula "9") (term "0,0"))
                           (rule "greater_literals" (formula "9") (term "0,0"))
                           (rule "concrete_and_1" (formula "9") (term "0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                           (rule "concrete_or_1" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "expand_moduloInteger" (formula "28") (term "0"))
                           (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0"))
                           (rule "replace_int_RANGE" (formula "28") (term "1,1,0"))
                           (rule "replace_int_MIN" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "0,1,0"))
                           (rule "mod_axiom" (formula "28") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                           (rule "div_literals" (formula "28") (term "0,1,1,0"))
                           (rule "times_zero_2" (formula "28") (term "1,1,0"))
                           (rule "add_zero_right" (formula "28") (term "1,0"))
                           (rule "add_literals" (formula "28") (term "0"))
                           (rule "qeq_literals" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "expand_moduloInteger" (formula "4") (term "0"))
                           (rule "replace_int_MIN" (formula "4") (term "0,0"))
                           (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                           (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                           (rule "add_literals" (formula "4") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "mod_axiom" (formula "4") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                           (rule "mul_literals" (formula "4") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                           (rule "polyDiv_pullOut" (formula "4") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "equal_literals" (formula "4") (term "0,0,1,1"))
                           (rule "ifthenelse_false" (formula "4") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "4") (term "1,1,1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,1"))
                           (rule "add_literals" (formula "4") (term "0,0,1,1,1,1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "4") (term "1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                           (rule "add_literals" (formula "4") (term "0,0,1"))
                           (rule "expand_moduloInteger" (formula "2") (term "0"))
                           (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                           (rule "replace_int_MIN" (formula "2") (term "0,0"))
                           (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                           (rule "add_literals" (formula "2") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "mod_axiom" (formula "2") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                           (rule "mul_literals" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                           (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                           (rule "ifthenelse_false" (formula "2") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
                           (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,1"))
                           (rule "add_literals" (formula "2") (term "0,0,0,1,1,1"))
                           (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "2") (term "1"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                           (rule "add_literals" (formula "2") (term "0,0,1"))
                           (rule "expand_moduloInteger" (formula "31") (term "1"))
                           (rule "replace_int_RANGE" (formula "31") (term "1,1,1"))
                           (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1"))
                           (rule "replace_int_MIN" (formula "31") (term "0,1"))
                           (rule "mod_axiom" (formula "31") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                           (rule "add_literals" (formula "31") (term "0,0,1"))
                           (rule "add_zero_left" (formula "31") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "31"))
                           (rule "times_zero_1" (formula "27") (term "0,0"))
                           (rule "add_zero_left" (formula "27") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcdRightDiv=moduloInt(add(Z(1(#)),
              moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(add(Z(1(#)),
                              moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "27") (term "0,0"))
                           (rule "concrete_or_2" (formula "27") (term "0"))
                           (rule "neg_literal" (formula "27") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "qeq_literals" (formula "27") (term "0"))
                           (rule "concrete_or_2" (formula "27"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "33"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                           (rule "mul_literals" (formula "16") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "expand_moduloInteger" (formula "28") (term "1,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "28") (term "0,1,0,0,0,0"))
                           (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,1,0,0,0,0"))
                           (rule "replace_int_RANGE" (formula "28") (term "1,1,1,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                           (rule "mod_axiom" (formula "28") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0"))
                           (rule "div_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                           (rule "times_zero_2" (formula "28") (term "1,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0"))
                           (rule "expand_moduloInteger" (formula "6") (term "0"))
                           (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                           (rule "replace_int_MIN" (formula "6") (term "0,0"))
                           (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                           (rule "mod_axiom" (formula "6") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,1"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,1"))
                           (rule "expand_moduloInteger" (formula "13") (term "0,0,0"))
                           (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,0,0,0"))
                           (rule "replace_int_RANGE" (formula "13") (term "1,1,0,0,0"))
                           (rule "replace_int_MIN" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                           (rule "mod_axiom" (formula "13") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0"))
                           (rule "polyDiv_pullOut" (formula "13") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,0,0"))
                           (rule "equal_literals" (formula "13") (term "0,0,1,0,0"))
                           (rule "ifthenelse_false" (formula "13") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0"))
                           (rule "expand_moduloInteger" (formula "26") (term "1,0,0,1,1,0"))
                           (rule "replace_int_MIN" (formula "26") (term "0,1,0,0,1,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "replace_int_RANGE" (formula "26") (term "1,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "26") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1,1,0"))
                           (rule "mod_axiom" (formula "26") (term "1,0,0,1,1,0"))
                           (rule "div_literals" (formula "26") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_2" (formula "26") (term "0,1,1,0,0,1,1,0"))
                           (rule "times_zero_2" (formula "26") (term "1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "26") (term "1,0,0,1,1,0"))
                           (rule "add_literals" (formula "26") (term "0,0,1,1,0"))
                           (rule "div_literals" (formula "26") (term "0,1,1,0"))
                           (rule "mul_literals" (formula "26") (term "1,1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "1,0"))
                           (rule "add_literals" (formula "26") (term "0,1,0"))
                           (rule "expand_moduloInteger" (formula "12") (term "1,0,0,1,1,0"))
                           (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,1,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "replace_int_RANGE" (formula "12") (term "1,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "12") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,1,0"))
                           (rule "mod_axiom" (formula "12") (term "1,0,0,1,1,0"))
                           (rule "div_literals" (formula "12") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "12") (term "1,0,0,1,1,0"))
                           (rule "add_literals" (formula "12") (term "0,0,1,1,0"))
                           (rule "div_literals" (formula "12") (term "0,1,1,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "1,0"))
                           (rule "add_literals" (formula "12") (term "0,1,0"))
                           (rule "expand_divJint" (formula "1") (term "1,1,0"))
                           (rule "jdiv_axiom_inline" (formula "1") (term "0,1,1,0"))
                           (rule "qeq_literals" (formula "1") (term "0,0,1,1,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0,1,1,0"))
                           (rule "div_literals" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "1,0"))
                           (rule "expand_mulJint" (formula "10") (term "0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                           (rule "div_axiom" (formula "6") (term "0,1,1") (inst "quotient=quotient_0"))
                           (rule "equal_literals" (formula "6") (term "0"))
                           (rule "concrete_or_2" (formula "6"))
                           (rule "qeq_literals" (formula "6") (term "0,1"))
                           (rule "ifthenelse_true_for" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "1,1,1"))
                           (rule "andLeft" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                           (rule "add_literals" (formula "8") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "8") (term "1"))
                           (rule "add_literals" (formula "8") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "6"))
                           (rule "polySimp_addComm1" (formula "9") (term "1"))
                           (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "6"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "6"))
                           (rule "polySimp_addComm1" (formula "4") (term "1"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "applyEq" (formula "2") (term "0,1,0,1") (ifseqformula "6"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                           (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "6"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "mul_literals" (formula "8") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                           (rule "mul_literals" (formula "11") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                           (rule "mul_literals" (formula "10") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                           (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "qeq_literals" (formula "8") (term "0"))
                           (rule "concrete_or_1" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (rule "concrete_or_2" (formula "7") (term "0"))
                           (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (rule "concrete_or_2" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "27"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (rule "concrete_or_1" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "10"))
                           (rule "times_zero_1" (formula "23") (term "0,0"))
                           (rule "add_zero_left" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "11"))
                           (rule "times_zero_1" (formula "24") (term "0,0"))
                           (rule "add_zero_left" (formula "24") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "mul_literals" (formula "24") (term "1"))
                           (rule "inEqSimp_contradInEq3" (formula "24") (ifseqformula "7"))
                           (rule "mul_literals" (formula "24") (term "0,1,0"))
                           (rule "greater_literals" (formula "24") (term "0,0"))
                           (rule "concrete_impl_1" (formula "24") (term "0"))
                           (rule "qeq_literals" (formula "24") (term "0"))
                           (rule "concrete_and_2" (formula "24"))
                           (rule "closeFalse" (formula "24"))
                        )
                        (branch "CUT: self.wordsInUse = 0 FALSE"
                           (rule "concrete_or_2" (formula "25"))
                           (rule "notLeft" (formula "25"))
                           (rule "inEqSimp_strengthen1" (formula "31") (ifseqformula "40"))
                           (rule "add_zero_right" (formula "31") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "31"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0"))
                           (rule "leq_literals" (formula "40") (term "0"))
                           (rule "concrete_and_2" (formula "40"))
                           (rule "false_right" (formula "40"))
                           (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "12"))
                           (rule "mul_literals" (formula "31") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                           (rule "mul_literals" (formula "31") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                           (rule "leq_literals" (formula "25") (term "0"))
                           (rule "concrete_or_1" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                           (rule "mul_literals" (formula "31") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                           (rule "mul_literals" (formula "31") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "31"))
                           (rule "leq_literals" (formula "28") (term "0"))
                           (rule "concrete_or_1" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "36"))
                           (rule "mul_literals" (formula "31") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                           (rule "mul_literals" (formula "31") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "31"))
                           (rule "leq_literals" (formula "28") (term "0"))
                           (rule "concrete_or_1" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "37"))
                           (rule "mul_literals" (formula "29") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                           (rule "mul_literals" (formula "29") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "29"))
                           (rule "leq_literals" (formula "27") (term "0"))
                           (rule "concrete_or_1" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "cut_direct" (formula "34") (term "0"))
                           (branch "CUT: self.wordsInUse = self.words.length TRUE"
                              (rule "concrete_or_1" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "34"))
                              (rule "applyEq" (formula "38") (term "1,0,0,1,0,2,0") (ifseqformula "33"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,2,0"))
                              (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0"))
                              (rule "qeq_literals" (formula "34") (term "0"))
                              (rule "concrete_impl_2" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq0" (formula "31"))
                              (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                              (rule "add_literals" (formula "31") (term "1,0"))
                              (rule "times_zero_1" (formula "31") (term "0"))
                              (rule "qeq_literals" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "32"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "32"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                              (rule "applyEq" (formula "35") (term "1,0,2,0") (ifseqformula "31"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,2,0"))
                              (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "17"))
                              (rule "andLeft" (formula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "11"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0"))
                              (rule "add_literals" (formula "11") (term "0"))
                              (rule "leq_literals" (formula "11"))
                              (rule "closeFalse" (formula "11"))
                           )
                           (branch "CUT: self.wordsInUse = self.words.length FALSE"
                              (rule "concrete_or_2" (formula "34"))
                              (rule "inEqSimp_strengthen0" (formula "32") (ifseqformula "39"))
                              (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "32"))
                              (rule "concrete_impl_1" (formula "35"))
                              (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "32"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0"))
                              (rule "qeq_literals" (formula "39") (term "0"))
                              (rule "concrete_and_2" (formula "39"))
                              (rule "false_right" (formula "39"))
                              (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                              (rule "mul_literals" (formula "31") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                              (rule "add_literals" (formula "31") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                              (rule "mul_literals" (formula "31") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "31"))
                              (rule "leq_literals" (formula "29") (term "0"))
                              (rule "concrete_or_1" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "32"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                              (rule "mul_literals" (formula "11") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_1" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "37"))
                              (rule "mul_literals" (formula "30") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                              (rule "mul_literals" (formula "30") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                              (rule "leq_literals" (formula "28") (term "0"))
                              (rule "concrete_or_1" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "expand_divJint" (formula "13") (term "0,0,1,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "13") (term "0,0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "13") (term "0,0,0,0,1,0,0,0"))
                              (rule "ifthenelse_true" (formula "13") (term "0,0,0,1,0,0,0"))
                              (rule "div_literals" (formula "13") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                              (rule "expand_divJint" (formula "25") (term "0,1"))
                              (rule "jdiv_axiom_inline" (formula "25") (term "0,0,1"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,1"))
                              (rule "ifthenelse_true" (formula "25") (term "0,0,1"))
                              (rule "div_literals" (formula "25") (term "0,0,1"))
                              (rule "expand_divJint" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "25") (term "0,0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,0,1,0,0,0"))
                              (rule "ifthenelse_true" (formula "25") (term "0,0,0,1,0,0,0"))
                              (rule "div_literals" (formula "25") (term "0,0,0,1,0,0,0"))
                              (rule "expand_moduloInteger" (formula "36") (term "1"))
                              (rule "replace_int_RANGE" (formula "36") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "36") (term "0,0,1,1"))
                              (rule "replace_int_MIN" (formula "36") (term "0,1"))
                              (rule "add_literals" (formula "36") (term "0,1,1"))
                              (rule "mod_axiom" (formula "36") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                              (rule "div_literals" (formula "36") (term "0,1,1,1"))
                              (rule "times_zero_2" (formula "36") (term "1,1,1"))
                              (rule "add_zero_right" (formula "36") (term "1,1"))
                              (rule "add_literals" (formula "36") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "36"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                              (rule "inEqSimp_subsumption5" (formula "9") (ifseqformula "11"))
                              (rule "eq_and" (formula "9") (term "0,0"))
                              (rule "greater_literals" (formula "9") (term "0,0"))
                              (rule "concrete_and_1" (formula "9") (term "0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (rule "concrete_or_1" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "expand_moduloInteger" (formula "7") (term "0"))
                              (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "7") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "7") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                              (rule "div_literals" (formula "7") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "7") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "7") (term "0,1,0"))
                              (rule "mul_literals" (formula "7") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "expand_moduloInteger" (formula "4") (term "0"))
                              (rule "replace_int_RANGE" (formula "4") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "4") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                              (rule "add_literals" (formula "4") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "mod_axiom" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                              (rule "mul_literals" (formula "4") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                              (rule "polyDiv_pullOut" (formula "4") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "4") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "4") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,1"))
                              (rule "add_literals" (formula "4") (term "0,0,0,1,1,1"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                              (rule "mul_literals" (formula "4") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "4") (term "1"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                              (rule "add_literals" (formula "4") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "2") (term "1,0,0"))
                              (rule "replace_int_MIN" (formula "2") (term "0,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "mod_axiom" (formula "2") (term "1,0,0"))
                              (rule "div_literals" (formula "2") (term "0,0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_2" (formula "2") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "2"))
                              (rule "expand_moduloInteger" (formula "36") (term "1,0,0,0,1"))
                              (rule "replace_int_RANGE" (formula "36") (term "1,1,1,0,0,0,1"))
                              (rule "replace_int_MIN" (formula "36") (term "0,1,0,0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "36") (term "0,0,1,1,0,0,0,1"))
                              (rule "add_literals" (formula "36") (term "0,1,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
                              (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                              (rule "mod_axiom" (formula "36") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1"))
                              (rule "div_literals" (formula "36") (term "0,1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "36") (term "1,1,0,0,0,1"))
                              (rule "add_zero_right" (formula "36") (term "1,0,0,0,1"))
                              (rule "add_literals" (formula "36") (term "0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "36"))
                              (rule "mul_literals" (formula "29") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                              (rule "mul_literals" (formula "29") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                              (rule "mul_literals" (formula "8") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "38"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                              (rule "mul_literals" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1"))
                              (rule "mul_literals" (formula "18") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                              (rule "expand_moduloInteger" (formula "16") (term "1,0,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "16") (term "0,0,1,1,0,0,0,0"))
                              (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                              (rule "replace_int_RANGE" (formula "16") (term "1,1,1,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                              (rule "mod_axiom" (formula "16") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0"))
                              (rule "div_literals" (formula "16") (term "0,1,1,0,0,0,0"))
                              (rule "times_zero_2" (formula "16") (term "1,1,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0"))
                              (rule "expand_moduloInteger" (formula "26") (term "1,0,0,1,1,0"))
                              (rule "replace_int_MIN" (formula "26") (term "0,1,0,0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "26") (term "1,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "26") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "26") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,1,0"))
                              (rule "div_literals" (formula "26") (term "0,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "26") (term "1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "26") (term "1,0,0,1,1,0"))
                              (rule "add_literals" (formula "26") (term "0,0,1,1,0"))
                              (rule "div_literals" (formula "26") (term "0,1,1,0"))
                              (rule "mul_literals" (formula "26") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "0,1,0"))
                              (rule "expand_moduloInteger" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "15") (term "1,1,1,0,0,1,1,0"))
                              (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0"))
                              (rule "div_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "15") (term "1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "add_literals" (formula "15") (term "0,0,1,1,0"))
                              (rule "div_literals" (formula "15") (term "0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0"))
                              (rule "expand_divJint" (formula "1") (term "1,1,0"))
                              (rule "jdiv_axiom_inline" (formula "1") (term "0,1,1,0"))
                              (rule "div_literals" (formula "1") (term "1,0,1,1,0"))
                              (rule "qeq_literals" (formula "1") (term "0,0,1,1,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "1,0"))
                              (rule "div_axiom" (formula "10") (term "0,1,1") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "10") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "10") (term "0,1,1"))
                              (rule "ifthenelse_true_for" (formula "10") (term "1,1"))
                              (rule "equal_literals" (formula "10") (term "0"))
                              (rule "concrete_or_2" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                              (rule "add_literals" (formula "12") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "12") (term "1"))
                              (rule "add_literals" (formula "12") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "4") (term "1"))
                              (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "6") (term "1"))
                              (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "8") (term "1"))
                              (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "7") (term "1"))
                              (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "13") (term "1"))
                              (rule "applyEq" (formula "2") (term "0,1,0,1") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "mul_literals" (formula "12") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                              (rule "mul_literals" (formula "5") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0"))
                              (rule "qeq_literals" (formula "12") (term "0"))
                              (rule "concrete_or_1" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "39"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                              (rule "mul_literals" (formula "8") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "38"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "25"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                              (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,0"))
                              (rule "concrete_or_2" (formula "11") (term "0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0"))
                              (rule "qeq_literals" (formula "11") (term "0"))
                              (rule "concrete_or_2" (formula "11"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "25") (term "0,0"))
                              (rule "add_zero_left" (formula "25") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "mul_literals" (formula "25") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_1" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "9"))
                              (rule "times_zero_1" (formula "26") (term "0,0"))
                              (rule "add_zero_left" (formula "26") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "mul_literals" (formula "26") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "leq_literals" (formula "26") (term "0,0"))
                              (rule "concrete_or_2" (formula "26") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0"))
                              (rule "leq_literals" (formula "26") (term "0"))
                              (rule "concrete_or_2" (formula "26"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "32"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (rule "concrete_or_1" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                              (rule "mul_literals" (formula "13") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                              (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "11"))
                              (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "26"))
                              (rule "mul_literals" (formula "9") (term "1,1"))
                              (rule "add_literals" (formula "9") (term "1"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "25"))
                              (rule "leq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "24"))
                              (rule "mul_literals" (formula "23") (term "1,1"))
                              (rule "add_literals" (formula "23") (term "1"))
                              (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "10") (term "1,1"))
                              (rule "add_literals" (formula "10") (term "1"))
                              (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "6") (term "1,0,1"))
                              (rule "add_literals" (formula "6") (term "0,1"))
                              (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "7") (term "1,0,1"))
                              (rule "add_literals" (formula "7") (term "0,1"))
                              (rule "applyEq" (formula "8") (term "0,1,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "8") (term "1,0,1"))
                              (rule "add_literals" (formula "8") (term "0,1"))
                              (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "5") (term "1,0,1"))
                              (rule "add_literals" (formula "5") (term "0,1"))
                              (rule "applyEqRigid" (formula "11") (term "0,1,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "11") (term "1,0,1"))
                              (rule "add_literals" (formula "11") (term "0,1"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "4") (term "1,0,1"))
                              (rule "add_literals" (formula "4") (term "0,1"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "3") (term "1,0,1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "23"))
                              (rule "applyEq" (formula "2") (term "0,1,0,0,1") (ifseqformula "23"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,1"))
                              (rule "add_literals" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "24"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (rule "concrete_or_1" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "38"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "mul_literals" (formula "8") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "34"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "25"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_1" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "expand_moduloInteger" (formula "13") (term "1,0,0,1,0,1,0"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,0,0,1,0,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,0,0,1,0,1,0"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,1,0,0,1,0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "13") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,0"))
                              (rule "div_literals" (formula "13") (term "0,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,0,0,1,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0"))
                              (rule "div_literals" (formula "13") (term "0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,0"))
                              (rule "expand_moduloInteger" (formula "4") (term "1,0,0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "replace_int_MIN" (formula "4") (term "0,1,0,0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "4") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,1,1,0"))
                              (rule "mod_axiom" (formula "4") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,1,0"))
                              (rule "div_literals" (formula "4") (term "0,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "4") (term "1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "4") (term "1,0,0,1,1,0"))
                              (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                              (rule "div_literals" (formula "4") (term "0,1,1,0"))
                              (rule "mul_literals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "1,0"))
                              (rule "add_literals" (formula "4") (term "0,1,0"))
                              (rule "expand_divJint" (formula "2") (term "1,0,0,1,0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "2") (term "0,1,0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "2") (term "0,0,1,0,0,1,0,0,0"))
                              (rule "ifthenelse_true" (formula "2") (term "0,1,0,0,1,0,0,0"))
                              (rule "div_literals" (formula "2") (term "0,1,0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                              (rule "expand_moduloInteger" (formula "28") (term "0"))
                              (rule "replace_int_MIN" (formula "28") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "28") (term "1,1,0"))
                              (rule "add_literals" (formula "28") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "mod_axiom" (formula "28") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                              (rule "div_literals" (formula "28") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "28") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "28") (term "0,1,0"))
                              (rule "mul_literals" (formula "28") (term "1,0"))
                              (rule "add_literals" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "expand_moduloInteger" (formula "28") (term "0"))
                              (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "28") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "28") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "mod_axiom" (formula "28") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                              (rule "mul_literals" (formula "28") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                              (rule "mul_literals" (formula "28") (term "0,1"))
                              (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    moduloInt(add(Z(1(#)),
                  moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(moduloInt(add(Z(1(#)),
                              moduloInt(Z(1(3(4(4(5(5(3(3(#)))))))))))),
                Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "28") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (rule "concrete_or_2" (formula "28") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0"))
                              (rule "qeq_literals" (formula "28") (term "0"))
                              (rule "concrete_or_2" (formula "28"))
                              (rule "expand_moduloInteger" (formula "6") (term "0"))
                              (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "6") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "mod_axiom" (formula "6") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                              (rule "mul_literals" (formula "6") (term "0,0,1"))
                              (rule "expand_divJint" (formula "12") (term "0,0,0"))
                              (rule "jdiv_axiom_inline" (formula "12") (term "0,0,0,0"))
                              (rule "div_literals" (formula "12") (term "1,0,0,0,0"))
                              (rule "qeq_literals" (formula "12") (term "0,0,0,0,0"))
                              (rule "ifthenelse_true" (formula "12") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                              (rule "mul_literals" (formula "12") (term "0,0,1"))
                              (rule "expand_addJint" (formula "25") (term "1"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                              (rule "expand_moduloInteger" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "replace_int_MIN" (formula "25") (term "0,0,0,1,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,0,0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                              (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                              (rule "div_literals" (formula "25") (term "0,1,1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "cnf_rightDist" (formula "38") (term "0"))
                              (rule "expand_moduloInteger" (formula "3") (term "0"))
                              (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "3") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "mod_axiom" (formula "3") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "div_literals" (formula "3") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "3") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "3") (term "0,1,0"))
                              (rule "mul_literals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "expand_moduloInteger" (formula "1") (term "1"))
                              (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "1") (term "1,1,1"))
                              (rule "replace_int_MIN" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "0,1,1"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "mod_axiom" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "div_literals" (formula "1") (term "0,1,1,0"))
                              (rule "times_zero_2" (formula "1") (term "1,1,0"))
                              (rule "add_zero_right" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "commute_or" (formula "34") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "36") (term "0,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "36") (term "0,0,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "36") (term "0,0,0,1"))
                              (rule "replace_int_RANGE" (formula "36") (term "1,1,0,0,1"))
                              (rule "add_literals" (formula "36") (term "0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,1"))
                              (rule "mul_literals" (formula "36") (term "0,0,1"))
                              (rule "mod_axiom" (formula "36") (term "0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1"))
                              (rule "div_literals" (formula "36") (term "0,1,0,1,0,1"))
                              (rule "times_zero_2" (formula "36") (term "1,0,1,0,1"))
                              (rule "add_zero_right" (formula "36") (term "0,1,0,1"))
                              (rule "mul_literals" (formula "36") (term "1,0,1"))
                              (rule "add_literals" (formula "36") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "36"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                              (rule "mul_literals" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "38"))
                              (rule "mul_literals" (formula "31") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                              (rule "mul_literals" (formula "31") (term "1"))
                              (rule "expand_moduloInteger" (formula "30") (term "0,0,0"))
                              (rule "replace_int_MIN" (formula "30") (term "0,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "30") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                              (rule "mul_literals" (formula "30") (term "0,0,0"))
                              (rule "mod_axiom" (formula "30") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0"))
                              (rule "div_literals" (formula "30") (term "0,1,0,1,0,0"))
                              (rule "times_zero_2" (formula "30") (term "1,0,1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "1,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "6") (term "0,0,0"))
                              (rule "replace_int_MIN" (formula "6") (term "0,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "6") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "mod_axiom" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                              (rule "div_literals" (formula "6") (term "0,1,0,1,0,0"))
                              (rule "times_zero_2" (formula "6") (term "1,0,1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "15") (term "0,0,0"))
                              (rule "replace_int_MIN" (formula "15") (term "0,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "15") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "mod_axiom" (formula "15") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
                              (rule "div_literals" (formula "15") (term "0,1,0,1,0,0"))
                              (rule "times_zero_2" (formula "15") (term "1,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "25") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,1,1,0"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,1,1,0"))
                              (rule "add_literals" (formula "25") (term "0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "1,0"))
                              (rule "add_literals" (formula "25") (term "0,1,0"))
                              (rule "mod_axiom" (formula "25") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                              (rule "div_literals" (formula "25") (term "0,1,1,1,0"))
                              (rule "mul_literals" (formula "25") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "25") (term "1,1,0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "expand_moduloInteger" (formula "13") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "13") (term "0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "13") (term "1,1,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1,1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,0"))
                              (rule "mod_axiom" (formula "13") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                              (rule "div_literals" (formula "13") (term "0,1,1,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,0"))
                              (rule "add_literals" (formula "13") (term "1,0"))
                              (rule "div_axiom" (formula "38") (term "0,1,0,2,0") (inst "quotient=quotient_1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (rule "ifthenelse_true_for" (formula "1") (term "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "41") (term "0,1,0,2,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "41") (term "0,2,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "39"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (rule "concrete_or_2" (formula "3") (term "0"))
                              (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (rule "concrete_or_2" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "5"))
                              (rule "mul_literals" (formula "36") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0"))
                              (rule "add_literals" (formula "36") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                              (rule "mul_literals" (formula "36") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "36") (term "0,0"))
                              (rule "concrete_or_2" (formula "36") (term "0"))
                              (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                              (rule "add_literals" (formula "36") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0"))
                              (rule "add_zero_right" (formula "36") (term "0,0"))
                              (rule "leq_literals" (formula "36") (term "0"))
                              (rule "concrete_or_2" (formula "36"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "37"))
                              (rule "mul_literals" (formula "15") (term "1,1"))
                              (rule "add_literals" (formula "15") (term "1"))
                              (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "37"))
                              (rule "times_zero_2" (formula "6") (term "1,1"))
                              (rule "add_literals" (formula "6") (term "1"))
                              (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "37"))
                              (rule "times_zero_2" (formula "5") (term "1,1"))
                              (rule "add_literals" (formula "5") (term "1"))
                              (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "37"))
                              (rule "times_zero_2" (formula "2") (term "1,1"))
                              (rule "add_zero_right" (formula "2") (term "1"))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "37"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "36"))
                              (rule "qeq_literals" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "3") (term "1,1"))
                              (rule "add_zero_right" (formula "3") (term "1"))
                              (rule "applyEqRigid" (formula "45") (term "0,1,0,0,2,0") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "45") (term "1,0,0,2,0"))
                              (rule "add_zero_right" (formula "45") (term "0,0,2,0"))
                              (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "36"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "42"))
                              (rule "leq_literals" (formula "5") (term "0"))
                              (rule "concrete_or_1" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "28"))
                              (rule "leq_literals" (formula "13") (term "0"))
                              (rule "concrete_or_1" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "35"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (rule "concrete_or_1" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "32"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "28"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0,0") (ifseqformula "18"))
                              (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "42"))
                              (rule "concrete_or_2" (formula "38"))
                              (rule "expand_divJint" (formula "13") (term "1,1,0"))
                              (rule "jdiv_axiom_inline" (formula "13") (term "0,1,1,0"))
                              (rule "div_literals" (formula "13") (term "1,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,0,2,0,1,1,0"))
                              (rule "qeq_literals" (formula "13") (term "0,0,1,1,0"))
                              (rule "ifthenelse_true" (formula "13") (term "0,1,1,0"))
                              (rule "expand_moduloInteger" (formula "4") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "4") (term "0,1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,1,0"))
                              (rule "replace_int_RANGE" (formula "4") (term "1,1,1,1,0"))
                              (rule "add_literals" (formula "4") (term "0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                              (rule "add_literals" (formula "4") (term "0,1,0"))
                              (rule "mod_axiom" (formula "4") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0"))
                              (rule "div_literals" (formula "4") (term "0,1,1,1,0"))
                              (rule "times_zero_2" (formula "4") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "4") (term "1,1,0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "expand_moduloInteger" (formula "3") (term "0,0"))
                              (rule "replace_int_RANGE" (formula "3") (term "1,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0"))
                              (rule "mul_literals" (formula "3") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "3") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,1"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,1"))
                              (rule "polyDiv_pullOut" (formula "3") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,0"))
                              (rule "equal_literals" (formula "3") (term "0,0,0"))
                              (rule "ifthenelse_false" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0"))
                              (rule "mul_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "expand_moduloInteger" (formula "28") (term "0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "28") (term "1,1,0,1,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0,1,0,0,0"))
                              (rule "replace_int_MIN" (formula "28") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "28") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                              (rule "mul_literals" (formula "28") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                              (rule "polyDiv_pullOut" (formula "28") (term "0,1,1") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,2,0,1,1"))
                              (rule "equal_literals" (formula "28") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "28") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "1"))
                              (rule "polyDiv_pullOut" (formula "28") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,2,0,1,1"))
                              (rule "equal_literals" (formula "28") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "28") (term "0,1,1"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,1,1,1,1"))
                              (rule "add_literals" (formula "28") (term "0,0,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "1"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,1"))
                              (rule "polyDiv_pullOut" (formula "28") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,2,0,1,0,1"))
                              (rule "equal_literals" (formula "28") (term "0,0,1,0,1"))
                              (rule "ifthenelse_false" (formula "28") (term "0,1,0,1"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "6") (term "0,1,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,1,0,0,0"))
                              (rule "replace_int_MIN" (formula "6") (term "0,0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "6") (term "1,1,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,1,0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,1,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "6") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                              (rule "mul_literals" (formula "6") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
                              (rule "polyDiv_pullOut" (formula "6") (term "0,1,0,0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "6") (term "0,0,1,0,0,1,1"))
                              (rule "ifthenelse_false" (formula "6") (term "0,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0,1,1"))
                              (rule "mul_literals" (formula "6") (term "1,0,0,0,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,1,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "6") (term "0,0,1,1,1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0,1,1"))
                              (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,1,1"))
                              (rule "equal_literals" (formula "6") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "6") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,1"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,1"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "6") (term "1"))
                              (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                              (rule "equal_literals" (formula "6") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "6") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "6") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,1"))
                              (rule "add_literals" (formula "6") (term "0,0,0,1,1,1"))
                              (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                              (rule "mul_literals" (formula "6") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "6") (term "1"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,1"))
                              (rule "add_literals" (formula "6") (term "0,0,0,1"))
                              (rule "expand_addJint" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                              (rule "mul_literals" (formula "12") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                              (rule "expand_moduloInteger" (formula "25") (term "1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                              (rule "add_literals" (formula "25") (term "0,0,1,1"))
                              (rule "inEqSimp_homoInEq0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "mod_axiom" (formula "25") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polyDiv_pullOut" (formula "25") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "25") (term "0,0,1,1"))
                              (rule "ifthenelse_false" (formula "25") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1,1,1,1"))
                              (rule "add_literals" (formula "25") (term "0,0,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                              (rule "mul_literals" (formula "25") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "1"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                              (rule "add_literals" (formula "25") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "2") (term "0"))
                              (rule "replace_int_RANGE" (formula "2") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0"))
                              (rule "replace_int_MIN" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "mod_axiom" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polyDiv_pullOut" (formula "2") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,0"))
                              (rule "equal_literals" (formula "2") (term "0,0,0"))
                              (rule "ifthenelse_false" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                              (rule "mul_literals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "expand_moduloInteger" (formula "38") (term "1"))
                              (rule "replace_int_RANGE" (formula "38") (term "1,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "38") (term "0,0,1,1"))
                              (rule "replace_int_MIN" (formula "38") (term "0,1"))
                              (rule "add_literals" (formula "38") (term "0,1,1"))
                              (rule "mod_axiom" (formula "38") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                              (rule "div_literals" (formula "38") (term "0,1,1,1"))
                              (rule "times_zero_2" (formula "38") (term "1,1,1"))
                              (rule "add_zero_right" (formula "38") (term "1,1"))
                              (rule "add_literals" (formula "38") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "38"))
                              (rule "leq_literals" (formula "33") (term "0"))
                              (rule "concrete_or_1" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "24"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (rule "concrete_or_1" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                              (rule "mul_literals" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "16"))
                              (rule "leq_literals" (formula "14") (term "0"))
                              (rule "concrete_or_1" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "expand_moduloInteger" (formula "14") (term "0"))
                              (rule "replace_int_MIN" (formula "14") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "14") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "14") (term "1,1,0"))
                              (rule "add_literals" (formula "14") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "mod_axiom" (formula "14") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "div_literals" (formula "14") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "14") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "expand_moduloInteger" (formula "6") (term "0"))
                              (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "6") (term "1,1,0"))
                              (rule "replace_int_MIN" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "mod_axiom" (formula "6") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                              (rule "div_literals" (formula "6") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "6") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "6") (term "0,1,0"))
                              (rule "mul_literals" (formula "6") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "22"))
                              (rule "leq_literals" (formula "6") (term "0"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "expand_moduloInteger" (formula "26") (term "0"))
                              (rule "replace_int_MIN" (formula "26") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "26") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "26") (term "1,1,0"))
                              (rule "add_literals" (formula "26") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "0,0"))
                              (rule "mod_axiom" (formula "26") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                              (rule "div_literals" (formula "26") (term "0,1,0,1,0"))
                              (rule "times_zero_2" (formula "26") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "26") (term "0,1,0"))
                              (rule "mul_literals" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "expand_mulJint" (formula "23") (term "0"))
                              (rule "mul_literals" (formula "23") (term "0,0"))
                              (rule "expand_mulJint" (formula "12") (term "0"))
                              (rule "mul_literals" (formula "12") (term "0,0"))
                              (rule "distr_forallAnd" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "expand_moduloInteger" (formula "11") (term "1,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,1,1,0"))
                              (rule "replace_int_RANGE" (formula "11") (term "1,1,1,1,0"))
                              (rule "replace_int_MIN" (formula "11") (term "0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                              (rule "add_literals" (formula "11") (term "0,1,0"))
                              (rule "mod_axiom" (formula "11") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                              (rule "div_literals" (formula "11") (term "0,1,1,1,0"))
                              (rule "times_zero_2" (formula "11") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0"))
                              (rule "expand_mulJint" (formula "3") (term "0"))
                              (rule "mul_literals" (formula "3") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "2") (term "0,1,0,0,1,0,1"))
                              (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,0,1,0,1"))
                              (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,0,1,0,1"))
                              (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "mod_axiom" (formula "2") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,0,0,1,0,1"))
                              (rule "equal_literals" (formula "2") (term "0,0,1,0,0,1,0,1"))
                              (rule "ifthenelse_false" (formula "2") (term "0,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,0,1,0,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,1"))
                              (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            moduloInt(Z(1(3(4(4(5(5(3(3(#))))))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(2(#))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,0,1"))
                              (rule "equal_literals" (formula "2") (term "0,0,1,0,1"))
                              (rule "ifthenelse_false" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0,1"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0,1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                              (rule "polySimp_addComm0" (formula "2") (term "1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                              (rule "polyDiv_pullOut" (formula "2") (term "0,1,0,1") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                              (rule "equal_literals" (formula "2") (term "0,0,1,0,1"))
                              (rule "ifthenelse_false" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0,1"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,1,0,1"))
                              (rule "polySimp_addComm0" (formula "2") (term "1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                              (rule "expand_moduloInteger" (formula "25") (term "1,0,0"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,1,0,0"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0"))
                              (rule "mod_axiom" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                              (rule "div_literals" (formula "25") (term "0,1,1,0,0"))
                              (rule "times_zero_2" (formula "25") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0"))
                              (rule "expand_moduloInteger" (formula "25") (term "0,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,0,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "25") (term "1,1,0,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,0,1,0,0,1,1"))
                              (rule "add_literals" (formula "25") (term "0,1,0,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1,1"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "mod_axiom" (formula "25") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0"))
                              (rule "div_literals" (formula "25") (term "0,1,0,1,0,0,1,0"))
                              (rule "times_zero_2" (formula "25") (term "1,0,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "25") (term "0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "25") (term "0,0,1,0"))
                              (rule "div_literals" (formula "25") (term "0,1,0"))
                              (rule "mul_literals" (formula "25") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "expand_moduloInteger" (formula "5") (term "0,0"))
                              (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,0"))
                              (rule "replace_int_RANGE" (formula "5") (term "1,1,0,0"))
                              (rule "replace_int_MIN" (formula "5") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                              (rule "mod_axiom" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "5") (term "0,0,0,0,1"))
                              (rule "polyDiv_pullOut" (formula "5") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "5") (term "0,0,1,0,1"))
                              (rule "ifthenelse_false" (formula "5") (term "0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,1"))
                              (rule "mul_literals" (formula "5") (term "1,0,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,0,1"))
                              (rule "add_literals" (formula "5") (term "0,0,0,1,1,0,1"))
                              (rule "polySimp_addComm0" (formula "5") (term "1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "1"))
                              (rule "add_literals" (formula "5") (term "1,1,1"))
                              (rule "times_zero_1" (formula "5") (term "1,1"))
                              (rule "add_zero_right" (formula "5") (term "1"))
                              (rule "polySimp_addComm1" (formula "5") (term "1"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                              (rule "add_literals" (formula "5") (term "0,0,1"))
                              (rule "expand_moduloInteger" (formula "10") (term "0,0,0"))
                              (rule "replace_int_MIN" (formula "10") (term "0,0,0,0"))
                              (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0,0,0"))
                              (rule "replace_int_RANGE" (formula "10") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,1,0,0,0"))
                              (rule "mod_axiom" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                              (rule "div_literals" (formula "10") (term "0,1,1,0,0,0"))
                              (rule "times_zero_2" (formula "10") (term "1,1,0,0,0"))
                              (rule "add_zero_right" (formula "10") (term "1,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "expand_moduloInteger" (formula "10") (term "1,0,0,1,0,0,1,1"))
                              (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,1,0,0,1,0,0,1,1"))
                              (rule "replace_int_RANGE" (formula "10") (term "1,1,1,0,0,1,0,0,1,1"))
                              (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,1,1,0,0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,1"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,1"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "mod_axiom" (formula "10") (term "1,0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "div_literals" (formula "10") (term "0,1,1,0,0,1,0,0,1,0"))
                              (rule "times_zero_2" (formula "10") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "10") (term "1,0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "10") (term "0,0,1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "allLeft" (formula "31") (inst "t=i_0"))
                              (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "41"))
                              (rule "concrete_or_4" (formula "31"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                              (rule "mul_literals" (formula "31") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "9"))
                              (rule "andLeft" (formula "31"))
                              (rule "inEqSimp_homoInEq1" (formula "31"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                              (rule "add_literals" (formula "31") (term "1,1,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0"))
                              (rule "add_zero_right" (formula "31") (term "0"))
                              (rule "leq_literals" (formula "31"))
                              (rule "closeFalse" (formula "31"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "19"))
                        (branch "Case 1"
                           (rule "andRight" (formula "19"))
                           (branch "Case 1"
                              (rule "notRight" (formula "19"))
                              (rule "insert_constant_value" (formula "15") (term "0,0,1"))
                              (rule "insert_constant_value" (formula "15") (term "1,0,1"))
                              (rule "insert_constant_value" (formula "16") (term "0,0,1,1"))
                              (rule "insert_constant_value" (formula "16") (term "1,0,1,1"))
                              (rule "expand_inLong" (formula "17") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "expand_inInt" (formula "5"))
                              (rule "replace_long_MIN" (formula "17") (term "0,1,1,0"))
                              (rule "replace_long_MAX" (formula "17") (term "1,0,1,0"))
                              (rule "replace_int_MAX" (formula "5") (term "1,0"))
                              (rule "replace_int_MIN" (formula "5") (term "0,1"))
                              (rule "notLeft" (formula "9"))
                              (rule "close" (formula "17") (ifseqformula "1"))
                           )
                           (branch "Case 2"
                              (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                              (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                              (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                              (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                              (rule "expand_inInt" (formula "4"))
                              (rule "expand_inLong" (formula "16") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "19"))
                              (rule "replace_int_MIN" (formula "4") (term "0,1"))
                              (rule "replace_int_MAX" (formula "4") (term "1,0"))
                              (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                              (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                              (rule "notLeft" (formula "8"))
                              (rule "andLeft" (formula "4"))
                              (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1"))
                              (rule "translateJavaAddInt" (formula "14") (term "1"))
                              (rule "translateJavaMulInt" (formula "15") (term "1"))
                              (rule "translateJavaDivInt" (formula "14") (term "0,1"))
                              (rule "translateJavaDivInt" (formula "15") (term "0,1,1"))
                              (rule "translateJavaAddInt" (formula "15") (term "1,1"))
                              (rule "applyOnRigidFormula" (formula "20"))
                              (rule "simplifyUpdate1" (formula "20") (term "1"))
                              (rule "inEqSimp_ltRight" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "20") (term "0"))
                              (rule "applyOnRigidTerm" (formula "20") (term "0,0"))
                              (rule "simplifyUpdate1" (formula "20") (term "2,0,0"))
                              (rule "simplifyUpdate1" (formula "20") (term "1,0,0"))
                              (rule "applyOnPV" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "19"))
                           (branch "Case 1"
                              (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                              (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                              (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                              (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                              (rule "expand_inInt" (formula "4"))
                              (rule "expand_inLong" (formula "16") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "19"))
                              (rule "replace_int_MIN" (formula "4") (term "0,1"))
                              (rule "replace_int_MAX" (formula "4") (term "1,0"))
                              (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                              (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                              (rule "notLeft" (formula "8"))
                              (rule "andLeft" (formula "4"))
                              (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1"))
                              (rule "translateJavaAddInt" (formula "14") (term "1"))
                              (rule "translateJavaMulInt" (formula "15") (term "1"))
                              (rule "translateJavaDivInt" (formula "14") (term "0,1"))
                              (rule "close" (formula "20") (ifseqformula "14"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "19"))
                              (branch "Case 1"
                                 (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                                 (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                                 (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                                 (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                                 (rule "expand_inInt" (formula "4"))
                                 (rule "expand_inLong" (formula "16") (term "1,0"))
                                 (rule "simplifyUpdate2" (formula "19"))
                                 (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                 (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
                                 (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1"))
                                 (rule "translateJavaAddInt" (formula "14") (term "1"))
                                 (rule "translateJavaMulInt" (formula "15") (term "1"))
                                 (rule "translateJavaDivInt" (formula "14") (term "0,1"))
                                 (rule "translateJavaAddInt" (formula "15") (term "1,1"))
                                 (rule "translateJavaDivInt" (formula "15") (term "0,1,1"))
                                 (rule "close" (formula "20") (ifseqformula "15"))
                              )
                              (branch "Case 2"
                                 (rule "simplifyUpdate2" (formula "19") (userinteraction))
                                 (rule "allRight" (formula "19") (inst "sk=i_0") (userinteraction))
                                 (rule "allLeftHide" (formula "16") (inst "t=i_0") (userinteraction))
                                 (rule "insert_constant_value" (formula "14") (term "0,0,1"))
                                 (rule "insert_constant_value" (formula "14") (term "1,0,1"))
                                 (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
                                 (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
                                 (rule "expand_inInt" (formula "4"))
                                 (rule "expand_inLong" (formula "19") (term "1"))
                                 (rule "expand_inLong" (formula "16") (term "1"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                 (rule "replace_long_MAX" (formula "19") (term "1,0,1"))
                                 (rule "replace_long_MIN" (formula "19") (term "0,1,1"))
                                 (rule "replace_long_MIN" (formula "16") (term "0,1,1"))
                                 (rule "replace_long_MAX" (formula "16") (term "1,0,1"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "impRight" (formula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "translateJavaSubInt" (formula "11") (term "0,2,0,0,1"))
                                 (rule "translateJavaAddInt" (formula "16") (term "1"))
                                 (rule "translateJavaMulInt" (formula "17") (term "1"))
                                 (rule "translateJavaDivInt" (formula "16") (term "0,1"))
                                 (rule "translateJavaDivInt" (formula "17") (term "0,1,1"))
                                 (rule "translateJavaAddInt" (formula "17") (term "1,1"))
                                 (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "2"))
                                 (rule "concrete_and_3" (formula "18") (term "0"))
                                 (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "22"))
                                 (rule "concrete_impl_3" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "inEqSimp_ltRight" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "19"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "9"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_and_2" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Case 2"
         (rule "insert_constant_value" (formula "14") (term "0,0,1"))
         (rule "insert_constant_value" (formula "14") (term "1,0,1"))
         (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
         (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
         (rule "expand_inInt" (formula "4"))
         (rule "expand_inLong" (formula "16") (term "1,0"))
         (rule "simplifyUpdate2" (formula "19"))
         (rule "replace_int_MAX" (formula "4") (term "1,0"))
         (rule "replace_int_MIN" (formula "4") (term "0,1"))
         (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
         (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "4"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1"))
         (rule "translateJavaAddInt" (formula "14") (term "1"))
         (rule "translateJavaMulInt" (formula "15") (term "1"))
         (rule "translateJavaDivInt" (formula "14") (term "0,1"))
         (rule "translateJavaDivInt" (formula "15") (term "0,1,1"))
         (rule "translateJavaAddInt" (formula "15") (term "1,1"))
         (rule "applyOnRigidFormula" (formula "20"))
         (rule "simplifyUpdate1" (formula "20") (term "1"))
         (rule "applyOnPV" (formula "20") (term "0"))
         (rule "eqClose" (formula "20"))
         (rule "closeTrue" (formula "20"))
      )
   )
   (branch "Case 2"
      (rule "insert_constant_value" (formula "14") (term "0,0,1"))
      (rule "insert_constant_value" (formula "14") (term "1,0,1"))
      (rule "insert_constant_value" (formula "15") (term "0,0,1,1"))
      (rule "insert_constant_value" (formula "15") (term "1,0,1,1"))
      (rule "expand_inInt" (formula "4"))
      (rule "simplifyUpdate2" (formula "19"))
      (rule "expand_inLong" (formula "16") (term "1,0"))
      (rule "replace_int_MIN" (formula "4") (term "0,1"))
      (rule "replace_int_MAX" (formula "4") (term "1,0"))
      (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
      (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "4"))
      (rule "allRight" (formula "20") (inst "sk=f_0"))
      (rule "allRight" (formula "20") (inst "sk=o_0"))
      (rule "orRight" (formula "20"))
      (rule "orRight" (formula "20"))
      (rule "simplifyUpdate2" (formula "20"))
      (rule "orRight" (formula "20"))
      (rule "orRight" (formula "20"))
      (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1"))
      (rule "translateJavaAddInt" (formula "14") (term "1"))
      (rule "translateJavaMulInt" (formula "15") (term "1"))
      (rule "translateJavaDivInt" (formula "14") (term "0,1"))
      (rule "translateJavaAddInt" (formula "15") (term "1,1"))
      (rule "translateJavaDivInt" (formula "15") (term "0,1,1"))
      (rule "inEqSimp_ltRight" (formula "18"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "applyOnRigidFormula" (formula "24"))
      (rule "simplifyUpdate1" (formula "24") (term "1"))
      (rule "applyOnRigidFormula" (formula "23"))
      (rule "simplifyUpdate2" (formula "23") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
      (rule "applyOnRigidTerm" (formula "24") (term "0"))
      (rule "applyOnPV" (formula "24") (term "0,0"))
      (rule "simplifyUpdate1" (formula "24") (term "2,0"))
      (rule "simplifyUpdate1" (formula "24") (term "1,0"))
      (rule "eqClose" (formula "24"))
      (rule "closeTrue" (formula "24"))
   )
)
)
}
